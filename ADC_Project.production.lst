

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jul 23 15:38:48 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Generated 09/02/2023 GMT
    65                           ; 
    66                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4620 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99                           	psect	idataCOMRAM
   100   002056                     __pidataCOMRAM:
   101                           	callstack 0
   102                           
   103                           ;initializer for _lat_registers
   104   002056  89                 	db	137
   105   002057  0F                 	db	15
   106   002058  8A                 	db	138
   107   002059  0F                 	db	15
   108   00205A  8B                 	db	139
   109   00205B  0F                 	db	15
   110   00205C  8C                 	db	140
   111   00205D  0F                 	db	15
   112   00205E  8D                 	db	141
   113   00205F  0F                 	db	15
   114                           
   115                           ;initializer for _RB7_Flag
   116   002060  01                 	db	1
   117                           
   118                           ;initializer for _RB6_Flag
   119   002061  01                 	db	1
   120                           
   121                           ;initializer for _RB5_Flag
   122   002062  01                 	db	1
   123                           
   124                           ;initializer for _RB4_Flag
   125   002063  01                 	db	1
   126                           
   127                           	psect	idataBANK0
   128   001F3A                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for _port_registers
   132   001F3A  80                 	db	128
   133   001F3B  0F                 	db	15
   134   001F3C  81                 	db	129
   135   001F3D  0F                 	db	15
   136   001F3E  82                 	db	130
   137   001F3F  0F                 	db	15
   138   001F40  83                 	db	131
   139   001F41  0F                 	db	15
   140   001F42  84                 	db	132
   141   001F43  0F                 	db	15
   142                           
   143                           ;initializer for _tris_registers
   144   001F44  92                 	db	146
   145   001F45  0F                 	db	15
   146   001F46  93                 	db	147
   147   001F47  0F                 	db	15
   148   001F48  94                 	db	148
   149   001F49  0F                 	db	15
   150   001F4A  95                 	db	149
   151   001F4B  0F                 	db	15
   152   001F4C  96                 	db	150
   153   001F4D  0F                 	db	15
   154                           
   155                           ;initializer for _lcd_2
   156   001F4E  32                 	db	50
   157   001F4F  3A                 	db	58
   158   001F50  03                 	db	3
   159   001F51  0B                 	db	11
   160   001F52  13                 	db	19
   161   001F53  1B                 	db	27
   162   001F54  23                 	db	35
   163   001F55  2B                 	db	43
   164   001F56  33                 	db	51
   165   001F57  3B                 	db	59
   166                           
   167                           ;initializer for _adc_1
   168   001F58  2C                 	db	low _ADC_DefaultInterruptHandler
   169   001F59  20                 	db	high _ADC_DefaultInterruptHandler
   170   001F5A  00                 	db	0
   171   001F5B  05                 	db	5
   172   001F5C  05                 	db	5
   173   001F5D  00                 	db	0
   174   001F5E  02                 	db	2
   175                           
   176                           ;initializer for _lcd_1
   177   001F5F  02                 	db	2
   178   001F60  0A                 	db	10
   179   001F61  12                 	db	18
   180   001F62  1A                 	db	26
   181   001F63  22                 	db	34
   182   001F64  2A                 	db	42
   183                           
   184                           	psect	smallconst
   185   001000                     __psmallconst:
   186                           	callstack 0
   187   001000  00                 	db	0
   188   001001                     _btn_values:
   189                           	callstack 0
   190   001001  37                 	db	55
   191   001002  38                 	db	56
   192   001003  39                 	db	57
   193   001004  2F                 	db	47
   194   001005  34                 	db	52
   195   001006  35                 	db	53
   196   001007  36                 	db	54
   197   001008  2A                 	db	42
   198   001009  31                 	db	49
   199   00100A  32                 	db	50
   200   00100B  33                 	db	51
   201   00100C  2D                 	db	45
   202   00100D  23                 	db	35
   203   00100E  30                 	db	48
   204   00100F  3D                 	db	61
   205   001010  2B                 	db	43
   206   001011                     __end_of_btn_values:
   207                           	callstack 0
   208   000000                     _SPBRGH	set	4016
   209   000000                     _SPBRG	set	4015
   210   000000                     _TXREG	set	4013
   211   000000                     _TXSTAbits	set	4012
   212   000000                     _RCREG	set	4014
   213   000000                     _RCSTAbits	set	4011
   214   000000                     _TMR3L	set	4018
   215   000000                     _TMR3H	set	4019
   216   000000                     _TMR1L	set	4046
   217   000000                     _TMR1H	set	4047
   218   000000                     _TMR0L	set	4054
   219   000000                     _TMR0H	set	4055
   220   000000                     _INTCON2bits	set	4081
   221   000000                     _SSPSTATbits	set	4039
   222   000000                     _SSPADD	set	4040
   223   000000                     _SSPCON2bits	set	4037
   224   000000                     _SSPCON1bits	set	4038
   225   000000                     _EECON2	set	4007
   226   000000                     _CCPR2H	set	4028
   227   000000                     _CCPR2L	set	4027
   228   000000                     _CCPR1H	set	4031
   229   000000                     _CCPR1L	set	4030
   230   000000                     _ADCON1bits	set	4033
   231   000000                     _ADRESL	set	4035
   232   000000                     _ADRESH	set	4036
   233   000000                     _INTCONbits	set	4082
   234   000000                     _TRISD	set	3989
   235   000000                     _TRISC	set	3988
   236   000000                     _TRISB	set	3987
   237   000000                     _TRISE	set	3990
   238   000000                     _PORTBbits	set	3969
   239   000000                     _TRISCbits	set	3988
   240   000000                     _PIE1bits	set	3997
   241   000000                     _ADCON2bits	set	4032
   242   000000                     _ADCON0bits	set	4034
   243   000000                     _PORTE	set	3972
   244   000000                     _PORTD	set	3971
   245   000000                     _PORTC	set	3970
   246   000000                     _PORTB	set	3969
   247   000000                     _PORTA	set	3968
   248   000000                     _LATA	set	3977
   249   000000                     _TRISA	set	3986
   250   000000                     _PIE2bits	set	4000
   251   000000                     _CCP2CONbits	set	4026
   252   000000                     _CCP1CONbits	set	4029
   253   000000                     _PIR1bits	set	3998
   254   000000                     _EECON1bits	set	4006
   255   000000                     _EEDATA	set	4008
   256   000000                     _EEADR	set	4009
   257   000000                     _EEADRH	set	4010
   258   000000                     _T3CONbits	set	4017
   259   000000                     _PIR2bits	set	4001
   260   000000                     _LATE	set	3981
   261   000000                     _LATD	set	3980
   262   000000                     _LATC	set	3979
   263   000000                     _LATB	set	3978
   264   000000                     _TMR2	set	4044
   265   000000                     _T2CONbits	set	4042
   266   000000                     _T1CONbits	set	4045
   267   000000                     _T0CONbits	set	4053
   268   000000                     _INTCON3bits	set	4080
   269   000000                     _SSPBUF	set	4041
   270   000000                     _BAUDCONbits	set	4024
   271   001011                     STR_1:
   272   001011  25                 	db	37
   273   001012  69                 	db	105	;'i'
   274   001013  00                 	db	0
   275   001014  00                 	db	0	; dummy byte at the end
   276   000000                     
   277                           ; #config settings
   278                           
   279                           	psect	cinit
   280   001D36                     __pcinit:
   281                           	callstack 0
   282   001D36                     start_initialization:
   283                           	callstack 0
   284   001D36                     __initialization:
   285                           	callstack 0
   286                           
   287                           ; Initialize objects allocated to BANK0 (43 bytes)
   288                           ; load TBLPTR registers with __pidataBANK0
   289   001D36  0E3A               	movlw	low __pidataBANK0
   290   001D38  6EF6               	movwf	tblptrl,c
   291   001D3A  0E1F               	movlw	high __pidataBANK0
   292   001D3C  6EF7               	movwf	tblptrh,c
   293   001D3E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   294   001D40  6EF8               	movwf	tblptru,c
   295   001D42  EE00  F080         	lfsr	0,__pdataBANK0
   296   001D46  EE10 F02B          	lfsr	1,43
   297   001D4A                     copy_data0:
   298   001D4A  0009               	tblrd		*+
   299   001D4C  CFF5 FFEE          	movff	tablat,postinc0
   300   001D50  50E5               	movf	postdec1,w,c
   301   001D52  50E1               	movf	fsr1l,w,c
   302   001D54  E1FA               	bnz	copy_data0
   303                           
   304                           ; Initialize objects allocated to COMRAM (14 bytes)
   305                           ; load TBLPTR registers with __pidataCOMRAM
   306   001D56  0E56               	movlw	low __pidataCOMRAM
   307   001D58  6EF6               	movwf	tblptrl,c
   308   001D5A  0E20               	movlw	high __pidataCOMRAM
   309   001D5C  6EF7               	movwf	tblptrh,c
   310   001D5E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   311   001D60  6EF8               	movwf	tblptru,c
   312   001D62  EE00  F064         	lfsr	0,__pdataCOMRAM
   313   001D66  EE10 F00E          	lfsr	1,14
   314   001D6A                     copy_data1:
   315   001D6A  0009               	tblrd		*+
   316   001D6C  CFF5 FFEE          	movff	tablat,postinc0
   317   001D70  50E5               	movf	postdec1,w,c
   318   001D72  50E1               	movf	fsr1l,w,c
   319   001D74  E1FA               	bnz	copy_data1
   320                           
   321                           ; Clear objects allocated to BANK0 (6 bytes)
   322   001D76  0100               	movlb	0
   323   001D78  6BBA               	clrf	(__pbssBANK0+5)& (0+255),b
   324   001D7A  6BB9               	clrf	(__pbssBANK0+4)& (0+255),b
   325   001D7C  6BB8               	clrf	(__pbssBANK0+3)& (0+255),b
   326   001D7E  6BB7               	clrf	(__pbssBANK0+2)& (0+255),b
   327   001D80  6BB6               	clrf	(__pbssBANK0+1)& (0+255),b
   328   001D82  6BB5               	clrf	__pbssBANK0& (0+255),b
   329                           
   330                           ; Clear objects allocated to COMRAM (69 bytes)
   331   001D84  EE00  F001         	lfsr	0,__pbssCOMRAM
   332   001D88  0E45               	movlw	69
   333   001D8A                     clear_0:
   334   001D8A  6AEE               	clrf	postinc0,c
   335   001D8C  06E8               	decf	wreg,f,c
   336   001D8E  E1FD               	bnz	clear_0
   337   001D90                     end_of_initialization:
   338                           	callstack 0
   339   001D90                     __end_of__initialization:
   340                           	callstack 0
   341   001D90  9072               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342   001D92  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   343   001D94  0100               	movlb	0
   344   001D96  EFD4  F00F         	goto	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMRAM
   347   000001                     __pbssCOMRAM:
   348                           	callstack 0
   349   000001                     _USART_OverrunErrorHandler:
   350                           	callstack 0
   351   000001                     	ds	2
   352   000003                     _USART_FramingErrorHandler:
   353                           	callstack 0
   354   000003                     	ds	2
   355   000005                     _USART_RxDefaultInterruptHandler:
   356                           	callstack 0
   357   000005                     	ds	2
   358   000007                     _USART_TxDefaultInterruptHandler:
   359                           	callstack 0
   360   000007                     	ds	2
   361   000009                     _TMR3_InterruptHandler:
   362                           	callstack 0
   363   000009                     	ds	2
   364   00000B                     _timer3_preload:
   365                           	callstack 0
   366   00000B                     	ds	2
   367   00000D                     _TMR2_InterruptHandler:
   368                           	callstack 0
   369   00000D                     	ds	2
   370   00000F                     _TMR1_InterruptHandler:
   371                           	callstack 0
   372   00000F                     	ds	2
   373   000011                     _timer1_preload:
   374                           	callstack 0
   375   000011                     	ds	2
   376   000013                     _TMR0_InterruptHandler:
   377                           	callstack 0
   378   000013                     	ds	2
   379   000015                     _timer0_preload:
   380                           	callstack 0
   381   000015                     	ds	2
   382   000017                     _RB7_InterruptHandler_LOW:
   383                           	callstack 0
   384   000017                     	ds	2
   385   000019                     _RB7_InterruptHandler_HIGH:
   386                           	callstack 0
   387   000019                     	ds	2
   388   00001B                     _RB6_InterruptHandler_LOW:
   389                           	callstack 0
   390   00001B                     	ds	2
   391   00001D                     _RB6_InterruptHandler_HIGH:
   392                           	callstack 0
   393   00001D                     	ds	2
   394   00001F                     _RB5_InterruptHandler_LOW:
   395                           	callstack 0
   396   00001F                     	ds	2
   397   000021                     _RB5_InterruptHandler_HIGH:
   398                           	callstack 0
   399   000021                     	ds	2
   400   000023                     _RB4_InterruptHandler_LOW:
   401                           	callstack 0
   402   000023                     	ds	2
   403   000025                     _RB4_InterruptHandler_HIGH:
   404                           	callstack 0
   405   000025                     	ds	2
   406   000027                     _INT2_InterruptHandler:
   407                           	callstack 0
   408   000027                     	ds	2
   409   000029                     _INT1_InterruptHandler:
   410                           	callstack 0
   411   000029                     	ds	2
   412   00002B                     _INT0_InterruptHandler:
   413                           	callstack 0
   414   00002B                     	ds	2
   415   00002D                     _MSSP_I2C_Report_Receive_Overflow_InterruptHandler:
   416                           	callstack 0
   417   00002D                     	ds	2
   418   00002F                     _MSSP_I2C_Report_Write_Collision_InterruptHandler:
   419                           	callstack 0
   420   00002F                     	ds	2
   421   000031                     _MSSP_I2C_DefaultInterruptHandler:
   422                           	callstack 0
   423   000031                     	ds	2
   424   000033                     CCP_Set_Compare_Mode_Value@F3106:
   425                           	callstack 0
   426   000033                     	ds	2
   427   000035                     _CCP2_InterruptHandler:
   428                           	callstack 0
   429   000035                     	ds	2
   430   000037                     _CCP1_InterruptHandler:
   431                           	callstack 0
   432   000037                     	ds	2
   433   000039                     _ADC_InterruptHandler:
   434                           	callstack 0
   435   000039                     	ds	2
   436   00003B                     _adc_flag:
   437                           	callstack 0
   438   00003B                     	ds	1
   439   00003C                     _timer2_preload:
   440                           	callstack 0
   441   00003C                     	ds	1
   442   00003D                     relay_turn_off@F3052:
   443                           	callstack 0
   444   00003D                     	ds	1
   445   00003E                     relay_turn_on@F3047:
   446                           	callstack 0
   447   00003E                     	ds	1
   448   00003F                     relay_initialize@F3042:
   449                           	callstack 0
   450   00003F                     	ds	1
   451   000040                     led_turn_toggle@F3063:
   452                           	callstack 0
   453   000040                     	ds	1
   454   000041                     led_turn_off@F3058:
   455                           	callstack 0
   456   000041                     	ds	1
   457   000042                     led_turn_on@F3053:
   458                           	callstack 0
   459   000042                     	ds	1
   460   000043                     led_initialize@F3048:
   461                           	callstack 0
   462   000043                     	ds	1
   463   000044                     _adc_result_1:
   464                           	callstack 0
   465   000044                     	ds	2
   466                           
   467                           	psect	dataCOMRAM
   468   000064                     __pdataCOMRAM:
   469                           	callstack 0
   470   000064                     _lat_registers:
   471                           	callstack 0
   472   000064                     	ds	10
   473   00006E                     _RB7_Flag:
   474                           	callstack 0
   475   00006E                     	ds	1
   476   00006F                     _RB6_Flag:
   477                           	callstack 0
   478   00006F                     	ds	1
   479   000070                     _RB5_Flag:
   480                           	callstack 0
   481   000070                     	ds	1
   482   000071                     _RB4_Flag:
   483                           	callstack 0
   484   000071                     	ds	1
   485                           
   486                           	psect	bssBANK0
   487   0000B5                     __pbssBANK0:
   488                           	callstack 0
   489   0000B5                     	ds	6
   490                           
   491                           	psect	dataBANK0
   492   000080                     __pdataBANK0:
   493                           	callstack 0
   494   000080                     _port_registers:
   495                           	callstack 0
   496   000080                     	ds	10
   497   00008A                     _tris_registers:
   498                           	callstack 0
   499   00008A                     	ds	10
   500   000094                     _lcd_2:
   501                           	callstack 0
   502   000094                     	ds	10
   503   00009E                     _adc_1:
   504                           	callstack 0
   505   00009E                     	ds	7
   506   0000A5                     _lcd_1:
   507                           	callstack 0
   508   0000A5                     	ds	6
   509                           
   510                           	psect	cstackBANK0
   511   0000AB                     __pcstackBANK0:
   512                           	callstack 0
   513   0000AB                     ??_lcd_8bit_send_command:
   514   0000AB                     lcd_4bit_intialize@lcd:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x0
   518   0000AB                     	ds	2
   519   0000AD                     ??_lcd_4bit_intialize:
   520                           
   521                           ; 1 bytes @ 0x2
   522   0000AD                     	ds	2
   523   0000AF                     lcd_4bit_intialize@l_data_pins_counter:
   524                           	callstack 0
   525   0000AF                     lcd_8bit_intialize@lcd:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x4
   529   0000AF                     	ds	1
   530   0000B0                     lcd_4bit_intialize@ret:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x5
   534   0000B0                     	ds	1
   535   0000B1                     ??_lcd_8bit_intialize:
   536                           
   537                           ; 1 bytes @ 0x6
   538   0000B1                     	ds	2
   539   0000B3                     lcd_8bit_intialize@l_data_pins_counter:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x8
   543   0000B3                     	ds	1
   544   0000B4                     lcd_8bit_intialize@ret:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548   0000B4                     	ds	1
   549                           
   550                           	psect	cstackCOMRAM
   551   000046                     __pcstackCOMRAM:
   552                           	callstack 0
   553   000046                     RB4_ISR@RB4_Source:
   554                           	callstack 0
   555   000046                     RB5_ISR@RB5_Source:
   556                           	callstack 0
   557   000046                     RB6_ISR@RB6_Source:
   558                           	callstack 0
   559   000046                     RB7_ISR@RB7_Source:
   560                           	callstack 0
   561   000046                     ADC_GetConversionResult@_adc:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x0
   565   000046                     	ds	2
   566   000048                     ADC_GetConversionResult@conversion_result:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x2
   570   000048                     	ds	2
   571   00004A                     ??_ADC_GetConversionResult:
   572                           
   573                           ; 1 bytes @ 0x4
   574   00004A                     	ds	3
   575   00004D                     ADC_GetConversionResult@ret:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x7
   579   00004D                     	ds	1
   580   00004E                     ??_InterruptManager:
   581                           
   582                           ; 1 bytes @ 0x8
   583   00004E                     	ds	4
   584   000052                     ??_adc_input_channel_port_config:
   585   000052                     ADC_StartConversion@_adc:
   586                           	callstack 0
   587   000052                     select_result_format@_adc:
   588                           	callstack 0
   589   000052                     configure_voltage_reference@_adc:
   590                           	callstack 0
   591   000052                     gpio_pin_direction_intialize@_pin_config:
   592                           	callstack 0
   593   000052                     gpio_pin_write_logic@_pin_config:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0xC
   597   000052                     	ds	2
   598   000054                     ??_gpio_pin_direction_intialize:
   599   000054                     ADC_StartConversion@ret:
   600                           	callstack 0
   601   000054                     adc_input_channel_port_config@channel:
   602                           	callstack 0
   603   000054                     gpio_pin_write_logic@logic:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0xE
   607   000054                     	ds	1
   608   000055                     ??_gpio_pin_write_logic:
   609   000055                     ADC_Init@_adc:
   610                           	callstack 0
   611   000055                     ADC_SelectChannel@_adc:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0xF
   615   000055                     	ds	2
   616   000057                     ??_ADC_Init:
   617   000057                     ADC_SelectChannel@channel:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x11
   621   000057                     	ds	1
   622   000058                     ??_ADC_SelectChannel:
   623   000058                     ADC_Init@ret:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x12
   627   000058                     	ds	1
   628   000059                     ADC_SelectChannel@ret:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x13
   632   000059                     	ds	1
   633   00005A                     gpio_pin_direction_intialize@ret:
   634                           	callstack 0
   635   00005A                     ADC_StartConversion_Interrupt@_adc:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x14
   639   00005A                     	ds	1
   640   00005B                     gpio_pin_write_logic@ret:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x15
   644   00005B                     	ds	1
   645   00005C                     ADC_StartConversion_Interrupt@channel:
   646                           	callstack 0
   647   00005C                     lcd_send_4bits@lcd:
   648                           	callstack 0
   649   00005C                     lcd_4bit_send_enable_signal@lcd:
   650                           	callstack 0
   651   00005C                     lcd_8bit_send_enable_signal@lcd:
   652                           	callstack 0
   653   00005C                     gpio_pin_intialize@_pin_config:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x16
   657   00005C                     	ds	1
   658   00005D                     ADC_StartConversion_Interrupt@ret:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x17
   662   00005D                     	ds	1
   663   00005E                     ??_gpio_pin_intialize:
   664   00005E                     lcd_send_4bits@_data_command:
   665                           	callstack 0
   666   00005E                     lcd_4bit_send_enable_signal@ret:
   667                           	callstack 0
   668   00005E                     lcd_8bit_send_enable_signal@ret:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x18
   672   00005E                     	ds	1
   673   00005F                     lcd_send_4bits@ret:
   674                           	callstack 0
   675   00005F                     gpio_pin_intialize@ret:
   676                           	callstack 0
   677   00005F                     lcd_8bit_send_command@lcd:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x19
   681   00005F                     	ds	1
   682   000060                     lcd_4bit_send_command@lcd:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x1A
   686   000060                     	ds	1
   687   000061                     lcd_8bit_send_command@command:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x1B
   691   000061                     	ds	1
   692   000062                     lcd_4bit_send_command@command:
   693                           	callstack 0
   694   000062                     lcd_8bit_send_command@ret:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x1C
   698   000062                     	ds	1
   699   000063                     lcd_4bit_send_command@ret:
   700                           	callstack 0
   701   000063                     lcd_8bit_send_command@l_pin_counter:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x1D
   705   000063                     	ds	1
   706   000064                     
   707                           ; 1 bytes @ 0x1E
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 38 in file "application.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  ret             1    0        unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  2  1578[None  ] int 
   720 ;; Registers used:
   721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;Total ram usage:        0 bytes
   732 ;; Hardware stack levels required when called: 10
   733 ;; This function calls:
   734 ;;		_ADC_StartConversion_Interrupt
   735 ;;		_application_intialize
   736 ;; This function is called by:
   737 ;;		Startup code after reset
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text0
   742   001FA8                     __ptext0:
   743                           	callstack 0
   744   001FA8                     _main:
   745                           	callstack 21
   746   001FA8                     
   747                           ;application.c: 41:     application_intialize();
   748   001FA8  EC22  F010         	call	_application_intialize	;wreg free
   749   001FAC                     l6890:
   750   001FAC  0E9E               	movlw	low _adc_1
   751   001FAE  6E5A               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
   752   001FB0  0E00               	movlw	high _adc_1
   753   001FB2  6E5B               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
   754   001FB4  0E00               	movlw	0
   755   001FB6  6E5C               	movwf	ADC_StartConversion_Interrupt@channel^0,c
   756   001FB8  EC14  F00F         	call	_ADC_StartConversion_Interrupt	;wreg free
   757   001FBC  EFD6  F00F         	goto	l6890
   758   001FC0  EF07  F000         	goto	start
   759   001FC4                     __end_of_main:
   760                           	callstack 0
   761                           
   762 ;; *************** function _application_intialize *****************
   763 ;; Defined at:
   764 ;;		line 52 in file "application.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  ret             1    0        unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 9
   785 ;; This function calls:
   786 ;;		_ADC_Init
   787 ;;		_ecu_layer_intialize
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text1
   794   002044                     __ptext1:
   795                           	callstack 0
   796   002044                     _application_intialize:
   797                           	callstack 21
   798   002044                     
   799                           ;application.c: 55:     ecu_layer_intialize();
   800   002044  ECC5  F00F         	call	_ecu_layer_intialize	;wreg free
   801   002048  0E9E               	movlw	low _adc_1
   802   00204A  6E55               	movwf	ADC_Init@_adc^0,c
   803   00204C  0E00               	movlw	high _adc_1
   804   00204E  6E56               	movwf	(ADC_Init@_adc+1)^0,c
   805   002050  EC4E  F00D         	call	_ADC_Init	;wreg free
   806   002054  0012               	return		;funcret
   807   002056                     __end_of_application_intialize:
   808                           	callstack 0
   809                           
   810 ;; *************** function _ecu_layer_intialize *****************
   811 ;; Defined at:
   812 ;;		line 96 in file "ECU_Layer/ecu_layer_init.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  ret             1    0        unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 8
   833 ;; This function calls:
   834 ;;		_lcd_4bit_intialize
   835 ;;		_lcd_8bit_intialize
   836 ;; This function is called by:
   837 ;;		_application_intialize
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842   001F8A                     __ptext2:
   843                           	callstack 0
   844   001F8A                     _ecu_layer_intialize:
   845                           	callstack 21
   846   001F8A  0EA5               	movlw	low _lcd_1
   847   001F8C  0100               	movlb	0	; () banked
   848   001F8E  6FAB               	movwf	lcd_4bit_intialize@lcd& (0+255),b
   849   001F90  0E00               	movlw	high _lcd_1
   850   001F92  6FAC               	movwf	(lcd_4bit_intialize@lcd+1)& (0+255),b
   851   001F94  EC4D  F00B         	call	_lcd_4bit_intialize	;wreg free
   852   001F98  0E94               	movlw	low _lcd_2
   853   001F9A  0100               	movlb	0	; () banked
   854   001F9C  6FAF               	movwf	lcd_8bit_intialize@lcd& (0+255),b
   855   001F9E  0E00               	movlw	high _lcd_2
   856   001FA0  6FB0               	movwf	(lcd_8bit_intialize@lcd+1)& (0+255),b
   857   001FA2  ECB0  F00A         	call	_lcd_8bit_intialize	;wreg free
   858   001FA6  0012               	return		;funcret
   859   001FA8                     __end_of_ecu_layer_intialize:
   860                           	callstack 0
   861                           
   862 ;; *************** function _lcd_8bit_intialize *****************
   863 ;; Defined at:
   864 ;;		line 275 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  lcd             2    4[BANK0 ] PTR const struct .
   867 ;;		 -> lcd_2(10), 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  ret             1    9[BANK0 ] unsigned char 
   870 ;;  l_data_pins_    1    8[BANK0 ] unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      unsigned char 
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;Total ram usage:        6 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 7
   887 ;; This function calls:
   888 ;;		_gpio_pin_intialize
   889 ;;		_lcd_8bit_send_command
   890 ;; This function is called by:
   891 ;;		_ecu_layer_intialize
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text3
   896   001560                     __ptext3:
   897                           	callstack 0
   898   001560                     _lcd_8bit_intialize:
   899                           	callstack 21
   900   001560                     
   901                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 278:     uint8 l_data_pins_counter = 0;
   902   001560  0E00               	movlw	0
   903   001562  0100               	movlb	0	; () banked
   904   001564  6FB3               	movwf	lcd_8bit_intialize@l_data_pins_counter& (0+255),b
   905   001566                     
   906                           ; BSR set to: 0
   907                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:     if(((void*)0) == lcd)
   908   001566  51AF               	movf	lcd_8bit_intialize@lcd& (0+255),w,b
   909   001568  11B0               	iorwf	(lcd_8bit_intialize@lcd+1)& (0+255),w,b
   910   00156A  A4D8               	btfss	status,2,c
   911   00156C  EFBA  F00A         	goto	u5031
   912   001570  EFBC  F00A         	goto	u5030
   913   001574                     u5031:
   914   001574  EFC0  F00A         	goto	l6284
   915   001578                     u5030:
   916   001578                     
   917                           ; BSR set to: 0
   918                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 280:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:      
      +                             ret = (Std_ReturnType)0x00;
   919   001578  0E00               	movlw	0
   920   00157A  6FB4               	movwf	lcd_8bit_intialize@ret& (0+255),b
   921                           
   922                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 282:     }
   923   00157C  EF4B  F00B         	goto	l6320
   924   001580                     l6284:
   925                           
   926                           ; BSR set to: 0
   927                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 284:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 285:      
      +                             ret = gpio_pin_intialize(&(lcd->lcd_rs));
   928   001580  C0AF  F05C         	movff	lcd_8bit_intialize@lcd,gpio_pin_intialize@_pin_config
   929   001584  C0B0  F05D         	movff	lcd_8bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
   930   001588  EC31  F00E         	call	_gpio_pin_intialize	;wreg free
   931   00158C  0100               	movlb	0	; () banked
   932   00158E  6FB4               	movwf	lcd_8bit_intialize@ret& (0+255),b
   933                           
   934                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 286:         ret = gpio_pin_intialize(&(lcd->lcd_en));
   935   001590  0E01               	movlw	1
   936   001592  25AF               	addwf	lcd_8bit_intialize@lcd& (0+255),w,b
   937   001594  6E5C               	movwf	gpio_pin_intialize@_pin_config^0,c
   938   001596  0E00               	movlw	0
   939   001598  21B0               	addwfc	(lcd_8bit_intialize@lcd+1)& (0+255),w,b
   940   00159A  6E5D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
   941   00159C  EC31  F00E         	call	_gpio_pin_intialize	;wreg free
   942   0015A0  0100               	movlb	0	; () banked
   943   0015A2  6FB4               	movwf	lcd_8bit_intialize@ret& (0+255),b
   944   0015A4                     
   945                           ; BSR set to: 0
   946                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 287:         for(l_data_pins_counter = 0; l_data_pins_
      +                          counter < 8; l_data_pins_counter++)
   947   0015A4  0E00               	movlw	0
   948   0015A6  6FB3               	movwf	lcd_8bit_intialize@l_data_pins_counter& (0+255),b
   949   0015A8                     l6292:
   950                           
   951                           ; BSR set to: 0
   952   0015A8  51B3               	movf	lcd_8bit_intialize@l_data_pins_counter& (0+255),w,b
   953   0015AA  25AF               	addwf	lcd_8bit_intialize@lcd& (0+255),w,b
   954   0015AC  6FB1               	movwf	??_lcd_8bit_intialize& (0+255),b
   955   0015AE  0E00               	movlw	0
   956   0015B0  21B0               	addwfc	(lcd_8bit_intialize@lcd+1)& (0+255),w,b
   957   0015B2  6FB2               	movwf	(??_lcd_8bit_intialize+1)& (0+255),b
   958   0015B4  0E02               	movlw	2
   959   0015B6  25B1               	addwf	??_lcd_8bit_intialize& (0+255),w,b
   960   0015B8  6E5C               	movwf	gpio_pin_intialize@_pin_config^0,c
   961   0015BA  0E00               	movlw	0
   962   0015BC  21B2               	addwfc	(??_lcd_8bit_intialize+1)& (0+255),w,b
   963   0015BE  6E5D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
   964   0015C0  EC31  F00E         	call	_gpio_pin_intialize	;wreg free
   965   0015C4                     
   966                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 290:         }
   967   0015C4  0100               	movlb	0	; () banked
   968   0015C6  2BB3               	incf	lcd_8bit_intialize@l_data_pins_counter& (0+255),f,b
   969   0015C8                     
   970                           ; BSR set to: 0
   971   0015C8  0E07               	movlw	7
   972   0015CA  65B3               	cpfsgt	lcd_8bit_intialize@l_data_pins_counter& (0+255),b
   973   0015CC  EFEA  F00A         	goto	u5041
   974   0015D0  EFEC  F00A         	goto	u5040
   975   0015D4                     u5041:
   976   0015D4  EFD4  F00A         	goto	l6292
   977   0015D8                     u5040:
   978   0015D8                     
   979                           ; BSR set to: 0
   980                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 291:         _delay((unsigned long)((20)*(8000000UL/40
      +                          00.0)));
   981   0015D8  0E34               	movlw	52
   982   0015DA  0100               	movlb	0	; () banked
   983   0015DC  6FB1               	movwf	??_lcd_8bit_intialize& (0+255),b
   984   0015DE  0EF1               	movlw	241
   985   0015E0                     u5597:
   986   0015E0  2EE8               	decfsz	wreg,f,c
   987   0015E2  D7FE               	bra	u5597
   988   0015E4  2FB1               	decfsz	??_lcd_8bit_intialize& (0+255),f,b
   989   0015E6  D7FC               	bra	u5597
   990   0015E8  D000               	nop2	
   991   0015EA  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
   992   0015EE  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
   993   0015F2  0E38               	movlw	56
   994   0015F4  6E61               	movwf	lcd_8bit_send_command@command^0,c
   995   0015F6  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
   996   0015FA                     
   997                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 293:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0.0)));
   998   0015FA  0E0D               	movlw	13
   999   0015FC  0100               	movlb	0	; () banked
  1000   0015FE  6FB1               	movwf	??_lcd_8bit_intialize& (0+255),b
  1001   001600  0EFB               	movlw	251
  1002   001602                     u5607:
  1003   001602  2EE8               	decfsz	wreg,f,c
  1004   001604  D7FE               	bra	u5607
  1005   001606  2FB1               	decfsz	??_lcd_8bit_intialize& (0+255),f,b
  1006   001608  D7FC               	bra	u5607
  1007   00160A  D000               	nop2	
  1008   00160C  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1009   001610  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1010   001614  0E38               	movlw	56
  1011   001616  6E61               	movwf	lcd_8bit_send_command@command^0,c
  1012   001618  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
  1013   00161C                     
  1014                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 295:         _delay((unsigned long)((150)*(8000000UL/4
      +                          000000.0)));
  1015   00161C  0E64               	movlw	100
  1016   00161E                     u5617:
  1017   00161E  2EE8               	decfsz	wreg,f,c
  1018   001620  D7FE               	bra	u5617
  1019   001622  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1020   001626  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1021   00162A  0E38               	movlw	56
  1022   00162C  6E61               	movwf	lcd_8bit_send_command@command^0,c
  1023   00162E  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
  1024   001632  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1025   001636  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1026   00163A  0E01               	movlw	1
  1027   00163C  6E61               	movwf	lcd_8bit_send_command@command^0,c
  1028   00163E  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
  1029   001642  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1030   001646  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1031   00164A  0E02               	movlw	2
  1032   00164C  6E61               	movwf	lcd_8bit_send_command@command^0,c
  1033   00164E  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
  1034   001652  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1035   001656  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1036   00165A  0E06               	movlw	6
  1037   00165C  6E61               	movwf	lcd_8bit_send_command@command^0,c
  1038   00165E  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
  1039   001662  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1040   001666  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1041   00166A  0E0C               	movlw	12
  1042   00166C  6E61               	movwf	lcd_8bit_send_command@command^0,c
  1043   00166E  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
  1044   001672  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1045   001676  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1046   00167A  0E38               	movlw	56
  1047   00167C  6E61               	movwf	lcd_8bit_send_command@command^0,c
  1048   00167E  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
  1049   001682                     
  1050                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 303:         ret = lcd_8bit_send_command(lcd, 0x80);
  1051   001682  C0AF  F05F         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1052   001686  C0B0  F060         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1053   00168A  0E80               	movlw	128
  1054   00168C  6E61               	movwf	lcd_8bit_send_command@command^0,c
  1055   00168E  ECAE  F00D         	call	_lcd_8bit_send_command	;wreg free
  1056   001692  0100               	movlb	0	; () banked
  1057   001694  6FB4               	movwf	lcd_8bit_intialize@ret& (0+255),b
  1058   001696                     l6320:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 305:     return ret;
  1062   001696  51B4               	movf	lcd_8bit_intialize@ret& (0+255),w,b
  1063   001698                     
  1064                           ; BSR set to: 0
  1065   001698  0012               	return		;funcret
  1066   00169A                     __end_of_lcd_8bit_intialize:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _lcd_8bit_send_command *****************
  1070 ;; Defined at:
  1071 ;;		line 316 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  lcd             2   25[COMRAM] PTR const struct .
  1074 ;;		 -> lcd_2(10), 
  1075 ;;  command         1   27[COMRAM] unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  l_pin_counte    1   29[COMRAM] unsigned char 
  1078 ;;  ret             1   28[COMRAM] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      unsigned char 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;Total ram usage:        9 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 6
  1095 ;; This function calls:
  1096 ;;		_gpio_pin_write_logic
  1097 ;;		_lcd_8bit_send_enable_signal
  1098 ;; This function is called by:
  1099 ;;		_lcd_8bit_intialize
  1100 ;;		_lcd_8bit_send_custom_char
  1101 ;;		_lcd_8bit_set_cursor
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text4
  1106   001B5C                     __ptext4:
  1107                           	callstack 0
  1108   001B5C                     _lcd_8bit_send_command:
  1109                           	callstack 21
  1110   001B5C                     
  1111                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 319:     uint8 l_pin_counter = 0;
  1112   001B5C  0E00               	movlw	0
  1113   001B5E  6E63               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1114   001B60                     
  1115                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 320:     if(((void*)0) == lcd)
  1116   001B60  505F               	movf	lcd_8bit_send_command@lcd^0,w,c
  1117   001B62  1060               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  1118   001B64  A4D8               	btfss	status,2,c
  1119   001B66  EFB7  F00D         	goto	u4981
  1120   001B6A  EFB9  F00D         	goto	u4980
  1121   001B6E                     u4981:
  1122   001B6E  EFBD  F00D         	goto	l6212
  1123   001B72                     u4980:
  1124   001B72                     
  1125                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 321:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 322:      
      +                             ret = (Std_ReturnType)0x00;
  1126   001B72  0E00               	movlw	0
  1127   001B74  6E62               	movwf	lcd_8bit_send_command@ret^0,c
  1128                           
  1129                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 323:     }
  1130   001B76  EFF6  F00D         	goto	l6228
  1131   001B7A                     l6212:
  1132   001B7A  C05F  F052         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1133   001B7E  C060  F053         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  1134   001B82  0E00               	movlw	0
  1135   001B84  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1136   001B86  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1137   001B8A                     
  1138                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 328:         for(l_pin_counter = 0; l_pin_counter < 8;
      +                           ++l_pin_counter)
  1139   001B8A  0E00               	movlw	0
  1140   001B8C  6E63               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1141   001B8E                     l6220:
  1142   001B8E  5063               	movf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1143   001B90  245F               	addwf	lcd_8bit_send_command@lcd^0,w,c
  1144   001B92  0100               	movlb	0	; () banked
  1145   001B94  6FAB               	movwf	??_lcd_8bit_send_command& (0+255),b
  1146   001B96  0E00               	movlw	0
  1147   001B98  2060               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  1148   001B9A  6FAC               	movwf	(??_lcd_8bit_send_command+1)& (0+255),b
  1149   001B9C  0E02               	movlw	2
  1150   001B9E  25AB               	addwf	??_lcd_8bit_send_command& (0+255),w,b
  1151   001BA0  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1152   001BA2  0E00               	movlw	0
  1153   001BA4  21AC               	addwfc	(??_lcd_8bit_send_command+1)& (0+255),w,b
  1154   001BA6  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1155   001BA8  C063  F0AD         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command+2
  1156   001BAC  C061  F0AE         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  1157   001BB0  2BAD               	incf	(??_lcd_8bit_send_command+2)& (0+255),f,b
  1158   001BB2  EFDD  F00D         	goto	u4994
  1159   001BB6                     u4995:
  1160   001BB6  90D8               	bcf	status,0,c
  1161   001BB8  33AE               	rrcf	(??_lcd_8bit_send_command+3)& (0+255),f,b
  1162   001BBA                     u4994:
  1163   001BBA  2FAD               	decfsz	(??_lcd_8bit_send_command+2)& (0+255),f,b
  1164   001BBC  EFDB  F00D         	goto	u4995
  1165   001BC0  0100               	movlb	0	; () banked
  1166   001BC2  51AE               	movf	(??_lcd_8bit_send_command+3)& (0+255),w,b
  1167   001BC4  0B01               	andlw	1
  1168   001BC6  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1169   001BC8  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1170   001BCC                     
  1171                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 331:         }
  1172   001BCC  2A63               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1173   001BCE  0E07               	movlw	7
  1174   001BD0  6463               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1175   001BD2  EFED  F00D         	goto	u5001
  1176   001BD6  EFEF  F00D         	goto	u5000
  1177   001BDA                     u5001:
  1178   001BDA  EFC7  F00D         	goto	l6220
  1179   001BDE                     u5000:
  1180   001BDE                     
  1181                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 332:         ret = lcd_8bit_send_enable_signal(lcd);
  1182   001BDE  C05F  F05C         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1183   001BE2  C060  F05D         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  1184   001BE6  EC50  F00F         	call	_lcd_8bit_send_enable_signal	;wreg free
  1185   001BEA  6E62               	movwf	lcd_8bit_send_command@ret^0,c
  1186   001BEC                     l6228:
  1187                           
  1188                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 334:     return ret;
  1189   001BEC  5062               	movf	lcd_8bit_send_command@ret^0,w,c
  1190   001BEE  0012               	return		;funcret
  1191   001BF0                     __end_of_lcd_8bit_send_command:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1195 ;; Defined at:
  1196 ;;		line 590 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  lcd             2   22[COMRAM] PTR const struct .
  1199 ;;		 -> lcd_2(10), 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  ret             1   24[COMRAM] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      unsigned char 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        3 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 5
  1218 ;; This function calls:
  1219 ;;		_gpio_pin_write_logic
  1220 ;; This function is called by:
  1221 ;;		_lcd_8bit_send_command
  1222 ;;		_lcd_8bit_send_char_data
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text5
  1227   001EA0                     __ptext5:
  1228                           	callstack 0
  1229   001EA0                     _lcd_8bit_send_enable_signal:
  1230                           	callstack 21
  1231   001EA0  0E01               	movlw	1
  1232   001EA2  245C               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1233   001EA4  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1234   001EA6  0E00               	movlw	0
  1235   001EA8  205D               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1236   001EAA  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1237   001EAC  0E01               	movlw	1
  1238   001EAE  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1239   001EB0  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1240   001EB4                     
  1241                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 594:     _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  1242   001EB4  0E03               	movlw	3
  1243   001EB6                     u5627:
  1244   001EB6  2EE8               	decfsz	wreg,f,c
  1245   001EB8  D7FE               	bra	u5627
  1246   001EBA  F000               	nop	
  1247   001EBC                     
  1248                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 595:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  1249   001EBC  0E01               	movlw	1
  1250   001EBE  245C               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1251   001EC0  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1252   001EC2  0E00               	movlw	0
  1253   001EC4  205D               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1254   001EC6  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1255   001EC8  0E00               	movlw	0
  1256   001ECA  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1257   001ECC  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1258   001ED0  6E5E               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1259   001ED2                     
  1260                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 596:     return ret;
  1261   001ED2  505E               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1262   001ED4  0012               	return		;funcret
  1263   001ED6                     __end_of_lcd_8bit_send_enable_signal:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function _lcd_4bit_intialize *****************
  1267 ;; Defined at:
  1268 ;;		line 73 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  lcd             2    0[BANK0 ] PTR const struct .
  1271 ;;		 -> lcd_1(6), 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  ret             1    5[BANK0 ] unsigned char 
  1274 ;;  l_data_pins_    1    4[BANK0 ] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      unsigned char 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;Total ram usage:        6 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; Hardware stack levels required when called: 7
  1291 ;; This function calls:
  1292 ;;		_gpio_pin_intialize
  1293 ;;		_lcd_4bit_send_command
  1294 ;; This function is called by:
  1295 ;;		_ecu_layer_intialize
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text6
  1300   00169A                     __ptext6:
  1301                           	callstack 0
  1302   00169A                     _lcd_4bit_intialize:
  1303                           	callstack 21
  1304   00169A                     
  1305                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:     uint8 l_data_pins_counter = 0;
  1306   00169A  0E00               	movlw	0
  1307   00169C  0100               	movlb	0	; () banked
  1308   00169E  6FAF               	movwf	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1309   0016A0                     
  1310                           ; BSR set to: 0
  1311                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 77:     if(((void*)0) == lcd)
  1312   0016A0  51AB               	movf	lcd_4bit_intialize@lcd& (0+255),w,b
  1313   0016A2  11AC               	iorwf	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1314   0016A4  A4D8               	btfss	status,2,c
  1315   0016A6  EF57  F00B         	goto	u5011
  1316   0016AA  EF59  F00B         	goto	u5010
  1317   0016AE                     u5011:
  1318   0016AE  EF5D  F00B         	goto	l6238
  1319   0016B2                     u5010:
  1320   0016B2                     
  1321                           ; BSR set to: 0
  1322                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 78:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 79:        
      +                           ret = (Std_ReturnType)0x00;
  1323   0016B2  0E00               	movlw	0
  1324   0016B4  6FB0               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1325                           
  1326                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 80:     }
  1327   0016B6  EFE8  F00B         	goto	l6274
  1328   0016BA                     l6238:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 82:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 83:        
      +                           ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1332   0016BA  C0AB  F05C         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  1333   0016BE  C0AC  F05D         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  1334   0016C2  EC31  F00E         	call	_gpio_pin_intialize	;wreg free
  1335   0016C6  0100               	movlb	0	; () banked
  1336   0016C8  6FB0               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1337                           
  1338                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 84:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1339   0016CA  0E01               	movlw	1
  1340   0016CC  25AB               	addwf	lcd_4bit_intialize@lcd& (0+255),w,b
  1341   0016CE  6E5C               	movwf	gpio_pin_intialize@_pin_config^0,c
  1342   0016D0  0E00               	movlw	0
  1343   0016D2  21AC               	addwfc	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1344   0016D4  6E5D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  1345   0016D6  EC31  F00E         	call	_gpio_pin_intialize	;wreg free
  1346   0016DA  0100               	movlb	0	; () banked
  1347   0016DC  6FB0               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1348   0016DE                     
  1349                           ; BSR set to: 0
  1350                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 85:         for(l_data_pins_counter = 0; l_data_pins_c
      +                          ounter < 4; l_data_pins_counter++)
  1351   0016DE  0E00               	movlw	0
  1352   0016E0  6FAF               	movwf	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1353   0016E2                     l6246:
  1354                           
  1355                           ; BSR set to: 0
  1356   0016E2  51AF               	movf	lcd_4bit_intialize@l_data_pins_counter& (0+255),w,b
  1357   0016E4  25AB               	addwf	lcd_4bit_intialize@lcd& (0+255),w,b
  1358   0016E6  6FAD               	movwf	??_lcd_4bit_intialize& (0+255),b
  1359   0016E8  0E00               	movlw	0
  1360   0016EA  21AC               	addwfc	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1361   0016EC  6FAE               	movwf	(??_lcd_4bit_intialize+1)& (0+255),b
  1362   0016EE  0E02               	movlw	2
  1363   0016F0  25AD               	addwf	??_lcd_4bit_intialize& (0+255),w,b
  1364   0016F2  6E5C               	movwf	gpio_pin_intialize@_pin_config^0,c
  1365   0016F4  0E00               	movlw	0
  1366   0016F6  21AE               	addwfc	(??_lcd_4bit_intialize+1)& (0+255),w,b
  1367   0016F8  6E5D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  1368   0016FA  EC31  F00E         	call	_gpio_pin_intialize	;wreg free
  1369   0016FE                     
  1370                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 88:         }
  1371   0016FE  0100               	movlb	0	; () banked
  1372   001700  2BAF               	incf	lcd_4bit_intialize@l_data_pins_counter& (0+255),f,b
  1373   001702                     
  1374                           ; BSR set to: 0
  1375   001702  0E03               	movlw	3
  1376   001704  65AF               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1377   001706  EF87  F00B         	goto	u5021
  1378   00170A  EF89  F00B         	goto	u5020
  1379   00170E                     u5021:
  1380   00170E  EF71  F00B         	goto	l6246
  1381   001712                     u5020:
  1382   001712                     
  1383                           ; BSR set to: 0
  1384                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 89:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  1385   001712  0E34               	movlw	52
  1386   001714  0100               	movlb	0	; () banked
  1387   001716  6FAD               	movwf	??_lcd_4bit_intialize& (0+255),b
  1388   001718  0EF1               	movlw	241
  1389   00171A                     u5637:
  1390   00171A  2EE8               	decfsz	wreg,f,c
  1391   00171C  D7FE               	bra	u5637
  1392   00171E  2FAD               	decfsz	??_lcd_4bit_intialize& (0+255),f,b
  1393   001720  D7FC               	bra	u5637
  1394   001722  D000               	nop2	
  1395   001724  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1396   001728  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1397   00172C  0E38               	movlw	56
  1398   00172E  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1399   001730  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1400   001734                     
  1401                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  1402   001734  0E0D               	movlw	13
  1403   001736  0100               	movlb	0	; () banked
  1404   001738  6FAD               	movwf	??_lcd_4bit_intialize& (0+255),b
  1405   00173A  0EFB               	movlw	251
  1406   00173C                     u5647:
  1407   00173C  2EE8               	decfsz	wreg,f,c
  1408   00173E  D7FE               	bra	u5647
  1409   001740  2FAD               	decfsz	??_lcd_4bit_intialize& (0+255),f,b
  1410   001742  D7FC               	bra	u5647
  1411   001744  D000               	nop2	
  1412   001746  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1413   00174A  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1414   00174E  0E38               	movlw	56
  1415   001750  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1416   001752  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1417   001756                     
  1418                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  1419   001756  0E64               	movlw	100
  1420   001758                     u5657:
  1421   001758  2EE8               	decfsz	wreg,f,c
  1422   00175A  D7FE               	bra	u5657
  1423   00175C  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1424   001760  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1425   001764  0E38               	movlw	56
  1426   001766  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1427   001768  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1428   00176C  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1429   001770  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1430   001774  0E01               	movlw	1
  1431   001776  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1432   001778  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1433   00177C  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1434   001780  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1435   001784  0E02               	movlw	2
  1436   001786  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1437   001788  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1438   00178C  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1439   001790  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1440   001794  0E06               	movlw	6
  1441   001796  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1442   001798  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1443   00179C  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1444   0017A0  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1445   0017A4  0E0C               	movlw	12
  1446   0017A6  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1447   0017A8  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1448   0017AC  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1449   0017B0  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1450   0017B4  0E28               	movlw	40
  1451   0017B6  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1452   0017B8  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1453   0017BC                     
  1454                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 101:         ret = lcd_4bit_send_command(lcd, 0x80);
  1455   0017BC  C0AB  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1456   0017C0  C0AC  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1457   0017C4  0E80               	movlw	128
  1458   0017C6  6E62               	movwf	lcd_4bit_send_command@command^0,c
  1459   0017C8  ECF8  F00D         	call	_lcd_4bit_send_command	;wreg free
  1460   0017CC  0100               	movlb	0	; () banked
  1461   0017CE  6FB0               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1462   0017D0                     l6274:
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 103:     return ret;
  1466   0017D0  51B0               	movf	lcd_4bit_intialize@ret& (0+255),w,b
  1467   0017D2                     
  1468                           ; BSR set to: 0
  1469   0017D2  0012               	return		;funcret
  1470   0017D4                     __end_of_lcd_4bit_intialize:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _lcd_4bit_send_command *****************
  1474 ;; Defined at:
  1475 ;;		line 114 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  lcd             2   26[COMRAM] PTR const struct .
  1478 ;;		 -> lcd_1(6), 
  1479 ;;  command         1   28[COMRAM] unsigned char 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  ret             1   29[COMRAM] unsigned char 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      unsigned char 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1491 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;Total ram usage:        4 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; Hardware stack levels required when called: 6
  1498 ;; This function calls:
  1499 ;;		_gpio_pin_write_logic
  1500 ;;		_lcd_4bit_send_enable_signal
  1501 ;;		_lcd_send_4bits
  1502 ;; This function is called by:
  1503 ;;		_lcd_4bit_intialize
  1504 ;;		_lcd_4bit_send_custom_char
  1505 ;;		_lcd_4bit_set_cursor
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text7
  1510   001BF0                     __ptext7:
  1511                           	callstack 0
  1512   001BF0                     _lcd_4bit_send_command:
  1513                           	callstack 21
  1514   001BF0                     
  1515                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 117:     if(((void*)0) == lcd)
  1516   001BF0  5060               	movf	lcd_4bit_send_command@lcd^0,w,c
  1517   001BF2  1061               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  1518   001BF4  A4D8               	btfss	status,2,c
  1519   001BF6  EFFF  F00D         	goto	u4971
  1520   001BFA  EF01  F00E         	goto	u4970
  1521   001BFE                     u4971:
  1522   001BFE  EF05  F00E         	goto	l6200
  1523   001C02                     u4970:
  1524   001C02                     
  1525                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 118:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 119:      
      +                             ret = (Std_ReturnType)0x00;
  1526   001C02  0E00               	movlw	0
  1527   001C04  6E63               	movwf	lcd_4bit_send_command@ret^0,c
  1528                           
  1529                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 120:     }
  1530   001C06  EF2F  F00E         	goto	l6202
  1531   001C0A                     l6200:
  1532                           
  1533                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 122:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 123:      
      +                             ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  1534   001C0A  C060  F052         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1535   001C0E  C061  F053         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  1536   001C12  0E00               	movlw	0
  1537   001C14  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1538   001C16  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1539   001C1A  6E63               	movwf	lcd_4bit_send_command@ret^0,c
  1540                           
  1541                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:         ret = lcd_send_4bits(lcd, command >> 4);
  1542   001C1C  C060  F05C         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1543   001C20  C061  F05D         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1544   001C24  3862               	swapf	lcd_4bit_send_command@command^0,w,c
  1545   001C26  0B0F               	andlw	15
  1546   001C28  6E5E               	movwf	lcd_send_4bits@_data_command^0,c
  1547   001C2A  EC67  F00E         	call	_lcd_send_4bits	;wreg free
  1548   001C2E  6E63               	movwf	lcd_4bit_send_command@ret^0,c
  1549                           
  1550                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 125:         ret = lcd_4bit_send_enable_signal(lcd);
  1551   001C30  C060  F05C         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1552   001C34  C061  F05D         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1553   001C38  EC6B  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  1554   001C3C  6E63               	movwf	lcd_4bit_send_command@ret^0,c
  1555                           
  1556                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:         ret = lcd_send_4bits(lcd, command);
  1557   001C3E  C060  F05C         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1558   001C42  C061  F05D         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1559   001C46  C062  F05E         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1560   001C4A  EC67  F00E         	call	_lcd_send_4bits	;wreg free
  1561   001C4E  6E63               	movwf	lcd_4bit_send_command@ret^0,c
  1562                           
  1563                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 127:         ret = lcd_4bit_send_enable_signal(lcd);
  1564   001C50  C060  F05C         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1565   001C54  C061  F05D         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1566   001C58  EC6B  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  1567   001C5C  6E63               	movwf	lcd_4bit_send_command@ret^0,c
  1568   001C5E                     l6202:
  1569                           
  1570                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:     return ret;
  1571   001C5E  5063               	movf	lcd_4bit_send_command@ret^0,w,c
  1572   001C60  0012               	return		;funcret
  1573   001C62                     __end_of_lcd_4bit_send_command:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _lcd_send_4bits *****************
  1577 ;; Defined at:
  1578 ;;		line 557 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  lcd             2   22[COMRAM] PTR const struct .
  1581 ;;		 -> lcd_1(6), 
  1582 ;;  _data_comman    1   24[COMRAM] unsigned char 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  ret             1   25[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      unsigned char 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1594 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;Total ram usage:        4 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 5
  1601 ;; This function calls:
  1602 ;;		_gpio_pin_write_logic
  1603 ;; This function is called by:
  1604 ;;		_lcd_4bit_send_command
  1605 ;;		_lcd_4bit_send_char_data
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text8
  1610   001CCE                     __ptext8:
  1611                           	callstack 0
  1612   001CCE                     _lcd_send_4bits:
  1613                           	callstack 21
  1614   001CCE  0E02               	movlw	2
  1615   001CD0  245C               	addwf	lcd_send_4bits@lcd^0,w,c
  1616   001CD2  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1617   001CD4  0E00               	movlw	0
  1618   001CD6  205D               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1619   001CD8  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1620   001CDA  505E               	movf	lcd_send_4bits@_data_command^0,w,c
  1621   001CDC  0B01               	andlw	1
  1622   001CDE  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1623   001CE0  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1624   001CE4  0E03               	movlw	3
  1625   001CE6  245C               	addwf	lcd_send_4bits@lcd^0,w,c
  1626   001CE8  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1627   001CEA  0E00               	movlw	0
  1628   001CEC  205D               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1629   001CEE  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1630   001CF0  90D8               	bcf	status,0,c
  1631   001CF2  305E               	rrcf	lcd_send_4bits@_data_command^0,w,c
  1632   001CF4  0B01               	andlw	1
  1633   001CF6  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1634   001CF8  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1635   001CFC  0E04               	movlw	4
  1636   001CFE  245C               	addwf	lcd_send_4bits@lcd^0,w,c
  1637   001D00  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1638   001D02  0E00               	movlw	0
  1639   001D04  205D               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1640   001D06  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1641   001D08  405E               	rrncf	lcd_send_4bits@_data_command^0,w,c
  1642   001D0A  42E8               	rrncf	wreg,f,c
  1643   001D0C  0B3F               	andlw	63
  1644   001D0E  0B01               	andlw	1
  1645   001D10  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1646   001D12  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1647   001D16                     
  1648                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 563:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  1649   001D16  0E05               	movlw	5
  1650   001D18  245C               	addwf	lcd_send_4bits@lcd^0,w,c
  1651   001D1A  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1652   001D1C  0E00               	movlw	0
  1653   001D1E  205D               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1654   001D20  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1655   001D22  385E               	swapf	lcd_send_4bits@_data_command^0,w,c
  1656   001D24  46E8               	rlncf	wreg,f,c
  1657   001D26  0B1F               	andlw	31
  1658   001D28  0B01               	andlw	1
  1659   001D2A  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1660   001D2C  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1661   001D30  6E5F               	movwf	lcd_send_4bits@ret^0,c
  1662                           
  1663                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 564:     return ret;
  1664   001D32  505F               	movf	lcd_send_4bits@ret^0,w,c
  1665   001D34  0012               	return		;funcret
  1666   001D36                     __end_of_lcd_send_4bits:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1670 ;; Defined at:
  1671 ;;		line 574 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  lcd             2   22[COMRAM] PTR const struct .
  1674 ;;		 -> lcd_1(6), 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  ret             1   24[COMRAM] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      unsigned char 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;Total ram usage:        3 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 5
  1693 ;; This function calls:
  1694 ;;		_gpio_pin_write_logic
  1695 ;; This function is called by:
  1696 ;;		_lcd_4bit_send_command
  1697 ;;		_lcd_4bit_send_char_data
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text9
  1702   001ED6                     __ptext9:
  1703                           	callstack 0
  1704   001ED6                     _lcd_4bit_send_enable_signal:
  1705                           	callstack 21
  1706   001ED6  0E01               	movlw	1
  1707   001ED8  245C               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1708   001EDA  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1709   001EDC  0E00               	movlw	0
  1710   001EDE  205D               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1711   001EE0  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1712   001EE2  0E01               	movlw	1
  1713   001EE4  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1714   001EE6  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1715   001EEA                     
  1716                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 578:     _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  1717   001EEA  0E03               	movlw	3
  1718   001EEC                     u5667:
  1719   001EEC  2EE8               	decfsz	wreg,f,c
  1720   001EEE  D7FE               	bra	u5667
  1721   001EF0  F000               	nop	
  1722   001EF2                     
  1723                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 579:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  1724   001EF2  0E01               	movlw	1
  1725   001EF4  245C               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1726   001EF6  6E52               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1727   001EF8  0E00               	movlw	0
  1728   001EFA  205D               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1729   001EFC  6E53               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1730   001EFE  0E00               	movlw	0
  1731   001F00  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1732   001F02  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1733   001F06  6E5E               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1734   001F08                     
  1735                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 580:     return ret;
  1736   001F08  505E               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1737   001F0A  0012               	return		;funcret
  1738   001F0C                     __end_of_lcd_4bit_send_enable_signal:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _gpio_pin_intialize *****************
  1742 ;; Defined at:
  1743 ;;		line 167 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  _pin_config     2   22[COMRAM] PTR const struct .
  1746 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  1747 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  ret             1   25[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      unsigned char 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;Total ram usage:        4 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 5
  1766 ;; This function calls:
  1767 ;;		_gpio_pin_direction_intialize
  1768 ;;		_gpio_pin_write_logic
  1769 ;; This function is called by:
  1770 ;;		_lcd_4bit_intialize
  1771 ;;		_lcd_8bit_intialize
  1772 ;;		_seven_segment_initialize
  1773 ;;		_dc_motor_initialize
  1774 ;;		_keypad_initialize
  1775 ;;		_led_initialize
  1776 ;;		_relay_initialize
  1777 ;;		_CCP_Init
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text10
  1782   001C62                     __ptext10:
  1783                           	callstack 0
  1784   001C62                     _gpio_pin_intialize:
  1785                           	callstack 22
  1786   001C62                     
  1787                           ;MCAL_Layer/GPIO/hal_gpio.c: 170:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
  1788   001C62  505C               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1789   001C64  105D               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  1790   001C66  B4D8               	btfsc	status,2,c
  1791   001C68  EF38  F00E         	goto	u4951
  1792   001C6C  EF3A  F00E         	goto	u4950
  1793   001C70                     u4951:
  1794   001C70  EF4B  F00E         	goto	l6186
  1795   001C74                     u4950:
  1796   001C74  C05C  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  1797   001C78  C05D  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  1798   001C7C  30DF               	rrcf	223,w,c
  1799   001C7E  32E8               	rrcf	wreg,f,c
  1800   001C80  32E8               	rrcf	wreg,f,c
  1801   001C82  0B07               	andlw	7
  1802   001C84  6E5E               	movwf	??_gpio_pin_intialize^0,c
  1803   001C86  0E07               	movlw	7
  1804   001C88  645E               	cpfsgt	??_gpio_pin_intialize^0,c
  1805   001C8A  EF49  F00E         	goto	u4961
  1806   001C8E  EF4B  F00E         	goto	u4960
  1807   001C92                     u4961:
  1808   001C92  EF4F  F00E         	goto	l6188
  1809   001C96                     u4960:
  1810   001C96                     l6186:
  1811                           
  1812                           ;MCAL_Layer/GPIO/hal_gpio.c: 171:     {;MCAL_Layer/GPIO/hal_gpio.c: 172:         ret = (
      +                          Std_ReturnType)0x00;
  1813   001C96  0E00               	movlw	0
  1814   001C98  6E5F               	movwf	gpio_pin_intialize@ret^0,c
  1815                           
  1816                           ;MCAL_Layer/GPIO/hal_gpio.c: 173:     }
  1817   001C9A  EF65  F00E         	goto	l6190
  1818   001C9E                     l6188:
  1819                           
  1820                           ;MCAL_Layer/GPIO/hal_gpio.c: 175:     {;MCAL_Layer/GPIO/hal_gpio.c: 176:         ret = g
      +                          pio_pin_direction_intialize(_pin_config);
  1821   001C9E  C05C  F052         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1822   001CA2  C05D  F053         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  1823   001CA6  EC0E  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  1824   001CAA  6E5F               	movwf	gpio_pin_intialize@ret^0,c
  1825                           
  1826                           ;MCAL_Layer/GPIO/hal_gpio.c: 177:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  1827   001CAC  C05C  F052         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1828   001CB0  C05D  F053         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  1829   001CB4  C05C  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  1830   001CB8  C05D  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  1831   001CBC  0E00               	movlw	0
  1832   001CBE  BEDF               	btfsc	indf2,7,c
  1833   001CC0  0E01               	movlw	1
  1834   001CC2  6E54               	movwf	gpio_pin_write_logic@logic^0,c
  1835   001CC4  ECEA  F00B         	call	_gpio_pin_write_logic	;wreg free
  1836   001CC8  6E5F               	movwf	gpio_pin_intialize@ret^0,c
  1837   001CCA                     l6190:
  1838                           
  1839                           ;MCAL_Layer/GPIO/hal_gpio.c: 179:     return ret;
  1840   001CCA  505F               	movf	gpio_pin_intialize@ret^0,w,c
  1841   001CCC  0012               	return		;funcret
  1842   001CCE                     __end_of_gpio_pin_intialize:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _gpio_pin_write_logic *****************
  1846 ;; Defined at:
  1847 ;;		line 88 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  1850 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  1851 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1852 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1853 ;;  logic           1   14[COMRAM] enum E2968
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  ret             1   21[COMRAM] unsigned char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      unsigned char 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1865 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;Total ram usage:       10 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 4
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_lcd_4bit_send_command
  1876 ;;		_lcd_8bit_send_command
  1877 ;;		_lcd_send_4bits
  1878 ;;		_lcd_4bit_send_enable_signal
  1879 ;;		_lcd_8bit_send_enable_signal
  1880 ;;		_gpio_pin_intialize
  1881 ;;		_seven_segment_write_number
  1882 ;;		_lcd_4bit_send_char_data
  1883 ;;		_lcd_8bit_send_char_data
  1884 ;;		_dc_motor_move_right
  1885 ;;		_dc_motor_move_left
  1886 ;;		_dc_motor_stop
  1887 ;;		_keypad_get_value
  1888 ;;		_led_turn_on
  1889 ;;		_led_turn_off
  1890 ;;		_relay_turn_on
  1891 ;;		_relay_turn_off
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text11
  1896   0017D4                     __ptext11:
  1897                           	callstack 0
  1898   0017D4                     _gpio_pin_write_logic:
  1899                           	callstack 21
  1900   0017D4                     
  1901                           ;MCAL_Layer/GPIO/hal_gpio.c: 88: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config, logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 89: {;MCAL_Layer/GPIO/hal_gpio.
      +                          c: 90:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1902   0017D4  0E01               	movlw	1
  1903   0017D6  6E5B               	movwf	gpio_pin_write_logic@ret^0,c
  1904   0017D8                     
  1905                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
  1906   0017D8  5052               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1907   0017DA  1053               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  1908   0017DC  B4D8               	btfsc	status,2,c
  1909   0017DE  EFF3  F00B         	goto	u4851
  1910   0017E2  EFF5  F00B         	goto	u4850
  1911   0017E6                     u4851:
  1912   0017E6  EF06  F00C         	goto	l6102
  1913   0017EA                     u4850:
  1914   0017EA  C052  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1915   0017EE  C053  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1916   0017F2  30DF               	rrcf	223,w,c
  1917   0017F4  32E8               	rrcf	wreg,f,c
  1918   0017F6  32E8               	rrcf	wreg,f,c
  1919   0017F8  0B07               	andlw	7
  1920   0017FA  6E55               	movwf	??_gpio_pin_write_logic^0,c
  1921   0017FC  0E07               	movlw	7
  1922   0017FE  6455               	cpfsgt	??_gpio_pin_write_logic^0,c
  1923   001800  EF04  F00C         	goto	u4861
  1924   001804  EF06  F00C         	goto	u4860
  1925   001808                     u4861:
  1926   001808  EF69  F00C         	goto	l6110
  1927   00180C                     u4860:
  1928   00180C                     l6102:
  1929                           
  1930                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:     {;MCAL_Layer/GPIO/hal_gpio.c: 93:         ret = (St
      +                          d_ReturnType)0x00;
  1931   00180C  0E00               	movlw	0
  1932   00180E  6E5B               	movwf	gpio_pin_write_logic@ret^0,c
  1933                           
  1934                           ;MCAL_Layer/GPIO/hal_gpio.c: 94:     }
  1935   001810  EF7E  F00C         	goto	l6112
  1936   001814                     l6104:
  1937                           
  1938                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  1939   001814  C052  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1940   001818  C053  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1941   00181C  30DF               	rrcf	223,w,c
  1942   00181E  32E8               	rrcf	wreg,f,c
  1943   001820  32E8               	rrcf	wreg,f,c
  1944   001822  0B07               	andlw	7
  1945   001824  6E55               	movwf	??_gpio_pin_write_logic^0,c
  1946   001826  0E01               	movlw	1
  1947   001828  6E56               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1948   00182A  2A55               	incf	??_gpio_pin_write_logic^0,f,c
  1949   00182C  EF1A  F00C         	goto	u4874
  1950   001830                     u4875:
  1951   001830  90D8               	bcf	status,0,c
  1952   001832  3656               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1953   001834                     u4874:
  1954   001834  2E55               	decfsz	??_gpio_pin_write_logic^0,f,c
  1955   001836  EF18  F00C         	goto	u4875
  1956   00183A  5056               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1957   00183C  0AFF               	xorlw	255
  1958   00183E  6E57               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1959   001840  C052  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1960   001844  C053  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1961   001848  50DF               	movf	223,w,c
  1962   00184A  0B07               	andlw	7
  1963   00184C  6E58               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1964   00184E  5058               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1965   001850  0D02               	mullw	2
  1966   001852  0E64               	movlw	low _lat_registers
  1967   001854  24F3               	addwf	243,w,c
  1968   001856  6ED9               	movwf	fsr2l,c
  1969   001858  0E00               	movlw	high _lat_registers
  1970   00185A  20F4               	addwfc	prodh,w,c
  1971   00185C  6EDA               	movwf	fsr2h,c
  1972   00185E  CFDE F059          	movff	postinc2,??_gpio_pin_write_logic+4
  1973   001862  CFDD F05A          	movff	postdec2,??_gpio_pin_write_logic+5
  1974   001866  C059  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1975   00186A  C05A  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1976   00186E  5057               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1977   001870  16DF               	andwf	indf2,f,c
  1978                           
  1979                           ;MCAL_Layer/GPIO/hal_gpio.c: 101:                 break;
  1980   001872  EF7E  F00C         	goto	l6112
  1981   001876                     l6106:
  1982                           
  1983                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  1984   001876  C052  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1985   00187A  C053  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1986   00187E  30DF               	rrcf	223,w,c
  1987   001880  32E8               	rrcf	wreg,f,c
  1988   001882  32E8               	rrcf	wreg,f,c
  1989   001884  0B07               	andlw	7
  1990   001886  6E55               	movwf	??_gpio_pin_write_logic^0,c
  1991   001888  0E01               	movlw	1
  1992   00188A  6E56               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1993   00188C  2A55               	incf	??_gpio_pin_write_logic^0,f,c
  1994   00188E  EF4B  F00C         	goto	u4884
  1995   001892                     u4885:
  1996   001892  90D8               	bcf	status,0,c
  1997   001894  3656               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1998   001896                     u4884:
  1999   001896  2E55               	decfsz	??_gpio_pin_write_logic^0,f,c
  2000   001898  EF49  F00C         	goto	u4885
  2001   00189C  C052  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2002   0018A0  C053  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2003   0018A4  50DF               	movf	223,w,c
  2004   0018A6  0B07               	andlw	7
  2005   0018A8  6E57               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2006   0018AA  5057               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2007   0018AC  0D02               	mullw	2
  2008   0018AE  0E64               	movlw	low _lat_registers
  2009   0018B0  24F3               	addwf	243,w,c
  2010   0018B2  6ED9               	movwf	fsr2l,c
  2011   0018B4  0E00               	movlw	high _lat_registers
  2012   0018B6  20F4               	addwfc	prodh,w,c
  2013   0018B8  6EDA               	movwf	fsr2h,c
  2014   0018BA  CFDE F058          	movff	postinc2,??_gpio_pin_write_logic+3
  2015   0018BE  CFDD F059          	movff	postdec2,??_gpio_pin_write_logic+4
  2016   0018C2  C058  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2017   0018C6  C059  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2018   0018CA  5056               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2019   0018CC  12DF               	iorwf	indf2,f,c
  2020                           
  2021                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:                 break;
  2022   0018CE  EF7E  F00C         	goto	l6112
  2023   0018D2                     l6110:
  2024   0018D2  5054               	movf	gpio_pin_write_logic@logic^0,w,c
  2025   0018D4  6E55               	movwf	??_gpio_pin_write_logic^0,c
  2026   0018D6  6A56               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2027                           
  2028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2029                           ; Switch size 1, requested type "simple"
  2030                           ; Number of cases is 1, Range of values is 0 to 0
  2031                           ; switch strategies available:
  2032                           ; Name         Instructions Cycles
  2033                           ; simple_byte            4     3 (average)
  2034                           ;	Chosen strategy is simple_byte
  2035   0018D8  5056               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2036   0018DA  0A00               	xorlw	0	; case 0
  2037   0018DC  B4D8               	btfsc	status,2,c
  2038   0018DE  EF73  F00C         	goto	l6952
  2039   0018E2  EF06  F00C         	goto	l6102
  2040   0018E6                     l6952:
  2041                           
  2042                           ; Switch size 1, requested type "simple"
  2043                           ; Number of cases is 2, Range of values is 0 to 1
  2044                           ; switch strategies available:
  2045                           ; Name         Instructions Cycles
  2046                           ; simple_byte            7     4 (average)
  2047                           ;	Chosen strategy is simple_byte
  2048   0018E6  5055               	movf	??_gpio_pin_write_logic^0,w,c
  2049   0018E8  0A00               	xorlw	0	; case 0
  2050   0018EA  B4D8               	btfsc	status,2,c
  2051   0018EC  EF0A  F00C         	goto	l6104
  2052   0018F0  0A01               	xorlw	1	; case 1
  2053   0018F2  B4D8               	btfsc	status,2,c
  2054   0018F4  EF3B  F00C         	goto	l6106
  2055   0018F8  EF06  F00C         	goto	l6102
  2056   0018FC                     l6112:
  2057                           
  2058                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:     return ret;
  2059   0018FC  505B               	movf	gpio_pin_write_logic@ret^0,w,c
  2060   0018FE  0012               	return		;funcret
  2061   001900                     __end_of_gpio_pin_write_logic:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _gpio_pin_direction_intialize *****************
  2065 ;; Defined at:
  2066 ;;		line 31 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  2069 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  2070 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  ret             1   20[COMRAM] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;Total ram usage:        9 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 4
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_gpio_pin_intialize
  2093 ;;		_button_initialize
  2094 ;;		_keypad_initialize
  2095 ;;		_Interrupt_RBx_Init
  2096 ;;		_Interrupt_INTx_Pin_Init
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text12
  2101   00141C                     __ptext12:
  2102                           	callstack 0
  2103   00141C                     _gpio_pin_direction_intialize:
  2104                           	callstack 22
  2105   00141C                     
  2106                           ;MCAL_Layer/GPIO/hal_gpio.c: 31: Std_ReturnType gpio_pin_direction_intialize(const pin_c
      +                          onfig_t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 32: {;MCAL_Layer/GPIO/hal_gpio.c: 33: 
      +                              Std_ReturnType ret = (Std_ReturnType)0x01;
  2107   00141C  0E01               	movlw	1
  2108   00141E  6E5A               	movwf	gpio_pin_direction_intialize@ret^0,c
  2109   001420                     
  2110                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
  2111   001420  5052               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2112   001422  1053               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  2113   001424  B4D8               	btfsc	status,2,c
  2114   001426  EF17  F00A         	goto	u4891
  2115   00142A  EF19  F00A         	goto	u4890
  2116   00142E                     u4891:
  2117   00142E  EF2A  F00A         	goto	l6126
  2118   001432                     u4890:
  2119   001432  C052  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  2120   001436  C053  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  2121   00143A  30DF               	rrcf	223,w,c
  2122   00143C  32E8               	rrcf	wreg,f,c
  2123   00143E  32E8               	rrcf	wreg,f,c
  2124   001440  0B07               	andlw	7
  2125   001442  6E54               	movwf	??_gpio_pin_direction_intialize^0,c
  2126   001444  0E07               	movlw	7
  2127   001446  6454               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2128   001448  EF28  F00A         	goto	u4901
  2129   00144C  EF2A  F00A         	goto	u4900
  2130   001450                     u4901:
  2131   001450  EF8D  F00A         	goto	l6134
  2132   001454                     u4900:
  2133   001454                     l6126:
  2134                           
  2135                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:     {;MCAL_Layer/GPIO/hal_gpio.c: 36:         ret = (St
      +                          d_ReturnType)0x00;
  2136   001454  0E00               	movlw	0
  2137   001456  6E5A               	movwf	gpio_pin_direction_intialize@ret^0,c
  2138                           
  2139                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:     }
  2140   001458  EFAE  F00A         	goto	l6136
  2141   00145C                     l6128:
  2142                           
  2143                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  2144   00145C  C052  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  2145   001460  C053  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  2146   001464  30DF               	rrcf	223,w,c
  2147   001466  32E8               	rrcf	wreg,f,c
  2148   001468  32E8               	rrcf	wreg,f,c
  2149   00146A  0B07               	andlw	7
  2150   00146C  6E54               	movwf	??_gpio_pin_direction_intialize^0,c
  2151   00146E  0E01               	movlw	1
  2152   001470  6E55               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2153   001472  2A54               	incf	??_gpio_pin_direction_intialize^0,f,c
  2154   001474  EF3E  F00A         	goto	u4914
  2155   001478                     u4915:
  2156   001478  90D8               	bcf	status,0,c
  2157   00147A  3655               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2158   00147C                     u4914:
  2159   00147C  2E54               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2160   00147E  EF3C  F00A         	goto	u4915
  2161   001482  5055               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2162   001484  0AFF               	xorlw	255
  2163   001486  6E56               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2164   001488  C052  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  2165   00148C  C053  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  2166   001490  50DF               	movf	223,w,c
  2167   001492  0B07               	andlw	7
  2168   001494  6E57               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  2169   001496  5057               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  2170   001498  0D02               	mullw	2
  2171   00149A  0E8A               	movlw	low _tris_registers
  2172   00149C  24F3               	addwf	243,w,c
  2173   00149E  6ED9               	movwf	fsr2l,c
  2174   0014A0  0E00               	movlw	high _tris_registers
  2175   0014A2  20F4               	addwfc	prodh,w,c
  2176   0014A4  6EDA               	movwf	fsr2h,c
  2177   0014A6  CFDE F058          	movff	postinc2,??_gpio_pin_direction_intialize+4
  2178   0014AA  CFDD F059          	movff	postdec2,??_gpio_pin_direction_intialize+5
  2179   0014AE  C058  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  2180   0014B2  C059  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  2181   0014B6  5056               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2182   0014B8  16DF               	andwf	indf2,f,c
  2183                           
  2184                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:                 break;
  2185   0014BA  EFAE  F00A         	goto	l6136
  2186   0014BE                     l6130:
  2187                           
  2188                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  2189   0014BE  C052  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  2190   0014C2  C053  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  2191   0014C6  30DF               	rrcf	223,w,c
  2192   0014C8  32E8               	rrcf	wreg,f,c
  2193   0014CA  32E8               	rrcf	wreg,f,c
  2194   0014CC  0B07               	andlw	7
  2195   0014CE  6E54               	movwf	??_gpio_pin_direction_intialize^0,c
  2196   0014D0  0E01               	movlw	1
  2197   0014D2  6E55               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2198   0014D4  2A54               	incf	??_gpio_pin_direction_intialize^0,f,c
  2199   0014D6  EF6F  F00A         	goto	u4924
  2200   0014DA                     u4925:
  2201   0014DA  90D8               	bcf	status,0,c
  2202   0014DC  3655               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2203   0014DE                     u4924:
  2204   0014DE  2E54               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2205   0014E0  EF6D  F00A         	goto	u4925
  2206   0014E4  C052  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  2207   0014E8  C053  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  2208   0014EC  50DF               	movf	223,w,c
  2209   0014EE  0B07               	andlw	7
  2210   0014F0  6E56               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2211   0014F2  5056               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2212   0014F4  0D02               	mullw	2
  2213   0014F6  0E8A               	movlw	low _tris_registers
  2214   0014F8  24F3               	addwf	243,w,c
  2215   0014FA  6ED9               	movwf	fsr2l,c
  2216   0014FC  0E00               	movlw	high _tris_registers
  2217   0014FE  20F4               	addwfc	prodh,w,c
  2218   001500  6EDA               	movwf	fsr2h,c
  2219   001502  CFDE F057          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2220   001506  CFDD F058          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2221   00150A  C057  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2222   00150E  C058  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2223   001512  5055               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2224   001514  12DF               	iorwf	indf2,f,c
  2225                           
  2226                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:                 break;
  2227   001516  EFAE  F00A         	goto	l6136
  2228   00151A                     l6134:
  2229   00151A  C052  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  2230   00151E  C053  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  2231   001522  BCDF               	btfsc	indf2,6,c
  2232   001524  EF96  F00A         	goto	u4931
  2233   001528  EF99  F00A         	goto	u4930
  2234   00152C                     u4931:
  2235   00152C  0E01               	movlw	1
  2236   00152E  EF9A  F00A         	goto	u4940
  2237   001532                     u4930:
  2238   001532  0E00               	movlw	0
  2239   001534                     u4940:
  2240   001534  6E54               	movwf	??_gpio_pin_direction_intialize^0,c
  2241   001536  6A55               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2242                           
  2243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2244                           ; Switch size 1, requested type "simple"
  2245                           ; Number of cases is 1, Range of values is 0 to 0
  2246                           ; switch strategies available:
  2247                           ; Name         Instructions Cycles
  2248                           ; simple_byte            4     3 (average)
  2249                           ;	Chosen strategy is simple_byte
  2250   001538  5055               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2251   00153A  0A00               	xorlw	0	; case 0
  2252   00153C  B4D8               	btfsc	status,2,c
  2253   00153E  EFA3  F00A         	goto	l6954
  2254   001542  EF2A  F00A         	goto	l6126
  2255   001546                     l6954:
  2256                           
  2257                           ; Switch size 1, requested type "simple"
  2258                           ; Number of cases is 2, Range of values is 0 to 1
  2259                           ; switch strategies available:
  2260                           ; Name         Instructions Cycles
  2261                           ; simple_byte            7     4 (average)
  2262                           ;	Chosen strategy is simple_byte
  2263   001546  5054               	movf	??_gpio_pin_direction_intialize^0,w,c
  2264   001548  0A00               	xorlw	0	; case 0
  2265   00154A  B4D8               	btfsc	status,2,c
  2266   00154C  EF2E  F00A         	goto	l6128
  2267   001550  0A01               	xorlw	1	; case 1
  2268   001552  B4D8               	btfsc	status,2,c
  2269   001554  EF5F  F00A         	goto	l6130
  2270   001558  EF2A  F00A         	goto	l6126
  2271   00155C                     l6136:
  2272                           
  2273                           ;MCAL_Layer/GPIO/hal_gpio.c: 51:     return ret;
  2274   00155C  505A               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2275   00155E  0012               	return		;funcret
  2276   001560                     __end_of_gpio_pin_direction_intialize:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _ADC_Init *****************
  2280 ;; Defined at:
  2281 ;;		line 43 in file "MCAL_Layer/ADC/hal_adc.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  _adc            2   15[COMRAM] PTR const struct .
  2284 ;;		 -> adc_1(7), 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  ret             1   18[COMRAM] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      unsigned char 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;Total ram usage:        4 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 5
  2303 ;; This function calls:
  2304 ;;		_adc_input_channel_port_config
  2305 ;;		_configure_voltage_reference
  2306 ;;		_select_result_format
  2307 ;; This function is called by:
  2308 ;;		_application_intialize
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text13
  2313   001A9C                     __ptext13:
  2314                           	callstack 0
  2315   001A9C                     _ADC_Init:
  2316                           	callstack 24
  2317   001A9C                     
  2318                           ;MCAL_Layer/ADC/hal_adc.c: 46:     if(((void*)0) == _adc)
  2319   001A9C  5055               	movf	ADC_Init@_adc^0,w,c
  2320   001A9E  1056               	iorwf	(ADC_Init@_adc+1)^0,w,c
  2321   001AA0  A4D8               	btfss	status,2,c
  2322   001AA2  EF55  F00D         	goto	u3391
  2323   001AA6  EF57  F00D         	goto	u3390
  2324   001AAA                     u3391:
  2325   001AAA  EF5B  F00D         	goto	l364
  2326   001AAE                     u3390:
  2327   001AAE                     
  2328                           ;MCAL_Layer/ADC/hal_adc.c: 47:     {;MCAL_Layer/ADC/hal_adc.c: 48:         ret = (Std_Re
      +                          turnType)0x00;
  2329   001AAE  0E00               	movlw	0
  2330   001AB0  6E58               	movwf	ADC_Init@ret^0,c
  2331                           
  2332                           ;MCAL_Layer/ADC/hal_adc.c: 49:     }
  2333   001AB2  EFAC  F00D         	goto	l5184
  2334   001AB6                     l364:
  2335                           
  2336                           ;MCAL_Layer/ADC/hal_adc.c: 51:     {;MCAL_Layer/ADC/hal_adc.c: 53:         (ADCON0bits.A
      +                          DON = 0);
  2337   001AB6  90C2               	bcf	194,0,c	;volatile
  2338   001AB8                     
  2339                           ;MCAL_Layer/ADC/hal_adc.c: 55:         ADCON2bits.ACQT = _adc->acquisition_time;
  2340   001AB8  EE20 F003          	lfsr	2,3
  2341   001ABC  5055               	movf	ADC_Init@_adc^0,w,c
  2342   001ABE  26D9               	addwf	fsr2l,f,c
  2343   001AC0  5056               	movf	(ADC_Init@_adc+1)^0,w,c
  2344   001AC2  22DA               	addwfc	fsr2h,f,c
  2345   001AC4  50DF               	movf	indf2,w,c
  2346   001AC6  6E57               	movwf	??_ADC_Init^0,c
  2347   001AC8  4657               	rlncf	??_ADC_Init^0,f,c
  2348   001ACA  4657               	rlncf	??_ADC_Init^0,f,c
  2349   001ACC  4657               	rlncf	??_ADC_Init^0,f,c
  2350   001ACE  50C0               	movf	192,w,c	;volatile
  2351   001AD0  1857               	xorwf	??_ADC_Init^0,w,c
  2352   001AD2  0BC7               	andlw	-57
  2353   001AD4  1857               	xorwf	??_ADC_Init^0,w,c
  2354   001AD6  6EC0               	movwf	192,c	;volatile
  2355                           
  2356                           ;MCAL_Layer/ADC/hal_adc.c: 57:         ADCON2bits.ADCS = _adc->conversion_clock;
  2357   001AD8  EE20 F004          	lfsr	2,4
  2358   001ADC  5055               	movf	ADC_Init@_adc^0,w,c
  2359   001ADE  26D9               	addwf	fsr2l,f,c
  2360   001AE0  5056               	movf	(ADC_Init@_adc+1)^0,w,c
  2361   001AE2  22DA               	addwfc	fsr2h,f,c
  2362   001AE4  50DF               	movf	indf2,w,c
  2363   001AE6  6E57               	movwf	??_ADC_Init^0,c
  2364   001AE8  50C0               	movf	192,w,c	;volatile
  2365   001AEA  1857               	xorwf	??_ADC_Init^0,w,c
  2366   001AEC  0BF8               	andlw	-8
  2367   001AEE  1857               	xorwf	??_ADC_Init^0,w,c
  2368   001AF0  6EC0               	movwf	192,c	;volatile
  2369                           
  2370                           ;MCAL_Layer/ADC/hal_adc.c: 59:         ADCON0bits.CHS = _adc->adc_channel;
  2371   001AF2  EE20 F005          	lfsr	2,5
  2372   001AF6  5055               	movf	ADC_Init@_adc^0,w,c
  2373   001AF8  26D9               	addwf	fsr2l,f,c
  2374   001AFA  5056               	movf	(ADC_Init@_adc+1)^0,w,c
  2375   001AFC  22DA               	addwfc	fsr2h,f,c
  2376   001AFE  50DF               	movf	indf2,w,c
  2377   001B00  6E57               	movwf	??_ADC_Init^0,c
  2378   001B02  4657               	rlncf	??_ADC_Init^0,f,c
  2379   001B04  4657               	rlncf	??_ADC_Init^0,f,c
  2380   001B06  50C2               	movf	194,w,c	;volatile
  2381   001B08  1857               	xorwf	??_ADC_Init^0,w,c
  2382   001B0A  0BC3               	andlw	-61
  2383   001B0C  1857               	xorwf	??_ADC_Init^0,w,c
  2384   001B0E  6EC2               	movwf	194,c	;volatile
  2385   001B10                     
  2386                           ;MCAL_Layer/ADC/hal_adc.c: 60:         adc_input_channel_port_config(_adc->adc_channel);
  2387   001B10  EE20 F005          	lfsr	2,5
  2388   001B14  5055               	movf	ADC_Init@_adc^0,w,c
  2389   001B16  26D9               	addwf	fsr2l,f,c
  2390   001B18  5056               	movf	(ADC_Init@_adc+1)^0,w,c
  2391   001B1A  22DA               	addwfc	fsr2h,f,c
  2392   001B1C  50DF               	movf	indf2,w,c
  2393   001B1E  EC80  F00C         	call	_adc_input_channel_port_config
  2394   001B22                     
  2395                           ;MCAL_Layer/ADC/hal_adc.c: 63:         (PIE1bits.ADIE = 1);
  2396   001B22  8C9D               	bsf	157,6,c	;volatile
  2397   001B24                     
  2398                           ;MCAL_Layer/ADC/hal_adc.c: 64:         (PIR1bits.ADIF = 0);
  2399   001B24  9C9E               	bcf	158,6,c	;volatile
  2400   001B26                     
  2401                           ;MCAL_Layer/ADC/hal_adc.c: 72:         (INTCONbits.GIE = 1);
  2402   001B26  8EF2               	bsf	242,7,c	;volatile
  2403   001B28                     
  2404                           ;MCAL_Layer/ADC/hal_adc.c: 73:         (INTCONbits.PEIE = 1);
  2405   001B28  8CF2               	bsf	242,6,c	;volatile
  2406   001B2A                     
  2407                           ;MCAL_Layer/ADC/hal_adc.c: 75:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  2408   001B2A  C055  FFD9         	movff	ADC_Init@_adc,fsr2l
  2409   001B2E  C056  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  2410   001B32  CFDE F039          	movff	postinc2,_ADC_InterruptHandler
  2411   001B36  CFDD F03A          	movff	postdec2,_ADC_InterruptHandler+1
  2412   001B3A                     
  2413                           ;MCAL_Layer/ADC/hal_adc.c: 78:         select_result_format(_adc);
  2414   001B3A  C055  F052         	movff	ADC_Init@_adc,select_result_format@_adc
  2415   001B3E  C056  F053         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  2416   001B42  ECF2  F00E         	call	_select_result_format	;wreg free
  2417   001B46                     
  2418                           ;MCAL_Layer/ADC/hal_adc.c: 80:         configure_voltage_reference(_adc);
  2419   001B46  C055  F052         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  2420   001B4A  C056  F053         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  2421   001B4E  ECCD  F00E         	call	_configure_voltage_reference	;wreg free
  2422   001B52                     
  2423                           ;MCAL_Layer/ADC/hal_adc.c: 82:         (ADCON0bits.ADON = 1);
  2424   001B52  80C2               	bsf	194,0,c	;volatile
  2425   001B54                     
  2426                           ;MCAL_Layer/ADC/hal_adc.c: 83:         ret = (Std_ReturnType)0x01;
  2427   001B54  0E01               	movlw	1
  2428   001B56  6E58               	movwf	ADC_Init@ret^0,c
  2429   001B58                     l5184:
  2430                           
  2431                           ;MCAL_Layer/ADC/hal_adc.c: 85:     return ret;
  2432   001B58  5058               	movf	ADC_Init@ret^0,w,c
  2433   001B5A  0012               	return		;funcret
  2434   001B5C                     __end_of_ADC_Init:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _select_result_format *****************
  2438 ;; Defined at:
  2439 ;;		line 302 in file "MCAL_Layer/ADC/hal_adc.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  _adc            2   12[COMRAM] PTR const struct .
  2442 ;;		 -> adc_1(7), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;Total ram usage:        2 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 4
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_ADC_Init
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text14
  2469   001DE4                     __ptext14:
  2470                           	callstack 0
  2471   001DE4                     _select_result_format:
  2472                           	callstack 24
  2473   001DE4                     
  2474                           ;MCAL_Layer/ADC/hal_adc.c: 302: static __attribute__((inline)) void select_result_format
      +                          (const adc_config_t *_adc);MCAL_Layer/ADC/hal_adc.c: 303: {;MCAL_Layer/ADC/hal_adc.c: 30
      +                          4:     if(0x01U == _adc->result_format)
  2475   001DE4  EE20 F006          	lfsr	2,6
  2476   001DE8  5052               	movf	select_result_format@_adc^0,w,c
  2477   001DEA  26D9               	addwf	fsr2l,f,c
  2478   001DEC  5053               	movf	(select_result_format@_adc+1)^0,w,c
  2479   001DEE  22DA               	addwfc	fsr2h,f,c
  2480   001DF0  A2DF               	btfss	indf2,1,c
  2481   001DF2  EFFD  F00E         	goto	u3261
  2482   001DF6  EFFF  F00E         	goto	u3260
  2483   001DFA                     u3261:
  2484   001DFA  EF02  F00F         	goto	l5080
  2485   001DFE                     u3260:
  2486   001DFE                     
  2487                           ;MCAL_Layer/ADC/hal_adc.c: 305:     {;MCAL_Layer/ADC/hal_adc.c: 306:         (ADCON2bits
      +                          .ADFM = 1);
  2488   001DFE  8EC0               	bsf	192,7,c	;volatile
  2489                           
  2490                           ;MCAL_Layer/ADC/hal_adc.c: 307:     }
  2491   001E00  EF13  F00F         	goto	l439
  2492   001E04                     l5080:
  2493   001E04  EE20 F006          	lfsr	2,6
  2494   001E08  5052               	movf	select_result_format@_adc^0,w,c
  2495   001E0A  26D9               	addwf	fsr2l,f,c
  2496   001E0C  5053               	movf	(select_result_format@_adc+1)^0,w,c
  2497   001E0E  22DA               	addwfc	fsr2h,f,c
  2498   001E10  B2DF               	btfsc	indf2,1,c
  2499   001E12  EF0D  F00F         	goto	u3271
  2500   001E16  EF0F  F00F         	goto	u3270
  2501   001E1A                     u3271:
  2502   001E1A  EF12  F00F         	goto	l437
  2503   001E1E                     u3270:
  2504   001E1E                     
  2505                           ;MCAL_Layer/ADC/hal_adc.c: 309:     {;MCAL_Layer/ADC/hal_adc.c: 310:         (ADCON2bits
      +                          .ADFM = 0);
  2506   001E1E  9EC0               	bcf	192,7,c	;volatile
  2507                           
  2508                           ;MCAL_Layer/ADC/hal_adc.c: 311:     }
  2509   001E20  EF13  F00F         	goto	l439
  2510   001E24                     l437:
  2511                           
  2512                           ;MCAL_Layer/ADC/hal_adc.c: 313:     {;MCAL_Layer/ADC/hal_adc.c: 314:         (ADCON2bits
      +                          .ADFM = 1);
  2513   001E24  8EC0               	bsf	192,7,c	;volatile
  2514   001E26                     l439:
  2515   001E26  0012               	return		;funcret
  2516   001E28                     __end_of_select_result_format:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _configure_voltage_reference *****************
  2520 ;; Defined at:
  2521 ;;		line 322 in file "MCAL_Layer/ADC/hal_adc.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  _adc            2   12[COMRAM] PTR const struct .
  2524 ;;		 -> adc_1(7), 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 4
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_ADC_Init
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text15
  2551   001D9A                     __ptext15:
  2552                           	callstack 0
  2553   001D9A                     _configure_voltage_reference:
  2554                           	callstack 24
  2555   001D9A                     
  2556                           ;MCAL_Layer/ADC/hal_adc.c: 322: static __attribute__((inline)) void configure_voltage_re
      +                          ference(const adc_config_t *_adc);MCAL_Layer/ADC/hal_adc.c: 323: {;MCAL_Layer/ADC/hal_ad
      +                          c.c: 324:     if(0x01U == _adc->voltage_reference)
  2557   001D9A  EE20 F006          	lfsr	2,6
  2558   001D9E  5052               	movf	configure_voltage_reference@_adc^0,w,c
  2559   001DA0  26D9               	addwf	fsr2l,f,c
  2560   001DA2  5053               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  2561   001DA4  22DA               	addwfc	fsr2h,f,c
  2562   001DA6  A0DF               	btfss	indf2,0,c
  2563   001DA8  EFD8  F00E         	goto	u3281
  2564   001DAC  EFDA  F00E         	goto	u3280
  2565   001DB0                     u3281:
  2566   001DB0  EFDE  F00E         	goto	l5086
  2567   001DB4                     u3280:
  2568   001DB4  8AC1               	bsf	193,5,c	;volatile
  2569   001DB6  88C1               	bsf	193,4,c	;volatile
  2570   001DB8  EFF1  F00E         	goto	l452
  2571   001DBC                     l5086:
  2572   001DBC  EE20 F006          	lfsr	2,6
  2573   001DC0  5052               	movf	configure_voltage_reference@_adc^0,w,c
  2574   001DC2  26D9               	addwf	fsr2l,f,c
  2575   001DC4  5053               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  2576   001DC6  22DA               	addwfc	fsr2h,f,c
  2577   001DC8  B2DF               	btfsc	indf2,1,c
  2578   001DCA  EFE9  F00E         	goto	u3291
  2579   001DCE  EFEB  F00E         	goto	u3290
  2580   001DD2                     u3291:
  2581   001DD2  EFEF  F00E         	goto	l450
  2582   001DD6                     u3290:
  2583   001DD6  9AC1               	bcf	193,5,c	;volatile
  2584   001DD8  98C1               	bcf	193,4,c	;volatile
  2585   001DDA  EFF1  F00E         	goto	l452
  2586   001DDE                     l450:
  2587   001DDE  9AC1               	bcf	193,5,c	;volatile
  2588   001DE0  98C1               	bcf	193,4,c	;volatile
  2589   001DE2                     l452:
  2590   001DE2  0012               	return		;funcret
  2591   001DE4                     __end_of_configure_voltage_reference:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _ADC_StartConversion_Interrupt *****************
  2595 ;; Defined at:
  2596 ;;		line 257 in file "MCAL_Layer/ADC/hal_adc.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  _adc            2   20[COMRAM] PTR const struct .
  2599 ;;		 -> adc_1(7), 
  2600 ;;  channel         1   22[COMRAM] enum E3032
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  ret             1   23[COMRAM] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      unsigned char 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2612 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;Total ram usage:        4 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 6
  2619 ;; This function calls:
  2620 ;;		_ADC_SelectChannel
  2621 ;;		_ADC_StartConversion
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text16
  2628   001E28                     __ptext16:
  2629                           	callstack 0
  2630   001E28                     _ADC_StartConversion_Interrupt:
  2631                           	callstack 24
  2632   001E28                     
  2633                           ;MCAL_Layer/ADC/hal_adc.c: 260:     if(((void*)0) == _adc)
  2634   001E28  505A               	movf	ADC_StartConversion_Interrupt@_adc^0,w,c
  2635   001E2A  105B               	iorwf	(ADC_StartConversion_Interrupt@_adc+1)^0,w,c
  2636   001E2C  A4D8               	btfss	status,2,c
  2637   001E2E  EF1B  F00F         	goto	u3461
  2638   001E32  EF1D  F00F         	goto	u3460
  2639   001E36                     u3461:
  2640   001E36  EF21  F00F         	goto	l5266
  2641   001E3A                     u3460:
  2642   001E3A                     
  2643                           ;MCAL_Layer/ADC/hal_adc.c: 261:     {;MCAL_Layer/ADC/hal_adc.c: 262:         ret = (Std_
      +                          ReturnType)0x00;
  2644   001E3A  0E00               	movlw	0
  2645   001E3C  6E5D               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  2646                           
  2647                           ;MCAL_Layer/ADC/hal_adc.c: 263:     }
  2648   001E3E  EF31  F00F         	goto	l5268
  2649   001E42                     l5266:
  2650                           
  2651                           ;MCAL_Layer/ADC/hal_adc.c: 265:     {;MCAL_Layer/ADC/hal_adc.c: 267:         ret = ADC_S
      +                          electChannel(_adc, channel);
  2652   001E42  C05A  F055         	movff	ADC_StartConversion_Interrupt@_adc,ADC_SelectChannel@_adc
  2653   001E46  C05B  F056         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_SelectChannel@_adc+1
  2654   001E4A  C05C  F057         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
  2655   001E4E  EC33  F00F         	call	_ADC_SelectChannel	;wreg free
  2656   001E52  6E5D               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  2657                           
  2658                           ;MCAL_Layer/ADC/hal_adc.c: 269:         ret = ADC_StartConversion(_adc);
  2659   001E54  C05A  F052         	movff	ADC_StartConversion_Interrupt@_adc,ADC_StartConversion@_adc
  2660   001E58  C05B  F053         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_StartConversion@_adc+1
  2661   001E5C  ECB3  F00F         	call	_ADC_StartConversion	;wreg free
  2662   001E60  6E5D               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  2663   001E62                     l5268:
  2664                           
  2665                           ;MCAL_Layer/ADC/hal_adc.c: 271:     return ret;
  2666   001E62  505D               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  2667   001E64  0012               	return		;funcret
  2668   001E66                     __end_of_ADC_StartConversion_Interrupt:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _ADC_StartConversion *****************
  2672 ;; Defined at:
  2673 ;;		line 147 in file "MCAL_Layer/ADC/hal_adc.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  _adc            2   12[COMRAM] PTR const struct .
  2676 ;;		 -> adc_1(7), 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  ret             1   14[COMRAM] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      unsigned char 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;Total ram usage:        3 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 4
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_ADC_StartConversion_Interrupt
  2699 ;;		_ADC_GetConversion_Blocking
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text17
  2704   001F66                     __ptext17:
  2705                           	callstack 0
  2706   001F66                     _ADC_StartConversion:
  2707                           	callstack 25
  2708   001F66                     
  2709                           ;MCAL_Layer/ADC/hal_adc.c: 150:     if(((void*)0) == _adc)
  2710   001F66  5052               	movf	ADC_StartConversion@_adc^0,w,c
  2711   001F68  1053               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  2712   001F6A  A4D8               	btfss	status,2,c
  2713   001F6C  EFBA  F00F         	goto	u3411
  2714   001F70  EFBC  F00F         	goto	u3410
  2715   001F74                     u3411:
  2716   001F74  EFC0  F00F         	goto	l379
  2717   001F78                     u3410:
  2718   001F78                     
  2719                           ;MCAL_Layer/ADC/hal_adc.c: 151:     {;MCAL_Layer/ADC/hal_adc.c: 152:         ret = (Std_
      +                          ReturnType)0x00;
  2720   001F78  0E00               	movlw	0
  2721   001F7A  6E54               	movwf	ADC_StartConversion@ret^0,c
  2722                           
  2723                           ;MCAL_Layer/ADC/hal_adc.c: 153:     }
  2724   001F7C  EFC3  F00F         	goto	l380
  2725   001F80                     l379:
  2726                           
  2727                           ;MCAL_Layer/ADC/hal_adc.c: 155:     {;MCAL_Layer/ADC/hal_adc.c: 156:         (ADCON0bits
      +                          .GODONE = 1);
  2728   001F80  82C2               	bsf	194,1,c	;volatile
  2729   001F82                     
  2730                           ;MCAL_Layer/ADC/hal_adc.c: 157:         ret = (Std_ReturnType)0x01;
  2731   001F82  0E01               	movlw	1
  2732   001F84  6E54               	movwf	ADC_StartConversion@ret^0,c
  2733   001F86                     l380:
  2734                           
  2735                           ;MCAL_Layer/ADC/hal_adc.c: 159:     return ret;
  2736   001F86  5054               	movf	ADC_StartConversion@ret^0,w,c
  2737   001F88  0012               	return		;funcret
  2738   001F8A                     __end_of_ADC_StartConversion:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _ADC_SelectChannel *****************
  2742 ;; Defined at:
  2743 ;;		line 123 in file "MCAL_Layer/ADC/hal_adc.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  _adc            2   15[COMRAM] PTR const struct .
  2746 ;;		 -> adc_1(7), 
  2747 ;;  channel         1   17[COMRAM] enum E3032
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  ret             1   19[COMRAM] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      unsigned char 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        5 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 5
  2766 ;; This function calls:
  2767 ;;		_adc_input_channel_port_config
  2768 ;; This function is called by:
  2769 ;;		_ADC_StartConversion_Interrupt
  2770 ;;		_ADC_GetConversion_Blocking
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text18
  2775   001E66                     __ptext18:
  2776                           	callstack 0
  2777   001E66                     _ADC_SelectChannel:
  2778                           	callstack 24
  2779   001E66                     
  2780                           ;MCAL_Layer/ADC/hal_adc.c: 126:     if(((void*)0) == _adc)
  2781   001E66  5055               	movf	ADC_SelectChannel@_adc^0,w,c
  2782   001E68  1056               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  2783   001E6A  A4D8               	btfss	status,2,c
  2784   001E6C  EF3A  F00F         	goto	u3401
  2785   001E70  EF3C  F00F         	goto	u3400
  2786   001E74                     u3401:
  2787   001E74  EF40  F00F         	goto	l5194
  2788   001E78                     u3400:
  2789   001E78                     
  2790                           ;MCAL_Layer/ADC/hal_adc.c: 127:     {;MCAL_Layer/ADC/hal_adc.c: 128:         ret = (Std_
      +                          ReturnType)0x00;
  2791   001E78  0E00               	movlw	0
  2792   001E7A  6E59               	movwf	ADC_SelectChannel@ret^0,c
  2793                           
  2794                           ;MCAL_Layer/ADC/hal_adc.c: 129:     }
  2795   001E7C  EF4E  F00F         	goto	l5200
  2796   001E80                     l5194:
  2797                           
  2798                           ;MCAL_Layer/ADC/hal_adc.c: 131:     {;MCAL_Layer/ADC/hal_adc.c: 133:         ADCON0bits.
      +                          CHS = channel;
  2799   001E80  C057  F058         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  2800   001E84  4658               	rlncf	??_ADC_SelectChannel^0,f,c
  2801   001E86  4658               	rlncf	??_ADC_SelectChannel^0,f,c
  2802   001E88  50C2               	movf	194,w,c	;volatile
  2803   001E8A  1858               	xorwf	??_ADC_SelectChannel^0,w,c
  2804   001E8C  0BC3               	andlw	-61
  2805   001E8E  1858               	xorwf	??_ADC_SelectChannel^0,w,c
  2806   001E90  6EC2               	movwf	194,c	;volatile
  2807   001E92                     
  2808                           ;MCAL_Layer/ADC/hal_adc.c: 134:         adc_input_channel_port_config(channel);
  2809   001E92  5057               	movf	ADC_SelectChannel@channel^0,w,c
  2810   001E94  EC80  F00C         	call	_adc_input_channel_port_config
  2811   001E98                     
  2812                           ;MCAL_Layer/ADC/hal_adc.c: 135:         ret = (Std_ReturnType)0x01;
  2813   001E98  0E01               	movlw	1
  2814   001E9A  6E59               	movwf	ADC_SelectChannel@ret^0,c
  2815   001E9C                     l5200:
  2816                           
  2817                           ;MCAL_Layer/ADC/hal_adc.c: 137:     return ret;
  2818   001E9C  5059               	movf	ADC_SelectChannel@ret^0,w,c
  2819   001E9E  0012               	return		;funcret
  2820   001EA0                     __end_of_ADC_SelectChannel:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function _adc_input_channel_port_config *****************
  2824 ;; Defined at:
  2825 ;;		line 278 in file "MCAL_Layer/ADC/hal_adc.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  channel         1    wreg     enum E3032
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  channel         1   14[COMRAM] enum E3032
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;Total ram usage:        3 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 4
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_ADC_Init
  2850 ;;		_ADC_SelectChannel
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text19
  2855   001900                     __ptext19:
  2856                           	callstack 0
  2857   001900                     _adc_input_channel_port_config:
  2858                           	callstack 24
  2859                           
  2860                           ;incstack = 0
  2861                           ;adc_input_channel_port_config@channel stored from wreg
  2862   001900  6E54               	movwf	adc_input_channel_port_config@channel^0,c
  2863   001902                     
  2864                           ;MCAL_Layer/ADC/hal_adc.c: 278: static __attribute__((inline)) void adc_input_channel_po
      +                          rt_config(adc_channel_select_t channel);MCAL_Layer/ADC/hal_adc.c: 279: {;MCAL_Layer/ADC/
      +                          hal_adc.c: 280:    switch(channel)
  2865   001902  EFAA  F00C         	goto	l5070
  2866   001906                     l5042:
  2867   001906  8092               	bsf	146,0,c	;volatile
  2868   001908  EFEB  F00C         	goto	l432
  2869   00190C                     l5044:
  2870   00190C  8292               	bsf	146,1,c	;volatile
  2871   00190E  EFEB  F00C         	goto	l432
  2872   001912                     l5046:
  2873   001912  8492               	bsf	146,2,c	;volatile
  2874   001914  EFEB  F00C         	goto	l432
  2875   001918                     l5048:
  2876   001918  8692               	bsf	146,3,c	;volatile
  2877   00191A  EFEB  F00C         	goto	l432
  2878   00191E                     l5050:
  2879   00191E  8A92               	bsf	146,5,c	;volatile
  2880   001920  EFEB  F00C         	goto	l432
  2881   001924                     l5052:
  2882   001924  8096               	bsf	150,0,c	;volatile
  2883   001926  EFEB  F00C         	goto	l432
  2884   00192A                     l5054:
  2885   00192A  8296               	bsf	150,1,c	;volatile
  2886   00192C  EFEB  F00C         	goto	l432
  2887   001930                     l5056:
  2888   001930  8496               	bsf	150,2,c	;volatile
  2889   001932  EFEB  F00C         	goto	l432
  2890   001936                     l5058:
  2891   001936  8493               	bsf	147,2,c	;volatile
  2892   001938  EFEB  F00C         	goto	l432
  2893   00193C                     l5060:
  2894   00193C  8693               	bsf	147,3,c	;volatile
  2895   00193E  EFEB  F00C         	goto	l432
  2896   001942                     l5062:
  2897   001942  8293               	bsf	147,1,c	;volatile
  2898   001944  EFEB  F00C         	goto	l432
  2899   001948                     l5064:
  2900   001948  8893               	bsf	147,4,c	;volatile
  2901   00194A  EFEB  F00C         	goto	l432
  2902   00194E                     l5066:
  2903   00194E  8093               	bsf	147,0,c	;volatile
  2904   001950  EFEB  F00C         	goto	l432
  2905   001954                     l5070:
  2906   001954  5054               	movf	adc_input_channel_port_config@channel^0,w,c
  2907   001956  6E52               	movwf	??_adc_input_channel_port_config^0,c
  2908   001958  6A53               	clrf	(??_adc_input_channel_port_config+1)^0,c
  2909                           
  2910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2911                           ; Switch size 1, requested type "simple"
  2912                           ; Number of cases is 1, Range of values is 0 to 0
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte            4     3 (average)
  2916                           ;	Chosen strategy is simple_byte
  2917   00195A  5053               	movf	(??_adc_input_channel_port_config+1)^0,w,c
  2918   00195C  0A00               	xorlw	0	; case 0
  2919   00195E  B4D8               	btfsc	status,2,c
  2920   001960  EFB4  F00C         	goto	l6956
  2921   001964  EFEB  F00C         	goto	l432
  2922   001968                     l6956:
  2923                           
  2924                           ; Switch size 1, requested type "simple"
  2925                           ; Number of cases is 13, Range of values is 0 to 12
  2926                           ; switch strategies available:
  2927                           ; Name         Instructions Cycles
  2928                           ; simple_byte           40    21 (average)
  2929                           ;	Chosen strategy is simple_byte
  2930   001968  5052               	movf	??_adc_input_channel_port_config^0,w,c
  2931   00196A  0A00               	xorlw	0	; case 0
  2932   00196C  B4D8               	btfsc	status,2,c
  2933   00196E  EF83  F00C         	goto	l5042
  2934   001972  0A01               	xorlw	1	; case 1
  2935   001974  B4D8               	btfsc	status,2,c
  2936   001976  EF86  F00C         	goto	l5044
  2937   00197A  0A03               	xorlw	3	; case 2
  2938   00197C  B4D8               	btfsc	status,2,c
  2939   00197E  EF89  F00C         	goto	l5046
  2940   001982  0A01               	xorlw	1	; case 3
  2941   001984  B4D8               	btfsc	status,2,c
  2942   001986  EF8C  F00C         	goto	l5048
  2943   00198A  0A07               	xorlw	7	; case 4
  2944   00198C  B4D8               	btfsc	status,2,c
  2945   00198E  EF8F  F00C         	goto	l5050
  2946   001992  0A01               	xorlw	1	; case 5
  2947   001994  B4D8               	btfsc	status,2,c
  2948   001996  EF92  F00C         	goto	l5052
  2949   00199A  0A03               	xorlw	3	; case 6
  2950   00199C  B4D8               	btfsc	status,2,c
  2951   00199E  EF95  F00C         	goto	l5054
  2952   0019A2  0A01               	xorlw	1	; case 7
  2953   0019A4  B4D8               	btfsc	status,2,c
  2954   0019A6  EF98  F00C         	goto	l5056
  2955   0019AA  0A0F               	xorlw	15	; case 8
  2956   0019AC  B4D8               	btfsc	status,2,c
  2957   0019AE  EF9B  F00C         	goto	l5058
  2958   0019B2  0A01               	xorlw	1	; case 9
  2959   0019B4  B4D8               	btfsc	status,2,c
  2960   0019B6  EF9E  F00C         	goto	l5060
  2961   0019BA  0A03               	xorlw	3	; case 10
  2962   0019BC  B4D8               	btfsc	status,2,c
  2963   0019BE  EFA1  F00C         	goto	l5062
  2964   0019C2  0A01               	xorlw	1	; case 11
  2965   0019C4  B4D8               	btfsc	status,2,c
  2966   0019C6  EFA4  F00C         	goto	l5064
  2967   0019CA  0A07               	xorlw	7	; case 12
  2968   0019CC  B4D8               	btfsc	status,2,c
  2969   0019CE  EFA7  F00C         	goto	l5066
  2970   0019D2  EFEB  F00C         	goto	l432
  2971   0019D6                     l432:
  2972   0019D6  0012               	return		;funcret
  2973   0019D8                     __end_of_adc_input_channel_port_config:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _InterruptManager *****************
  2977 ;; Defined at:
  2978 ;;		line 46 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;Total ram usage:        4 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 3
  2999 ;; This function calls:
  3000 ;;		_ADC_ISR
  3001 ;;		_CCP1_ISR
  3002 ;;		_CCP2_ISR
  3003 ;;		_INT0_ISR
  3004 ;;		_INT1_ISR
  3005 ;;		_INT2_ISR
  3006 ;;		_MSSP_I2C_BC_ISR
  3007 ;;		_MSSP_I2C_ISR
  3008 ;;		_RB4_ISR
  3009 ;;		_RB5_ISR
  3010 ;;		_RB6_ISR
  3011 ;;		_RB7_ISR
  3012 ;;		_TMR0_ISR
  3013 ;;		_TMR1_ISR
  3014 ;;		_TMR2_ISR
  3015 ;;		_TMR3_ISR
  3016 ;;		_USART_RX_ISR
  3017 ;;		_USART_TX_ISR
  3018 ;; This function is called by:
  3019 ;;		Interrupt level 2
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	intcode
  3024   000008                     __pintcode:
  3025                           	callstack 0
  3026   000008                     _InterruptManager:
  3027                           	callstack 21
  3028                           
  3029                           ;incstack = 0
  3030   000008  8272               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3031   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
  3032                           
  3033                           	psect	intcode_body
  3034   001016                     __pintcode_body:
  3035                           	callstack 21
  3036   001016                     int_func:
  3037                           	callstack 21
  3038   001016  0006               	pop		; remove dummy address from shadow register refresh
  3039   001018  CFFA F04E          	movff	pclath,??_InterruptManager
  3040   00101C  CFFB F04F          	movff	pclatu,??_InterruptManager+1
  3041   001020  CFD9 F050          	movff	fsr2l,??_InterruptManager+2
  3042   001024  CFDA F051          	movff	fsr2h,??_InterruptManager+3
  3043   001028                     
  3044                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF))
  3045   001028  A8F2               	btfss	242,4,c	;volatile
  3046   00102A  EF19  F008         	goto	i2u425_41
  3047   00102E  EF1B  F008         	goto	i2u425_40
  3048   001032                     i2u425_41:
  3049   001032  EF24  F008         	goto	i2l1160
  3050   001036                     i2u425_40:
  3051   001036  A2F2               	btfss	242,1,c	;volatile
  3052   001038  EF20  F008         	goto	i2u426_41
  3053   00103C  EF22  F008         	goto	i2u426_40
  3054   001040                     i2u426_41:
  3055   001040  EF24  F008         	goto	i2l1160
  3056   001044                     i2u426_40:
  3057   001044                     
  3058                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 51:         INT0_ISR();
  3059   001044  EC52  F010         	call	_INT0_ISR	;wreg free
  3060   001048                     i2l1160:
  3061                           
  3062                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F))
  3063   001048  A6F0               	btfss	240,3,c	;volatile
  3064   00104A  EF29  F008         	goto	i2u427_41
  3065   00104E  EF2B  F008         	goto	i2u427_40
  3066   001052                     i2u427_41:
  3067   001052  EF34  F008         	goto	i2l1162
  3068   001056                     i2u427_40:
  3069   001056  A0F0               	btfss	240,0,c	;volatile
  3070   001058  EF30  F008         	goto	i2u428_41
  3071   00105C  EF32  F008         	goto	i2u428_40
  3072   001060                     i2u428_41:
  3073   001060  EF34  F008         	goto	i2l1162
  3074   001064                     i2u428_40:
  3075   001064                     
  3076                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 56:         INT1_ISR();
  3077   001064  EC50  F010         	call	_INT1_ISR	;wreg free
  3078   001068                     i2l1162:
  3079                           
  3080                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF))
  3081   001068  A8F0               	btfss	240,4,c	;volatile
  3082   00106A  EF39  F008         	goto	i2u429_41
  3083   00106E  EF3B  F008         	goto	i2u429_40
  3084   001072                     i2u429_41:
  3085   001072  EF44  F008         	goto	i2l1164
  3086   001076                     i2u429_40:
  3087   001076  A2F0               	btfss	240,1,c	;volatile
  3088   001078  EF40  F008         	goto	i2u430_41
  3089   00107C  EF42  F008         	goto	i2u430_40
  3090   001080                     i2u430_41:
  3091   001080  EF44  F008         	goto	i2l1164
  3092   001084                     i2u430_40:
  3093   001084                     
  3094                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 61:         INT2_ISR();
  3095   001084  EC4E  F010         	call	_INT2_ISR	;wreg free
  3096   001088                     i2l1164:
  3097                           
  3098                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3099   001088  A6F2               	btfss	242,3,c	;volatile
  3100   00108A  EF49  F008         	goto	i2u431_41
  3101   00108E  EF4B  F008         	goto	i2u431_40
  3102   001092                     i2u431_41:
  3103   001092  EF66  F008         	goto	i2l1166
  3104   001096                     i2u431_40:
  3105   001096  A0F2               	btfss	242,0,c	;volatile
  3106   001098  EF50  F008         	goto	i2u432_41
  3107   00109C  EF52  F008         	goto	i2u432_40
  3108   0010A0                     i2u432_41:
  3109   0010A0  EF66  F008         	goto	i2l1166
  3110   0010A4                     i2u432_40:
  3111   0010A4  A881               	btfss	129,4,c	;volatile
  3112   0010A6  EF57  F008         	goto	i2u433_41
  3113   0010AA  EF59  F008         	goto	i2u433_40
  3114   0010AE                     i2u433_41:
  3115   0010AE  EF66  F008         	goto	i2l1166
  3116   0010B2                     i2u433_40:
  3117   0010B2  0471               	decf	_RB4_Flag^0,w,c	;volatile
  3118   0010B4  A4D8               	btfss	status,2,c
  3119   0010B6  EF5F  F008         	goto	i2u434_41
  3120   0010BA  EF61  F008         	goto	i2u434_40
  3121   0010BE                     i2u434_41:
  3122   0010BE  EF66  F008         	goto	i2l1166
  3123   0010C2                     i2u434_40:
  3124   0010C2                     
  3125                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 70:         RB4_Flag = 0;
  3126   0010C2  0E00               	movlw	0
  3127   0010C4  6E71               	movwf	_RB4_Flag^0,c	;volatile
  3128   0010C6                     
  3129                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:         RB4_ISR(0);
  3130   0010C6  0E00               	movlw	0
  3131   0010C8  EC09  F010         	call	_RB4_ISR
  3132   0010CC                     i2l1166:
  3133                           
  3134                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3135   0010CC  A6F2               	btfss	242,3,c	;volatile
  3136   0010CE  EF6B  F008         	goto	i2u435_41
  3137   0010D2  EF6D  F008         	goto	i2u435_40
  3138   0010D6                     i2u435_41:
  3139   0010D6  EF88  F008         	goto	i2l1168
  3140   0010DA                     i2u435_40:
  3141   0010DA  A0F2               	btfss	242,0,c	;volatile
  3142   0010DC  EF72  F008         	goto	i2u436_41
  3143   0010E0  EF74  F008         	goto	i2u436_40
  3144   0010E4                     i2u436_41:
  3145   0010E4  EF88  F008         	goto	i2l1168
  3146   0010E8                     i2u436_40:
  3147   0010E8  B881               	btfsc	129,4,c	;volatile
  3148   0010EA  EF79  F008         	goto	i2u437_41
  3149   0010EE  EF7B  F008         	goto	i2u437_40
  3150   0010F2                     i2u437_41:
  3151   0010F2  EF88  F008         	goto	i2l1168
  3152   0010F6                     i2u437_40:
  3153   0010F6  5071               	movf	_RB4_Flag^0,w,c	;volatile
  3154   0010F8  A4D8               	btfss	status,2,c
  3155   0010FA  EF81  F008         	goto	i2u438_41
  3156   0010FE  EF83  F008         	goto	i2u438_40
  3157   001102                     i2u438_41:
  3158   001102  EF88  F008         	goto	i2l1168
  3159   001106                     i2u438_40:
  3160   001106                     
  3161                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 77:         RB4_Flag = 1;
  3162   001106  0E01               	movlw	1
  3163   001108  6E71               	movwf	_RB4_Flag^0,c	;volatile
  3164   00110A                     
  3165                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:         RB4_ISR(1);
  3166   00110A  0E01               	movlw	1
  3167   00110C  EC09  F010         	call	_RB4_ISR
  3168   001110                     i2l1168:
  3169                           
  3170                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3171   001110  A6F2               	btfss	242,3,c	;volatile
  3172   001112  EF8D  F008         	goto	i2u439_41
  3173   001116  EF8F  F008         	goto	i2u439_40
  3174   00111A                     i2u439_41:
  3175   00111A  EFAA  F008         	goto	i2l1170
  3176   00111E                     i2u439_40:
  3177   00111E  A0F2               	btfss	242,0,c	;volatile
  3178   001120  EF94  F008         	goto	i2u440_41
  3179   001124  EF96  F008         	goto	i2u440_40
  3180   001128                     i2u440_41:
  3181   001128  EFAA  F008         	goto	i2l1170
  3182   00112C                     i2u440_40:
  3183   00112C  AA81               	btfss	129,5,c	;volatile
  3184   00112E  EF9B  F008         	goto	i2u441_41
  3185   001132  EF9D  F008         	goto	i2u441_40
  3186   001136                     i2u441_41:
  3187   001136  EFAA  F008         	goto	i2l1170
  3188   00113A                     i2u441_40:
  3189   00113A  0470               	decf	_RB5_Flag^0,w,c	;volatile
  3190   00113C  A4D8               	btfss	status,2,c
  3191   00113E  EFA3  F008         	goto	i2u442_41
  3192   001142  EFA5  F008         	goto	i2u442_40
  3193   001146                     i2u442_41:
  3194   001146  EFAA  F008         	goto	i2l1170
  3195   00114A                     i2u442_40:
  3196   00114A                     
  3197                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 83:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 84:         RB5_Flag = 0;
  3198   00114A  0E00               	movlw	0
  3199   00114C  6E70               	movwf	_RB5_Flag^0,c	;volatile
  3200   00114E                     
  3201                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:         RB5_ISR(0);
  3202   00114E  0E00               	movlw	0
  3203   001150  ECFC  F00F         	call	_RB5_ISR
  3204   001154                     i2l1170:
  3205                           
  3206                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3207   001154  A6F2               	btfss	242,3,c	;volatile
  3208   001156  EFAF  F008         	goto	i2u443_41
  3209   00115A  EFB1  F008         	goto	i2u443_40
  3210   00115E                     i2u443_41:
  3211   00115E  EFCC  F008         	goto	i2l1172
  3212   001162                     i2u443_40:
  3213   001162  A0F2               	btfss	242,0,c	;volatile
  3214   001164  EFB6  F008         	goto	i2u444_41
  3215   001168  EFB8  F008         	goto	i2u444_40
  3216   00116C                     i2u444_41:
  3217   00116C  EFCC  F008         	goto	i2l1172
  3218   001170                     i2u444_40:
  3219   001170  BA81               	btfsc	129,5,c	;volatile
  3220   001172  EFBD  F008         	goto	i2u445_41
  3221   001176  EFBF  F008         	goto	i2u445_40
  3222   00117A                     i2u445_41:
  3223   00117A  EFCC  F008         	goto	i2l1172
  3224   00117E                     i2u445_40:
  3225   00117E  5070               	movf	_RB5_Flag^0,w,c	;volatile
  3226   001180  A4D8               	btfss	status,2,c
  3227   001182  EFC5  F008         	goto	i2u446_41
  3228   001186  EFC7  F008         	goto	i2u446_40
  3229   00118A                     i2u446_41:
  3230   00118A  EFCC  F008         	goto	i2l1172
  3231   00118E                     i2u446_40:
  3232   00118E                     
  3233                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 91:         RB5_Flag = 1;
  3234   00118E  0E01               	movlw	1
  3235   001190  6E70               	movwf	_RB5_Flag^0,c	;volatile
  3236   001192                     
  3237                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:         RB5_ISR(1);
  3238   001192  0E01               	movlw	1
  3239   001194  ECFC  F00F         	call	_RB5_ISR
  3240   001198                     i2l1172:
  3241                           
  3242                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3243   001198  A6F2               	btfss	242,3,c	;volatile
  3244   00119A  EFD1  F008         	goto	i2u447_41
  3245   00119E  EFD3  F008         	goto	i2u447_40
  3246   0011A2                     i2u447_41:
  3247   0011A2  EFEE  F008         	goto	i2l1174
  3248   0011A6                     i2u447_40:
  3249   0011A6  A0F2               	btfss	242,0,c	;volatile
  3250   0011A8  EFD8  F008         	goto	i2u448_41
  3251   0011AC  EFDA  F008         	goto	i2u448_40
  3252   0011B0                     i2u448_41:
  3253   0011B0  EFEE  F008         	goto	i2l1174
  3254   0011B4                     i2u448_40:
  3255   0011B4  AC81               	btfss	129,6,c	;volatile
  3256   0011B6  EFDF  F008         	goto	i2u449_41
  3257   0011BA  EFE1  F008         	goto	i2u449_40
  3258   0011BE                     i2u449_41:
  3259   0011BE  EFEE  F008         	goto	i2l1174
  3260   0011C2                     i2u449_40:
  3261   0011C2  046F               	decf	_RB6_Flag^0,w,c	;volatile
  3262   0011C4  A4D8               	btfss	status,2,c
  3263   0011C6  EFE7  F008         	goto	i2u450_41
  3264   0011CA  EFE9  F008         	goto	i2u450_40
  3265   0011CE                     i2u450_41:
  3266   0011CE  EFEE  F008         	goto	i2l1174
  3267   0011D2                     i2u450_40:
  3268   0011D2                     
  3269                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 97:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 98:         RB6_Flag = 0;
  3270   0011D2  0E00               	movlw	0
  3271   0011D4  6E6F               	movwf	_RB6_Flag^0,c	;volatile
  3272   0011D6                     
  3273                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:         RB6_ISR(0);
  3274   0011D6  0E00               	movlw	0
  3275   0011D8  ECEF  F00F         	call	_RB6_ISR
  3276   0011DC                     i2l1174:
  3277                           
  3278                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 102:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  3279   0011DC  A6F2               	btfss	242,3,c	;volatile
  3280   0011DE  EFF3  F008         	goto	i2u451_41
  3281   0011E2  EFF5  F008         	goto	i2u451_40
  3282   0011E6                     i2u451_41:
  3283   0011E6  EF10  F009         	goto	i2l1176
  3284   0011EA                     i2u451_40:
  3285   0011EA  A0F2               	btfss	242,0,c	;volatile
  3286   0011EC  EFFA  F008         	goto	i2u452_41
  3287   0011F0  EFFC  F008         	goto	i2u452_40
  3288   0011F4                     i2u452_41:
  3289   0011F4  EF10  F009         	goto	i2l1176
  3290   0011F8                     i2u452_40:
  3291   0011F8  BC81               	btfsc	129,6,c	;volatile
  3292   0011FA  EF01  F009         	goto	i2u453_41
  3293   0011FE  EF03  F009         	goto	i2u453_40
  3294   001202                     i2u453_41:
  3295   001202  EF10  F009         	goto	i2l1176
  3296   001206                     i2u453_40:
  3297   001206  506F               	movf	_RB6_Flag^0,w,c	;volatile
  3298   001208  A4D8               	btfss	status,2,c
  3299   00120A  EF09  F009         	goto	i2u454_41
  3300   00120E  EF0B  F009         	goto	i2u454_40
  3301   001212                     i2u454_41:
  3302   001212  EF10  F009         	goto	i2l1176
  3303   001216                     i2u454_40:
  3304   001216                     
  3305                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 105:         RB6_Flag = 1;
  3306   001216  0E01               	movlw	1
  3307   001218  6E6F               	movwf	_RB6_Flag^0,c	;volatile
  3308   00121A                     
  3309                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:         RB6_ISR(1);
  3310   00121A  0E01               	movlw	1
  3311   00121C  ECEF  F00F         	call	_RB6_ISR
  3312   001220                     i2l1176:
  3313                           
  3314                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  3315   001220  A6F2               	btfss	242,3,c	;volatile
  3316   001222  EF15  F009         	goto	i2u455_41
  3317   001226  EF17  F009         	goto	i2u455_40
  3318   00122A                     i2u455_41:
  3319   00122A  EF32  F009         	goto	i2l1178
  3320   00122E                     i2u455_40:
  3321   00122E  A0F2               	btfss	242,0,c	;volatile
  3322   001230  EF1C  F009         	goto	i2u456_41
  3323   001234  EF1E  F009         	goto	i2u456_40
  3324   001238                     i2u456_41:
  3325   001238  EF32  F009         	goto	i2l1178
  3326   00123C                     i2u456_40:
  3327   00123C  AE81               	btfss	129,7,c	;volatile
  3328   00123E  EF23  F009         	goto	i2u457_41
  3329   001242  EF25  F009         	goto	i2u457_40
  3330   001246                     i2u457_41:
  3331   001246  EF32  F009         	goto	i2l1178
  3332   00124A                     i2u457_40:
  3333   00124A  046E               	decf	_RB7_Flag^0,w,c	;volatile
  3334   00124C  A4D8               	btfss	status,2,c
  3335   00124E  EF2B  F009         	goto	i2u458_41
  3336   001252  EF2D  F009         	goto	i2u458_40
  3337   001256                     i2u458_41:
  3338   001256  EF32  F009         	goto	i2l1178
  3339   00125A                     i2u458_40:
  3340   00125A                     
  3341                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 112:         RB7_Flag = 0;
  3342   00125A  0E00               	movlw	0
  3343   00125C  6E6E               	movwf	_RB7_Flag^0,c	;volatile
  3344   00125E                     
  3345                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         RB7_ISR(0);
  3346   00125E  0E00               	movlw	0
  3347   001260  ECE2  F00F         	call	_RB7_ISR
  3348   001264                     i2l1178:
  3349                           
  3350                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  3351   001264  A6F2               	btfss	242,3,c	;volatile
  3352   001266  EF37  F009         	goto	i2u459_41
  3353   00126A  EF39  F009         	goto	i2u459_40
  3354   00126E                     i2u459_41:
  3355   00126E  EF54  F009         	goto	i2l1180
  3356   001272                     i2u459_40:
  3357   001272  A0F2               	btfss	242,0,c	;volatile
  3358   001274  EF3E  F009         	goto	i2u460_41
  3359   001278  EF40  F009         	goto	i2u460_40
  3360   00127C                     i2u460_41:
  3361   00127C  EF54  F009         	goto	i2l1180
  3362   001280                     i2u460_40:
  3363   001280  BE81               	btfsc	129,7,c	;volatile
  3364   001282  EF45  F009         	goto	i2u461_41
  3365   001286  EF47  F009         	goto	i2u461_40
  3366   00128A                     i2u461_41:
  3367   00128A  EF54  F009         	goto	i2l1180
  3368   00128E                     i2u461_40:
  3369   00128E  506E               	movf	_RB7_Flag^0,w,c	;volatile
  3370   001290  A4D8               	btfss	status,2,c
  3371   001292  EF4D  F009         	goto	i2u462_41
  3372   001296  EF4F  F009         	goto	i2u462_40
  3373   00129A                     i2u462_41:
  3374   00129A  EF54  F009         	goto	i2l1180
  3375   00129E                     i2u462_40:
  3376   00129E                     
  3377                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 118:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 119:         RB7_Flag = 1;
  3378   00129E  0E01               	movlw	1
  3379   0012A0  6E6E               	movwf	_RB7_Flag^0,c	;volatile
  3380   0012A2                     
  3381                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 120:         RB7_ISR(1);
  3382   0012A2  0E01               	movlw	1
  3383   0012A4  ECE2  F00F         	call	_RB7_ISR
  3384   0012A8                     i2l1180:
  3385                           
  3386                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:     if((1 == PIE1bits.ADIE) && (1 =
      +                          = PIR1bits.ADIF))
  3387   0012A8  AC9D               	btfss	157,6,c	;volatile
  3388   0012AA  EF59  F009         	goto	i2u463_41
  3389   0012AE  EF5B  F009         	goto	i2u463_40
  3390   0012B2                     i2u463_41:
  3391   0012B2  EF64  F009         	goto	i2l1182
  3392   0012B6                     i2u463_40:
  3393   0012B6  AC9E               	btfss	158,6,c	;volatile
  3394   0012B8  EF60  F009         	goto	i2u464_41
  3395   0012BC  EF62  F009         	goto	i2u464_40
  3396   0012C0                     i2u464_41:
  3397   0012C0  EF64  F009         	goto	i2l1182
  3398   0012C4                     i2u464_40:
  3399   0012C4                     
  3400                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 127:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 128:         ADC_ISR();
  3401   0012C4  EC86  F00F         	call	_ADC_ISR	;wreg free
  3402   0012C8                     i2l1182:
  3403                           
  3404                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 134:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF))
  3405   0012C8  AAF2               	btfss	242,5,c	;volatile
  3406   0012CA  EF69  F009         	goto	i2u465_41
  3407   0012CE  EF6B  F009         	goto	i2u465_40
  3408   0012D2                     i2u465_41:
  3409   0012D2  EF74  F009         	goto	i2l1184
  3410   0012D6                     i2u465_40:
  3411   0012D6  A4F2               	btfss	242,2,c	;volatile
  3412   0012D8  EF70  F009         	goto	i2u466_41
  3413   0012DC  EF72  F009         	goto	i2u466_40
  3414   0012E0                     i2u466_41:
  3415   0012E0  EF74  F009         	goto	i2l1184
  3416   0012E4                     i2u466_40:
  3417   0012E4                     
  3418                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 136:         TMR0_ISR();
  3419   0012E4  EC3E  F010         	call	_TMR0_ISR	;wreg free
  3420   0012E8                     i2l1184:
  3421                           
  3422                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF))
  3423   0012E8  A09D               	btfss	157,0,c	;volatile
  3424   0012EA  EF79  F009         	goto	i2u467_41
  3425   0012EE  EF7B  F009         	goto	i2u467_40
  3426   0012F2                     i2u467_41:
  3427   0012F2  EF84  F009         	goto	i2l1186
  3428   0012F6                     i2u467_40:
  3429   0012F6  A09E               	btfss	158,0,c	;volatile
  3430   0012F8  EF80  F009         	goto	i2u468_41
  3431   0012FC  EF82  F009         	goto	i2u468_40
  3432   001300                     i2u468_41:
  3433   001300  EF84  F009         	goto	i2l1186
  3434   001304                     i2u468_40:
  3435   001304                     
  3436                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 141:         TMR1_ISR();
  3437   001304  EC38  F010         	call	_TMR1_ISR	;wreg free
  3438   001308                     i2l1186:
  3439                           
  3440                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 144:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF))
  3441   001308  A29D               	btfss	157,1,c	;volatile
  3442   00130A  EF89  F009         	goto	i2u469_41
  3443   00130E  EF8B  F009         	goto	i2u469_40
  3444   001312                     i2u469_41:
  3445   001312  EF94  F009         	goto	i2l1188
  3446   001316                     i2u469_40:
  3447   001316  A29E               	btfss	158,1,c	;volatile
  3448   001318  EF90  F009         	goto	i2u470_41
  3449   00131C  EF92  F009         	goto	i2u470_40
  3450   001320                     i2u470_41:
  3451   001320  EF94  F009         	goto	i2l1188
  3452   001324                     i2u470_40:
  3453   001324                     
  3454                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 146:         TMR2_ISR();
  3455   001324  EC44  F010         	call	_TMR2_ISR	;wreg free
  3456   001328                     i2l1188:
  3457                           
  3458                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF))
  3459   001328  A2A0               	btfss	160,1,c	;volatile
  3460   00132A  EF99  F009         	goto	i2u471_41
  3461   00132E  EF9B  F009         	goto	i2u471_40
  3462   001332                     i2u471_41:
  3463   001332  EFA4  F009         	goto	i2l1190
  3464   001336                     i2u471_40:
  3465   001336  A2A1               	btfss	161,1,c	;volatile
  3466   001338  EFA0  F009         	goto	i2u472_41
  3467   00133C  EFA2  F009         	goto	i2u472_40
  3468   001340                     i2u472_41:
  3469   001340  EFA4  F009         	goto	i2l1190
  3470   001344                     i2u472_40:
  3471   001344                     
  3472                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 151:         TMR3_ISR();
  3473   001344  EC32  F010         	call	_TMR3_ISR	;wreg free
  3474   001348                     i2l1190:
  3475                           
  3476                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 157:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF))
  3477   001348  A89D               	btfss	157,4,c	;volatile
  3478   00134A  EFA9  F009         	goto	i2u473_41
  3479   00134E  EFAB  F009         	goto	i2u473_40
  3480   001352                     i2u473_41:
  3481   001352  EFB4  F009         	goto	i2l1192
  3482   001356                     i2u473_40:
  3483   001356  A89E               	btfss	158,4,c	;volatile
  3484   001358  EFB0  F009         	goto	i2u474_41
  3485   00135C  EFB2  F009         	goto	i2u474_40
  3486   001360                     i2u474_41:
  3487   001360  EFB4  F009         	goto	i2l1192
  3488   001364                     i2u474_40:
  3489   001364                     
  3490                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 158:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 159:         USART_TX_ISR();
  3491   001364  EC48  F010         	call	_USART_TX_ISR	;wreg free
  3492   001368                     i2l1192:
  3493                           
  3494                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 162:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF))
  3495   001368  AA9D               	btfss	157,5,c	;volatile
  3496   00136A  EFB9  F009         	goto	i2u475_41
  3497   00136E  EFBB  F009         	goto	i2u475_40
  3498   001372                     i2u475_41:
  3499   001372  EFC4  F009         	goto	i2l1194
  3500   001376                     i2u475_40:
  3501   001376  AA9E               	btfss	158,5,c	;volatile
  3502   001378  EFC0  F009         	goto	i2u476_41
  3503   00137C  EFC2  F009         	goto	i2u476_40
  3504   001380                     i2u476_41:
  3505   001380  EFC4  F009         	goto	i2l1194
  3506   001384                     i2u476_40:
  3507   001384                     
  3508                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 163:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 164:         USART_RX_ISR();
  3509   001384  EC58  F010         	call	_USART_RX_ISR	;wreg free
  3510   001388                     i2l1194:
  3511                           
  3512                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 170:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF))
  3513   001388  A69D               	btfss	157,3,c	;volatile
  3514   00138A  EFC9  F009         	goto	i2u477_41
  3515   00138E  EFCB  F009         	goto	i2u477_40
  3516   001392                     i2u477_41:
  3517   001392  EFD4  F009         	goto	i2l1196
  3518   001396                     i2u477_40:
  3519   001396  A69E               	btfss	158,3,c	;volatile
  3520   001398  EFD0  F009         	goto	i2u478_41
  3521   00139C  EFD2  F009         	goto	i2u478_40
  3522   0013A0                     i2u478_41:
  3523   0013A0  EFD4  F009         	goto	i2l1196
  3524   0013A4                     i2u478_40:
  3525   0013A4                     
  3526                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 171:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 172:         MSSP_I2C_ISR();
  3527   0013A4  EC4A  F010         	call	_MSSP_I2C_ISR	;wreg free
  3528   0013A8                     i2l1196:
  3529                           
  3530                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 175:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF))
  3531   0013A8  A6A0               	btfss	160,3,c	;volatile
  3532   0013AA  EFD9  F009         	goto	i2u479_41
  3533   0013AE  EFDB  F009         	goto	i2u479_40
  3534   0013B2                     i2u479_41:
  3535   0013B2  EFE4  F009         	goto	i2l1198
  3536   0013B6                     i2u479_40:
  3537   0013B6  A6A1               	btfss	161,3,c	;volatile
  3538   0013B8  EFE0  F009         	goto	i2u480_41
  3539   0013BC  EFE2  F009         	goto	i2u480_40
  3540   0013C0                     i2u480_41:
  3541   0013C0  EFE4  F009         	goto	i2l1198
  3542   0013C4                     i2u480_40:
  3543   0013C4                     
  3544                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 176:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 177:         MSSP_I2C_BC_ISR();
  3545   0013C4  EC4C  F010         	call	_MSSP_I2C_BC_ISR	;wreg free
  3546   0013C8                     i2l1198:
  3547                           
  3548                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 183:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF))
  3549   0013C8  A49D               	btfss	157,2,c	;volatile
  3550   0013CA  EFE9  F009         	goto	i2u481_41
  3551   0013CE  EFEB  F009         	goto	i2u481_40
  3552   0013D2                     i2u481_41:
  3553   0013D2  EFF4  F009         	goto	i2l1200
  3554   0013D6                     i2u481_40:
  3555   0013D6  A49E               	btfss	158,2,c	;volatile
  3556   0013D8  EFF0  F009         	goto	i2u482_41
  3557   0013DC  EFF2  F009         	goto	i2u482_40
  3558   0013E0                     i2u482_41:
  3559   0013E0  EFF4  F009         	goto	i2l1200
  3560   0013E4                     i2u482_40:
  3561   0013E4                     
  3562                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 184:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 185:         CCP1_ISR();
  3563   0013E4  EC56  F010         	call	_CCP1_ISR	;wreg free
  3564   0013E8                     i2l1200:
  3565                           
  3566                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 188:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF))
  3567   0013E8  A0A0               	btfss	160,0,c	;volatile
  3568   0013EA  EFF9  F009         	goto	i2u483_41
  3569   0013EE  EFFB  F009         	goto	i2u483_40
  3570   0013F2                     i2u483_41:
  3571   0013F2  EF04  F00A         	goto	i2l1203
  3572   0013F6                     i2u483_40:
  3573   0013F6  A0A1               	btfss	161,0,c	;volatile
  3574   0013F8  EF00  F00A         	goto	i2u484_41
  3575   0013FC  EF02  F00A         	goto	i2u484_40
  3576   001400                     i2u484_41:
  3577   001400  EF04  F00A         	goto	i2l1203
  3578   001404                     i2u484_40:
  3579   001404                     
  3580                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 189:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 190:         CCP2_ISR();
  3581   001404  EC54  F010         	call	_CCP2_ISR	;wreg free
  3582   001408                     i2l1203:
  3583   001408  C051  FFDA         	movff	??_InterruptManager+3,fsr2h
  3584   00140C  C050  FFD9         	movff	??_InterruptManager+2,fsr2l
  3585   001410  C04F  FFFB         	movff	??_InterruptManager+1,pclatu
  3586   001414  C04E  FFFA         	movff	??_InterruptManager,pclath
  3587   001418  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3588   00141A  0011               	retfie		f
  3589   00141C                     __end_of_InterruptManager:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _USART_TX_ISR *****************
  3593 ;; Defined at:
  3594 ;;		line 409 in file "MCAL_Layer/USART/hal_usart.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		None
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;Total ram usage:        0 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_InterruptManager
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text21
  3622   002090                     __ptext21:
  3623                           	callstack 0
  3624   002090                     _USART_TX_ISR:
  3625                           	callstack 23
  3626   002090                     
  3627                           ;MCAL_Layer/USART/hal_usart.c: 412:     (PIE1bits.TXIE = 0);
  3628   002090  989D               	bcf	157,4,c	;volatile
  3629   002092  0012               	return		;funcret
  3630   002094                     __end_of_USART_TX_ISR:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _USART_RX_ISR *****************
  3634 ;; Defined at:
  3635 ;;		line 423 in file "MCAL_Layer/USART/hal_usart.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_InterruptManager
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text22
  3663   0020B0                     __ptext22:
  3664                           	callstack 0
  3665   0020B0                     _USART_RX_ISR:
  3666                           	callstack 23
  3667   0020B0  0012               	return		;funcret
  3668   0020B2                     __end_of_USART_RX_ISR:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _TMR3_ISR *****************
  3672 ;; Defined at:
  3673 ;;		line 172 in file "MCAL_Layer/Timer3/hal_timer3.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_InterruptManager
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text23
  3701   002064                     __ptext23:
  3702                           	callstack 0
  3703   002064                     _TMR3_ISR:
  3704                           	callstack 23
  3705   002064                     
  3706                           ;MCAL_Layer/Timer3/hal_timer3.c: 174:     (PIR2bits.TMR3IF = 0);
  3707   002064  92A1               	bcf	161,1,c	;volatile
  3708   002066                     
  3709                           ;MCAL_Layer/Timer3/hal_timer3.c: 175:     TMR3H = (timer3_preload) >> 8;
  3710   002066  500C               	movf	(_timer3_preload+1)^0,w,c
  3711   002068  6EB3               	movwf	179,c	;volatile
  3712   00206A                     
  3713                           ;MCAL_Layer/Timer3/hal_timer3.c: 176:     TMR3L = (uint8)(timer3_preload);
  3714   00206A  C00B  FFB2         	movff	_timer3_preload,4018	;volatile
  3715   00206E  0012               	return		;funcret
  3716   002070                     __end_of_TMR3_ISR:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _TMR2_ISR *****************
  3720 ;; Defined at:
  3721 ;;		line 162 in file "MCAL_Layer/Timer2/hal_timer2.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		None
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;Total ram usage:        0 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_InterruptManager
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text24
  3749   002088                     __ptext24:
  3750                           	callstack 0
  3751   002088                     _TMR2_ISR:
  3752                           	callstack 23
  3753   002088                     
  3754                           ;MCAL_Layer/Timer2/hal_timer2.c: 164:     (PIR1bits.TMR2IF = 0);
  3755   002088  929E               	bcf	158,1,c	;volatile
  3756                           
  3757                           ;MCAL_Layer/Timer2/hal_timer2.c: 165:     TMR2 = timer2_preload;
  3758   00208A  C03C  FFCC         	movff	_timer2_preload,4044	;volatile
  3759   00208E  0012               	return		;funcret
  3760   002090                     __end_of_TMR2_ISR:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _TMR1_ISR *****************
  3764 ;; Defined at:
  3765 ;;		line 172 in file "MCAL_Layer/Timer1/hal_timer1.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_InterruptManager
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text25
  3793   002070                     __ptext25:
  3794                           	callstack 0
  3795   002070                     _TMR1_ISR:
  3796                           	callstack 23
  3797   002070                     
  3798                           ;MCAL_Layer/Timer1/hal_timer1.c: 174:     (PIR1bits.TMR1IF = 0);
  3799   002070  909E               	bcf	158,0,c	;volatile
  3800   002072                     
  3801                           ;MCAL_Layer/Timer1/hal_timer1.c: 175:     TMR1H = (timer1_preload) >> 8;
  3802   002072  5012               	movf	(_timer1_preload+1)^0,w,c
  3803   002074  6ECF               	movwf	207,c	;volatile
  3804   002076                     
  3805                           ;MCAL_Layer/Timer1/hal_timer1.c: 176:     TMR1L = (uint8)(timer1_preload);
  3806   002076  C011  FFCE         	movff	_timer1_preload,4046	;volatile
  3807   00207A  0012               	return		;funcret
  3808   00207C                     __end_of_TMR1_ISR:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _TMR0_ISR *****************
  3812 ;; Defined at:
  3813 ;;		line 186 in file "MCAL_Layer/Timer0/hal_timer0.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_InterruptManager
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text26
  3841   00207C                     __ptext26:
  3842                           	callstack 0
  3843   00207C                     _TMR0_ISR:
  3844                           	callstack 23
  3845   00207C                     
  3846                           ;MCAL_Layer/Timer0/hal_timer0.c: 188:     (INTCONbits.TMR0IF = 0);
  3847   00207C  94F2               	bcf	242,2,c	;volatile
  3848   00207E                     
  3849                           ;MCAL_Layer/Timer0/hal_timer0.c: 189:     TMR0H = (timer0_preload) >> 8;
  3850   00207E  5016               	movf	(_timer0_preload+1)^0,w,c
  3851   002080  6ED7               	movwf	215,c	;volatile
  3852   002082                     
  3853                           ;MCAL_Layer/Timer0/hal_timer0.c: 190:     TMR0L = (uint8)(timer0_preload);
  3854   002082  C015  FFD6         	movff	_timer0_preload,4054	;volatile
  3855   002086  0012               	return		;funcret
  3856   002088                     __end_of_TMR0_ISR:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _RB7_ISR *****************
  3860 ;; Defined at:
  3861 ;;		line 284 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  RB7_Source      1    wreg     unsigned char 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;Total ram usage:        1 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_InterruptManager
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text27
  3889   001FC4                     __ptext27:
  3890                           	callstack 0
  3891   001FC4                     _RB7_ISR:
  3892                           	callstack 23
  3893                           
  3894                           ;incstack = 0
  3895                           ;RB7_ISR@RB7_Source stored from wreg
  3896   001FC4  6E46               	movwf	RB7_ISR@RB7_Source^0,c
  3897   001FC6                     
  3898                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 284: void RB7_ISR(uint8 RB7_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 285: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 286:     (INTCONbits.RBIF = 0);
  3899   001FC6  90F2               	bcf	242,0,c	;volatile
  3900   001FC8                     
  3901                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 287:     if(0 == RB7_Source)
  3902   001FC8  5046               	movf	RB7_ISR@RB7_Source^0,w,c
  3903   001FCA  A4D8               	btfss	status,2,c
  3904   001FCC  EFEA  F00F         	goto	i2u50_41
  3905   001FD0  EFEC  F00F         	goto	i2u50_40
  3906   001FD4                     i2u50_41:
  3907   001FD4  EFEE  F00F         	goto	i2l2852
  3908   001FD8                     i2u50_40:
  3909   001FD8  EFEE  F00F         	goto	i2l987
  3910   001FDC                     i2l2852:
  3911   001FDC                     i2l987:
  3912   001FDC  0012               	return		;funcret
  3913   001FDE                     __end_of_RB7_ISR:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _RB6_ISR *****************
  3917 ;; Defined at:
  3918 ;;		line 264 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  RB6_Source      1    wreg     unsigned char 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;Total ram usage:        1 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_InterruptManager
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text28
  3946   001FDE                     __ptext28:
  3947                           	callstack 0
  3948   001FDE                     _RB6_ISR:
  3949                           	callstack 23
  3950                           
  3951                           ;incstack = 0
  3952                           ;RB6_ISR@RB6_Source stored from wreg
  3953   001FDE  6E46               	movwf	RB6_ISR@RB6_Source^0,c
  3954   001FE0                     
  3955                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 264: void RB6_ISR(uint8 RB6_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 265: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 266:     (INTCONbits.RBIF = 0);
  3956   001FE0  90F2               	bcf	242,0,c	;volatile
  3957   001FE2                     
  3958                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 267:     if(0 == RB6_Source)
  3959   001FE2  5046               	movf	RB6_ISR@RB6_Source^0,w,c
  3960   001FE4  A4D8               	btfss	status,2,c
  3961   001FE6  EFF7  F00F         	goto	i2u49_41
  3962   001FEA  EFF9  F00F         	goto	i2u49_40
  3963   001FEE                     i2u49_41:
  3964   001FEE  EFFB  F00F         	goto	i2l2838
  3965   001FF2                     i2u49_40:
  3966   001FF2  EFFB  F00F         	goto	i2l976
  3967   001FF6                     i2l2838:
  3968   001FF6                     i2l976:
  3969   001FF6  0012               	return		;funcret
  3970   001FF8                     __end_of_RB6_ISR:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _RB5_ISR *****************
  3974 ;; Defined at:
  3975 ;;		line 244 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  RB5_Source      1    wreg     unsigned char 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        1 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_InterruptManager
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text29
  4003   001FF8                     __ptext29:
  4004                           	callstack 0
  4005   001FF8                     _RB5_ISR:
  4006                           	callstack 23
  4007                           
  4008                           ;incstack = 0
  4009                           ;RB5_ISR@RB5_Source stored from wreg
  4010   001FF8  6E46               	movwf	RB5_ISR@RB5_Source^0,c
  4011   001FFA                     
  4012                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 244: void RB5_ISR(uint8 RB5_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 245: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 246:     (INTCONbits.RBIF = 0);
  4013   001FFA  90F2               	bcf	242,0,c	;volatile
  4014   001FFC                     
  4015                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 247:     if(0 == RB5_Source)
  4016   001FFC  5046               	movf	RB5_ISR@RB5_Source^0,w,c
  4017   001FFE  A4D8               	btfss	status,2,c
  4018   002000  EF04  F010         	goto	i2u48_41
  4019   002004  EF06  F010         	goto	i2u48_40
  4020   002008                     i2u48_41:
  4021   002008  EF08  F010         	goto	i2l2824
  4022   00200C                     i2u48_40:
  4023   00200C  EF08  F010         	goto	i2l965
  4024   002010                     i2l2824:
  4025   002010                     i2l965:
  4026   002010  0012               	return		;funcret
  4027   002012                     __end_of_RB5_ISR:
  4028                           	callstack 0
  4029                           
  4030 ;; *************** function _RB4_ISR *****************
  4031 ;; Defined at:
  4032 ;;		line 224 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  RB4_Source      1    wreg     unsigned char 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;Total ram usage:        1 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_InterruptManager
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text30
  4060   002012                     __ptext30:
  4061                           	callstack 0
  4062   002012                     _RB4_ISR:
  4063                           	callstack 23
  4064                           
  4065                           ;incstack = 0
  4066                           ;RB4_ISR@RB4_Source stored from wreg
  4067   002012  6E46               	movwf	RB4_ISR@RB4_Source^0,c
  4068   002014                     
  4069                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 224: void RB4_ISR(uint8 RB4_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 225: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 226:     (INTCONbits.RBIF = 0);
  4070   002014  90F2               	bcf	242,0,c	;volatile
  4071   002016                     
  4072                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 227:     if(0 == RB4_Source)
  4073   002016  5046               	movf	RB4_ISR@RB4_Source^0,w,c
  4074   002018  A4D8               	btfss	status,2,c
  4075   00201A  EF11  F010         	goto	i2u47_41
  4076   00201E  EF13  F010         	goto	i2u47_40
  4077   002022                     i2u47_41:
  4078   002022  EF15  F010         	goto	i2l2810
  4079   002026                     i2u47_40:
  4080   002026  EF15  F010         	goto	i2l954
  4081   00202A                     i2l2810:
  4082   00202A                     i2l954:
  4083   00202A  0012               	return		;funcret
  4084   00202C                     __end_of_RB4_ISR:
  4085                           	callstack 0
  4086                           
  4087 ;; *************** function _MSSP_I2C_ISR *****************
  4088 ;; Defined at:
  4089 ;;		line 357 in file "MCAL_Layer/I2C/hal_i2c.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		None
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;Total ram usage:        0 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_InterruptManager
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text31
  4117   002094                     __ptext31:
  4118                           	callstack 0
  4119   002094                     _MSSP_I2C_ISR:
  4120                           	callstack 23
  4121   002094                     
  4122                           ;MCAL_Layer/I2C/hal_i2c.c: 360:     (PIR1bits.SSPIF = 0);
  4123   002094  969E               	bcf	158,3,c	;volatile
  4124   002096  0012               	return		;funcret
  4125   002098                     __end_of_MSSP_I2C_ISR:
  4126                           	callstack 0
  4127                           
  4128 ;; *************** function _MSSP_I2C_BC_ISR *****************
  4129 ;; Defined at:
  4130 ;;		line 372 in file "MCAL_Layer/I2C/hal_i2c.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		None
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_InterruptManager
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text32
  4158   002098                     __ptext32:
  4159                           	callstack 0
  4160   002098                     _MSSP_I2C_BC_ISR:
  4161                           	callstack 23
  4162   002098                     
  4163                           ;MCAL_Layer/I2C/hal_i2c.c: 375:     (PIR2bits.BCLIF = 0);
  4164   002098  96A1               	bcf	161,3,c	;volatile
  4165   00209A  0012               	return		;funcret
  4166   00209C                     __end_of_MSSP_I2C_BC_ISR:
  4167                           	callstack 0
  4168                           
  4169 ;; *************** function _INT2_ISR *****************
  4170 ;; Defined at:
  4171 ;;		line 213 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		None
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;Total ram usage:        0 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_InterruptManager
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text33
  4199   00209C                     __ptext33:
  4200                           	callstack 0
  4201   00209C                     _INT2_ISR:
  4202                           	callstack 23
  4203   00209C                     
  4204                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 215:     (INTCON3bits.INT2IF = 0);
  4205   00209C  92F0               	bcf	240,1,c	;volatile
  4206   00209E  0012               	return		;funcret
  4207   0020A0                     __end_of_INT2_ISR:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _INT1_ISR *****************
  4211 ;; Defined at:
  4212 ;;		line 203 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		None
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_InterruptManager
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text34
  4240   0020A0                     __ptext34:
  4241                           	callstack 0
  4242   0020A0                     _INT1_ISR:
  4243                           	callstack 23
  4244   0020A0                     
  4245                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 205:     (INTCON3bits.INT1IF = 0);
  4246   0020A0  90F0               	bcf	240,0,c	;volatile
  4247   0020A2  0012               	return		;funcret
  4248   0020A4                     __end_of_INT1_ISR:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _INT0_ISR *****************
  4252 ;; Defined at:
  4253 ;;		line 193 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		None
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;Total ram usage:        0 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_InterruptManager
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text35
  4281   0020A4                     __ptext35:
  4282                           	callstack 0
  4283   0020A4                     _INT0_ISR:
  4284                           	callstack 23
  4285   0020A4                     
  4286                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 195:     (INTCONbits.INT0IF = 0);
  4287   0020A4  92F2               	bcf	242,1,c	;volatile
  4288   0020A6  0012               	return		;funcret
  4289   0020A8                     __end_of_INT0_ISR:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _CCP2_ISR *****************
  4293 ;; Defined at:
  4294 ;;		line 401 in file "MCAL_Layer/CCP/hal_ccp.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		None
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;Total ram usage:        0 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_InterruptManager
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text36
  4322   0020A8                     __ptext36:
  4323                           	callstack 0
  4324   0020A8                     _CCP2_ISR:
  4325                           	callstack 23
  4326   0020A8                     
  4327                           ;MCAL_Layer/CCP/hal_ccp.c: 403:     (PIR2bits.CCP2IF = 0);
  4328   0020A8  90A1               	bcf	161,0,c	;volatile
  4329   0020AA  0012               	return		;funcret
  4330   0020AC                     __end_of_CCP2_ISR:
  4331                           	callstack 0
  4332                           
  4333 ;; *************** function _CCP1_ISR *****************
  4334 ;; Defined at:
  4335 ;;		line 388 in file "MCAL_Layer/CCP/hal_ccp.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		None
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;Total ram usage:        0 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_InterruptManager
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text37
  4363   0020AC                     __ptext37:
  4364                           	callstack 0
  4365   0020AC                     _CCP1_ISR:
  4366                           	callstack 23
  4367   0020AC                     
  4368                           ;MCAL_Layer/CCP/hal_ccp.c: 390:     (PIR1bits.CCP1IF = 0);
  4369   0020AC  949E               	bcf	158,2,c	;volatile
  4370   0020AE  0012               	return		;funcret
  4371   0020B0                     __end_of_CCP1_ISR:
  4372                           	callstack 0
  4373                           
  4374 ;; *************** function _ADC_ISR *****************
  4375 ;; Defined at:
  4376 ;;		line 341 in file "MCAL_Layer/ADC/hal_adc.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;Total ram usage:        0 bytes
  4395 ;; Hardware stack levels used: 1
  4396 ;; Hardware stack levels required when called: 2
  4397 ;; This function calls:
  4398 ;;		NULL
  4399 ;;		_ADC_DefaultInterruptHandler
  4400 ;; This function is called by:
  4401 ;;		_InterruptManager
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text38
  4406   001F0C                     __ptext38:
  4407                           	callstack 0
  4408   001F0C                     _ADC_ISR:
  4409                           	callstack 21
  4410   001F0C                     
  4411                           ;MCAL_Layer/ADC/hal_adc.c: 343:     (PIR1bits.ADIF = 0);
  4412   001F0C  9C9E               	bcf	158,6,c	;volatile
  4413   001F0E                     
  4414                           ;MCAL_Layer/ADC/hal_adc.c: 344:     if(ADC_InterruptHandler )
  4415   001F0E  5039               	movf	_ADC_InterruptHandler^0,w,c
  4416   001F10  103A               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  4417   001F12  B4D8               	btfsc	status,2,c
  4418   001F14  EF8E  F00F         	goto	i2u347_41
  4419   001F18  EF90  F00F         	goto	i2u347_40
  4420   001F1C                     i2u347_41:
  4421   001F1C  EF9C  F00F         	goto	i2l457
  4422   001F20                     i2u347_40:
  4423   001F20                     
  4424                           ;MCAL_Layer/ADC/hal_adc.c: 345:     {;MCAL_Layer/ADC/hal_adc.c: 346:         ADC_Interru
      +                          ptHandler();
  4425   001F20  D802               	call	i2u348_48
  4426   001F22  EF9C  F00F         	goto	i2u348_49
  4427   001F26                     i2u348_48:
  4428   001F26  0005               	push	
  4429   001F28  6EFA               	movwf	pclath,c
  4430   001F2A  5039               	movf	_ADC_InterruptHandler^0,w,c
  4431   001F2C  6EFD               	movwf	tosl,c
  4432   001F2E  503A               	movf	(_ADC_InterruptHandler+1)^0,w,c
  4433   001F30  6EFE               	movwf	tosh,c
  4434   001F32  6AFF               	clrf	tosu,c
  4435   001F34  50FA               	movf	pclath,w,c
  4436   001F36  0012               	return		;indir
  4437   001F38                     i2u348_49:
  4438   001F38                     i2l457:
  4439   001F38  0012               	return		;funcret
  4440   001F3A                     __end_of_ADC_ISR:
  4441                           	callstack 0
  4442                           
  4443 ;; *************** function _ADC_DefaultInterruptHandler *****************
  4444 ;; Defined at:
  4445 ;;		line 29 in file "application.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  ret             1    0        unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;Total ram usage:        0 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 1
  4466 ;; This function calls:
  4467 ;;		_ADC_GetConversionResult
  4468 ;; This function is called by:
  4469 ;;		_ADC_ISR
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text39
  4474   00202C                     __ptext39:
  4475                           	callstack 0
  4476   00202C                     _ADC_DefaultInterruptHandler:
  4477                           	callstack 21
  4478   00202C                     
  4479                           ;application.c: 32:     adc_flag++;
  4480   00202C  2A3B               	incf	_adc_flag^0,f,c	;volatile
  4481   00202E  0E9E               	movlw	low _adc_1
  4482   002030  6E46               	movwf	ADC_GetConversionResult@_adc^0,c
  4483   002032  0E00               	movlw	high _adc_1
  4484   002034  6E47               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  4485   002036  0E44               	movlw	low _adc_result_1
  4486   002038  6E48               	movwf	ADC_GetConversionResult@conversion_result^0,c
  4487   00203A  0E00               	movlw	high _adc_result_1
  4488   00203C  6E49               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  4489   00203E  ECEC  F00C         	call	_ADC_GetConversionResult	;wreg free
  4490   002042  0012               	return		;funcret
  4491   002044                     __end_of_ADC_DefaultInterruptHandler:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _ADC_GetConversionResult *****************
  4495 ;; Defined at:
  4496 ;;		line 193 in file "MCAL_Layer/ADC/hal_adc.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  _adc            2    0[COMRAM] PTR const struct .
  4499 ;;		 -> adc_1(7), 
  4500 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
  4501 ;;		 -> adc_result_1(2), 
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  ret             1    7[COMRAM] unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      unsigned char 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;Total ram usage:        8 bytes
  4518 ;; Hardware stack levels used: 1
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_ADC_DefaultInterruptHandler
  4523 ;;		_ADC_GetConversion_Blocking
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text40
  4528   0019D8                     __ptext40:
  4529                           	callstack 0
  4530   0019D8                     _ADC_GetConversionResult:
  4531                           	callstack 21
  4532   0019D8                     
  4533                           ;MCAL_Layer/ADC/hal_adc.c: 196:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result))
  4534   0019D8  5046               	movf	ADC_GetConversionResult@_adc^0,w,c
  4535   0019DA  1047               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  4536   0019DC  B4D8               	btfsc	status,2,c
  4537   0019DE  EFF3  F00C         	goto	i2u330_41
  4538   0019E2  EFF5  F00C         	goto	i2u330_40
  4539   0019E6                     i2u330_41:
  4540   0019E6  EFFE  F00C         	goto	i2l5094
  4541   0019EA                     i2u330_40:
  4542   0019EA  5048               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  4543   0019EC  1049               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  4544   0019EE  A4D8               	btfss	status,2,c
  4545   0019F0  EFFC  F00C         	goto	i2u331_41
  4546   0019F4  EFFE  F00C         	goto	i2u331_40
  4547   0019F8                     i2u331_41:
  4548   0019F8  EF02  F00D         	goto	i2l5096
  4549   0019FC                     i2u331_40:
  4550   0019FC                     i2l5094:
  4551                           
  4552                           ;MCAL_Layer/ADC/hal_adc.c: 197:     {;MCAL_Layer/ADC/hal_adc.c: 198:         ret = (Std_
      +                          ReturnType)0x00;
  4553   0019FC  0E00               	movlw	0
  4554   0019FE  6E4D               	movwf	ADC_GetConversionResult@ret^0,c
  4555                           
  4556                           ;MCAL_Layer/ADC/hal_adc.c: 199:     }
  4557   001A00  EF4C  F00D         	goto	i2l5108
  4558   001A04                     i2l5096:
  4559                           
  4560                           ;MCAL_Layer/ADC/hal_adc.c: 201:     {;MCAL_Layer/ADC/hal_adc.c: 202:         if(0x01U ==
      +                           _adc->result_format)
  4561   001A04  EE20 F006          	lfsr	2,6
  4562   001A08  5046               	movf	ADC_GetConversionResult@_adc^0,w,c
  4563   001A0A  26D9               	addwf	fsr2l,f,c
  4564   001A0C  5047               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  4565   001A0E  22DA               	addwfc	fsr2h,f,c
  4566   001A10  A2DF               	btfss	indf2,1,c
  4567   001A12  EF0D  F00D         	goto	i2u332_41
  4568   001A16  EF0F  F00D         	goto	i2u332_40
  4569   001A1A                     i2u332_41:
  4570   001A1A  EF23  F00D         	goto	i2l5100
  4571   001A1E                     i2u332_40:
  4572   001A1E                     i2l5098:
  4573                           
  4574                           ;MCAL_Layer/ADC/hal_adc.c: 203:         {;MCAL_Layer/ADC/hal_adc.c: 204:             *co
      +                          nversion_result = (adc_result_t)((ADRESH << 8) + ADRESL);
  4575   001A1E  50C3               	movf	195,w,c	;volatile
  4576   001A20  CFC4 F04A          	movff	4036,??_ADC_GetConversionResult	;volatile
  4577   001A24  6A4B               	clrf	(??_ADC_GetConversionResult+1)^0,c
  4578   001A26  C04A  F04B         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  4579   001A2A  6A4A               	clrf	??_ADC_GetConversionResult^0,c
  4580   001A2C  264A               	addwf	??_ADC_GetConversionResult^0,f,c
  4581   001A2E  0E00               	movlw	0
  4582   001A30  224B               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  4583   001A32  C048  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  4584   001A36  C049  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  4585   001A3A  C04A  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  4586   001A3E  C04B  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  4587                           
  4588                           ;MCAL_Layer/ADC/hal_adc.c: 205:         }
  4589   001A42  EF4A  F00D         	goto	i2l5106
  4590   001A46                     i2l5100:
  4591   001A46  EE20 F006          	lfsr	2,6
  4592   001A4A  5046               	movf	ADC_GetConversionResult@_adc^0,w,c
  4593   001A4C  26D9               	addwf	fsr2l,f,c
  4594   001A4E  5047               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  4595   001A50  22DA               	addwfc	fsr2h,f,c
  4596   001A52  B2DF               	btfsc	indf2,1,c
  4597   001A54  EF2E  F00D         	goto	i2u333_41
  4598   001A58  EF30  F00D         	goto	i2u333_40
  4599   001A5C                     i2u333_41:
  4600   001A5C  EF0F  F00D         	goto	i2l5098
  4601   001A60                     i2u333_40:
  4602   001A60                     
  4603                           ;MCAL_Layer/ADC/hal_adc.c: 207:         {;MCAL_Layer/ADC/hal_adc.c: 208:             *co
      +                          nversion_result = (adc_result_t)(((ADRESH << 8) + ADRESL) >> 6);
  4604   001A60  50C3               	movf	195,w,c	;volatile
  4605   001A62  CFC4 F04A          	movff	4036,??_ADC_GetConversionResult	;volatile
  4606   001A66  6A4B               	clrf	(??_ADC_GetConversionResult+1)^0,c
  4607   001A68  C04A  F04B         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  4608   001A6C  6A4A               	clrf	??_ADC_GetConversionResult^0,c
  4609   001A6E  264A               	addwf	??_ADC_GetConversionResult^0,f,c
  4610   001A70  0E00               	movlw	0
  4611   001A72  224B               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  4612   001A74  0E06               	movlw	6
  4613   001A76  6E4C               	movwf	(??_ADC_GetConversionResult+2)^0,c
  4614   001A78                     i2u334_45:
  4615   001A78  344B               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  4616   001A7A  324B               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  4617   001A7C  324A               	rrcf	??_ADC_GetConversionResult^0,f,c
  4618   001A7E  2E4C               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  4619   001A80  EF3C  F00D         	goto	i2u334_45
  4620   001A84  C048  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  4621   001A88  C049  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  4622   001A8C  C04A  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  4623   001A90  C04B  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  4624   001A94                     i2l5106:
  4625                           
  4626                           ;MCAL_Layer/ADC/hal_adc.c: 214:         ret = (Std_ReturnType)0x01;
  4627   001A94  0E01               	movlw	1
  4628   001A96  6E4D               	movwf	ADC_GetConversionResult@ret^0,c
  4629   001A98                     i2l5108:
  4630                           
  4631                           ;MCAL_Layer/ADC/hal_adc.c: 216:     return ret;
  4632   001A98  504D               	movf	ADC_GetConversionResult@ret^0,w,c
  4633   001A9A  0012               	return		;funcret
  4634   001A9C                     __end_of_ADC_GetConversionResult:
  4635                           	callstack 0
  4636                           
  4637                           	psect	text41
  4638   000000                     __ptext41:
  4639                           	callstack 0
  4640   000000                     
  4641                           	psect	rparam
  4642   000000                     
  4643                           	psect	temp
  4644   000072                     btemp:
  4645                           	callstack 0
  4646   000072                     	ds	1
  4647   000000                     int$flags	set	btemp
  4648   000000                     wtemp8	set	btemp+1
  4649   000000                     ttemp5	set	btemp+1
  4650   000000                     ttemp6	set	btemp+4
  4651   000000                     ttemp7	set	btemp+8
  4652                           
  4653                           	psect	idloc
  4654                           
  4655                           ;Config register IDLOC0 @ 0x200000
  4656                           ;	unspecified, using default values
  4657   200000                     	org	2097152
  4658   200000  FF                 	db	255
  4659                           
  4660                           ;Config register IDLOC1 @ 0x200001
  4661                           ;	unspecified, using default values
  4662   200001                     	org	2097153
  4663   200001  FF                 	db	255
  4664                           
  4665                           ;Config register IDLOC2 @ 0x200002
  4666                           ;	unspecified, using default values
  4667   200002                     	org	2097154
  4668   200002  FF                 	db	255
  4669                           
  4670                           ;Config register IDLOC3 @ 0x200003
  4671                           ;	unspecified, using default values
  4672   200003                     	org	2097155
  4673   200003  FF                 	db	255
  4674                           
  4675                           ;Config register IDLOC4 @ 0x200004
  4676                           ;	unspecified, using default values
  4677   200004                     	org	2097156
  4678   200004  FF                 	db	255
  4679                           
  4680                           ;Config register IDLOC5 @ 0x200005
  4681                           ;	unspecified, using default values
  4682   200005                     	org	2097157
  4683   200005  FF                 	db	255
  4684                           
  4685                           ;Config register IDLOC6 @ 0x200006
  4686                           ;	unspecified, using default values
  4687   200006                     	org	2097158
  4688   200006  FF                 	db	255
  4689                           
  4690                           ;Config register IDLOC7 @ 0x200007
  4691                           ;	unspecified, using default values
  4692   200007                     	org	2097159
  4693   200007  FF                 	db	255
  4694                           
  4695                           	psect	config
  4696                           
  4697                           ; Padding undefined space
  4698   300000                     	org	3145728
  4699   300000  FF                 	db	255
  4700                           
  4701                           ;Config register CONFIG1H @ 0x300001
  4702                           ;	Oscillator Selection bits
  4703                           ;	OSC = HS, HS oscillator
  4704                           ;	Fail-Safe Clock Monitor Enable bit
  4705                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4706                           ;	Internal/External Oscillator Switchover bit
  4707                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4708   300001                     	org	3145729
  4709   300001  02                 	db	2
  4710                           
  4711                           ;Config register CONFIG2L @ 0x300002
  4712                           ;	Power-up Timer Enable bit
  4713                           ;	PWRT = OFF, PWRT disabled
  4714                           ;	Brown-out Reset Enable bits
  4715                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4716                           ;	Brown Out Reset Voltage bits
  4717                           ;	BORV = 1, 
  4718   300002                     	org	3145730
  4719   300002  09                 	db	9
  4720                           
  4721                           ;Config register CONFIG2H @ 0x300003
  4722                           ;	Watchdog Timer Enable bit
  4723                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4724                           ;	Watchdog Timer Postscale Select bits
  4725                           ;	WDTPS = 512, 1:512
  4726   300003                     	org	3145731
  4727   300003  12                 	db	18
  4728                           
  4729                           ; Padding undefined space
  4730   300004                     	org	3145732
  4731   300004  FF                 	db	255
  4732                           
  4733                           ;Config register CONFIG3H @ 0x300005
  4734                           ;	CCP2 MUX bit
  4735                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4736                           ;	PORTB A/D Enable bit
  4737                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4738                           ;	Low-Power Timer1 Oscillator Enable bit
  4739                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4740                           ;	MCLR Pin Enable bit
  4741                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4742   300005                     	org	3145733
  4743   300005  81                 	db	129
  4744                           
  4745                           ;Config register CONFIG4L @ 0x300006
  4746                           ;	Stack Full/Underflow Reset Enable bit
  4747                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4748                           ;	Single-Supply ICSP Enable bit
  4749                           ;	LVP = OFF, Single-Supply ICSP disabled
  4750                           ;	Extended Instruction Set Enable bit
  4751                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4752                           ;	Background Debugger Enable bit
  4753                           ;	DEBUG = 0x1, unprogrammed default
  4754   300006                     	org	3145734
  4755   300006  81                 	db	129
  4756                           
  4757                           ; Padding undefined space
  4758   300007                     	org	3145735
  4759   300007  FF                 	db	255
  4760                           
  4761                           ;Config register CONFIG5L @ 0x300008
  4762                           ;	Code Protection bit
  4763                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4764                           ;	Code Protection bit
  4765                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4766                           ;	Code Protection bit
  4767                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4768                           ;	Code Protection bit
  4769                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4770   300008                     	org	3145736
  4771   300008  0F                 	db	15
  4772                           
  4773                           ;Config register CONFIG5H @ 0x300009
  4774                           ;	Boot Block Code Protection bit
  4775                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4776                           ;	Data EEPROM Code Protection bit
  4777                           ;	CPD = OFF, Data EEPROM not code-protected
  4778   300009                     	org	3145737
  4779   300009  C0                 	db	192
  4780                           
  4781                           ;Config register CONFIG6L @ 0x30000A
  4782                           ;	Write Protection bit
  4783                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4784                           ;	Write Protection bit
  4785                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4786                           ;	Write Protection bit
  4787                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4788                           ;	Write Protection bit
  4789                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4790   30000A                     	org	3145738
  4791   30000A  0F                 	db	15
  4792                           
  4793                           ;Config register CONFIG6H @ 0x30000B
  4794                           ;	Configuration Register Write Protection bit
  4795                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4796                           ;	Boot Block Write Protection bit
  4797                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4798                           ;	Data EEPROM Write Protection bit
  4799                           ;	WRTD = OFF, Data EEPROM not write-protected
  4800   30000B                     	org	3145739
  4801   30000B  E0                 	db	224
  4802                           
  4803                           ;Config register CONFIG7L @ 0x30000C
  4804                           ;	Table Read Protection bit
  4805                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4806                           ;	Table Read Protection bit
  4807                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4808                           ;	Table Read Protection bit
  4809                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4810                           ;	Table Read Protection bit
  4811                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4812   30000C                     	org	3145740
  4813   30000C  0F                 	db	15
  4814                           
  4815                           ;Config register CONFIG7H @ 0x30000D
  4816                           ;	Boot Block Table Read Protection bit
  4817                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4818   30000D                     	org	3145741
  4819   30000D  40                 	db	64
  4820                           tosu	equ	0xFFF
  4821                           tosh	equ	0xFFE
  4822                           tosl	equ	0xFFD
  4823                           stkptr	equ	0xFFC
  4824                           pclatu	equ	0xFFB
  4825                           pclath	equ	0xFFA
  4826                           pcl	equ	0xFF9
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           indf0	equ	0xFEF
  4834                           postinc0	equ	0xFEE
  4835                           postdec0	equ	0xFED
  4836                           preinc0	equ	0xFEC
  4837                           plusw0	equ	0xFEB
  4838                           fsr0h	equ	0xFEA
  4839                           fsr0l	equ	0xFE9
  4840                           wreg	equ	0xFE8
  4841                           indf1	equ	0xFE7
  4842                           postinc1	equ	0xFE6
  4843                           postdec1	equ	0xFE5
  4844                           preinc1	equ	0xFE4
  4845                           plusw1	equ	0xFE3
  4846                           fsr1h	equ	0xFE2
  4847                           fsr1l	equ	0xFE1
  4848                           bsr	equ	0xFE0
  4849                           indf2	equ	0xFDF
  4850                           postinc2	equ	0xFDE
  4851                           postdec2	equ	0xFDD
  4852                           preinc2	equ	0xFDC
  4853                           plusw2	equ	0xFDB
  4854                           fsr2h	equ	0xFDA
  4855                           fsr2l	equ	0xFD9
  4856                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        57
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     30     113
    BANK0           128     10      59
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    CCP_PMW_MODE_CONFIG$0	PTR const struct . size(2) Largest target is 0

    S4541$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4541$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_ASYNCRONOUS_RX_Init@_usart.USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_RX_Init@_usart.USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_RX_Init@_usart.USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_RX_Init@_usart.USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_ASYNCRONOUS_TX_Init@_usart.USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_TX_Init@_usart.USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_TX_Init@_usart.USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_TX_Init@_usart.USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3608$USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_Baud_Rate_Calculation@_usart.USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3608$USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_Baud_Rate_Calculation@_usart.USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3608$USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_Baud_Rate_Calculation@_usart.USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3608$USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_Baud_Rate_Calculation@_usart.USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Selection@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3414$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3283$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Selection@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3094$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Reigster_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Selection@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2929$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2321$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2437$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2437$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Bus_Collision_Interrupt_Configurations@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Bus_Collision_Interrupt_Configurations@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Bus_Collision_Interrupt_Configurations@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Report_Receive_Overflow_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Slave_Mode_Configurations@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Slave_Mode_Configurations@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Slave_Mode_Configurations@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Master_Mode_Clock_Configurations@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Master_Mode_Clock_Configurations@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Master_Mode_Clock_Configurations@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1796$MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Initialize@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1796$MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Initialize@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S1796$MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Initialize@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(BANK0[8]), lcd_2(BANK0[10]), lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(BANK0[8]), lcd_2(BANK0[10]), lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(BANK0[8]), lcd_2(BANK0[10]), lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Selection@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Selection@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Set_Compare_Mode_Value@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Set_Compare_Mode_Value@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1142$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1142$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion_Interrupt@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_result_1(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    S723$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_intialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _lcd_8bit_intialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic
    _ADC_Init->_adc_input_channel_port_config
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_config

Critical Paths under _InterruptManager in COMRAM

    _ADC_DefaultInterruptHandler->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _ecu_layer_intialize->_lcd_8bit_intialize
    _lcd_8bit_intialize->_lcd_8bit_send_command

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   55759
      _ADC_StartConversion_Interrupt
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   54871
                           _ADC_Init
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   54326
                 _lcd_4bit_intialize
                 _lcd_8bit_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_intialize                                   6     4      2   23660
                                              4 BANK0      6     4      2
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                9     6      3   14810
                                             25 COMRAM     5     2      3
                                              0 BANK0      4     4      0
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_8bit_send_enable_signal                          3     1      2    6119
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_intialize                                   6     4      2   30657
                                              0 BANK0      6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                4     1      3   21807
                                             26 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       4     1      3    6851
                                             22 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_signal                          3     1      2    6299
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    8182
                                             22 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                10     7      3    5837
                                             12 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     707
                                             12 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     539
                                             15 COMRAM     4     2      2
      _adc_input_channel_port_config
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     0      2     120
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          2     0      2     120
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        4     1      3     882
                                             20 COMRAM     4     1      3
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     199
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     417
                                             15 COMRAM     5     2      3
      _adc_input_channel_port_config
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_config                        3     3      0      22
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     4     4      0     605
                                              8 COMRAM     4     4      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (8) _USART_TX_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USART_RX_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0     485
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _ADC_DefaultInterruptHandler                          1     1      0     485
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversionResult                             8     4      4     483
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_config
     _ADC_StartConversion
   _application_intialize
     _ADC_Init
       _adc_input_channel_port_config
       _configure_voltage_reference
       _select_result_format
     _ecu_layer_intialize
       _lcd_4bit_intialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_intialize
         _gpio_pin_intialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
       _ADC_GetConversionResult
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR
   _USART_RX_ISR
   _USART_TX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      3B       5       46.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1E      71       1       89.7%
BITBIGSFRhlhhhl     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRhlhhhl      5      0       0      38        0.0%
BITBIGSFRllhllh      4      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRllhllh      4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlhhhl      1      0       0      39        0.0%
BITBIGSFRllhlll      1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC      47        0.0%
DATA                 0      0      AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jul 23 15:38:48 2023

                               ??_InterruptManager 004E                                    ?_lcd_send_4bits 005C  
                                      _SSPSTATbits 0FC7                                                 l74 1C60  
                                               l69 17D2                          _USART_FramingErrorHandler 0003  
                                              l121 1BEE                                                l114 1698  
                                              l331 1FA6                                                l414 1E64  
                                              l182 1ED4                                                l432 19D6  
                                              l176 1D34                                                l450 1DDE  
                                              l443 1DB4                                                l179 1F0A  
                                              l380 1F86                                                l452 1DE2  
                                              l364 1AB6                                                l381 1F88  
                                              l437 1E24                                                l366 1B5A  
                                              l447 1DD6                                                l439 1E26  
                                              l376 1E9E                                                l713 1CCC  
                                              l379 1F80                                                l673 155E  
                                              l692 18FE                __end_of_configure_voltage_reference 1DE4  
                      _configure_voltage_reference 1D9A                          _RB5_InterruptHandler_HIGH 0021  
                                  __end_of_ADC_ISR 1F3A                __end_of_lcd_4bit_send_enable_signal 1F0C  
                      _lcd_4bit_send_enable_signal 1ED6                                led_initialize@F3048 0043  
                                              prod 0FF3                              relay_initialize@F3042 003F  
                                              tosl 0FFD                                                wreg 0FE8  
                      lcd_send_4bits@_data_command 005E                     ?_ADC_StartConversion_Interrupt 005A  
                     ?_ADC_DefaultInterruptHandler 0046                                    __end_of_RB4_ISR 202C  
                                  __end_of_RB5_ISR 2012                                    __end_of_RB6_ISR 1FF8  
                                  __end_of_RB7_ISR 1FDE  _MSSP_I2C_Report_Receive_Overflow_InterruptHandler 002D  
                                             l5040 1902                                               l5200 1E9C  
                                             l1585 2054                                               l5050 191E  
                                             l5042 1906                                               l5210 1F82  
                                             l5060 193C                                               l5052 1924  
                                             l5044 190C                                               l5204 1F66  
                                             l6100 17EA                                               l5062 1942  
                                             l5054 192A                                               l5046 1912  
                                             l5070 1954                                               l5206 1F66  
                                             l6110 18D2                                               l6102 180C  
                                             l5064 1948                                               l5056 1930  
                                             l5048 1918                                               l5208 1F78  
                                             l5080 1E04                                               l5160 1AAE  
                                             l6120 141C                                               l6104 1814  
                                             l6112 18FC                                               l6200 1C0A  
                                             l5066 194E                                               l5058 1936  
                                             l5082 1E1E                                               l5170 1B26  
                                             l5162 1AB8                                               l6130 14BE  
                                             l6122 1420                                               l6106 1876  
                                             l6202 1C5E                                               l6210 1B72  
                                             l5260 1E28                                               l5084 1D9A  
                                             l5076 1DE4                                               l5180 1B52  
                                             l5172 1B28                                               l5164 1B10  
                                             l5156 1A9C                                               l6124 1432  
                                             l6220 1B8E                                               l6212 1B7A  
                                             l6300 15EA                                               l5190 1E66  
                                             l5262 1E28                                               l5086 1DBC  
                                             l5078 1DFE                                               l5182 1B54  
                                             l5174 1B2A                                               l5166 1B22  
                                             l5158 1A9C                                               l6134 151A  
                                             l6126 1454                                               l6150 1CFC  
                                             l6222 1BCC                                               l6214 1B8A  
                                             l6206 1B5C                                               l6310 1642  
                                             l6302 15FA                                               l5192 1E78  
                                             l5264 1E3A                                               l5176 1B3A  
                                             l5168 1B24                                               l5184 1B58  
                                             l6128 145C                                               l6136 155C  
                                             l6160 1EEA                                               l6152 1D16  
                                             l6144 1CCE                                               l6240 16DE  
                                             l6232 169A                                               l6224 1BCE  
                                             l6208 1B60                                               l6312 1652  
                                             l6304 161C                                               l6320 1696  
                                             l5194 1E80                                               l5266 1E42  
                                             l5178 1B46                                               l6162 1EF2  
                                             l6146 1CCE                                               l6250 1702  
                                             l6234 16A0                                               l6170 1EA0  
                                             l6226 1BDE                                               l6314 1662  
                                             l6306 1622                                               l6410 2044  
                                             l5196 1E92                                               l5188 1E66  
                                             l5268 1E62                                               l6180 1C62  
                                             l6164 1F08                                               l6156 1ED6  
                                             l6148 1CE4                                               l6260 175C  
                                             l6252 1712                                               l6236 16B2  
                                             l6172 1EB4                                               l6228 1BEC  
                                             l6316 1672                                               l6308 1632  
                                             l6412 2048                                               l5198 1E98  
                                             l6190 1CCA                                               l6182 1C62  
                                             l6158 1ED6                                               l6270 17AC  
                                             l6262 176C                                               l6254 1724  
                                             l6246 16E2                                               l6238 16BA  
                                             l6174 1EBC                                               l6318 1682  
                                             l6096 17D4                                               l6184 1C74  
                                             l6272 17BC                                               l6264 177C  
                                             l6256 1734                                               l6248 16FE  
                                             l6176 1ED2                                               l6168 1EA0  
                                             l6280 1566                                               l6408 2044  
                                             l6098 17D8                                               l6186 1C96  
                                             l6194 1BF0                                               l6266 178C  
                                             l6258 1756                                               l6274 17D0  
                                             l6282 1578                                               l6362 1F8A  
                                             l6188 1C9E                                               l6196 1BF0  
                                             l6268 179C                                               l6292 15A8  
                                             l6284 1580                                               l6364 1F8A  
                                             l6198 1C02                                               l6294 15C4  
                                             l6286 15A4                                               l6278 1560  
                                             l6366 1F98                                               l6296 15C8  
                                             l6298 15D8                                               l6952 18E6  
                                             l6954 1546                                               l6890 1FAC  
                                             l6956 1968                                               l6886 1FA8  
                                             l6888 1FA8                                               STR_1 1011  
               lcd_8bit_send_command@l_pin_counter 0063                                               _LATA 0F89  
                                             _LATB 0F8A                                               _LATC 0F8B  
                                             _LATD 0F8C                                               _LATE 0F8D  
                                             u3400 1E78                                               u5000 1BDE  
                                             u3401 1E74                                               u5001 1BDA  
                                             u3410 1F78                                               u5010 16B2  
                                             u3411 1F74                                               u5011 16AE  
                                             u3260 1DFE                                               u5020 1712  
                                             u3261 1DFA                                               u5021 170E  
                                             u3270 1E1E                                               u5030 1578  
                                             u3271 1E1A                                               u5031 1574  
                                             u3280 1DB4                                               u5040 15D8  
                                             u3281 1DB0                                               u5041 15D4  
                                             u3290 1DD6                                               u3291 1DD2  
                                             u3460 1E3A                                               u3461 1E36  
                                             u3390 1AAE                                               u3391 1AAA  
                                             u4900 1454                                               u4901 1450  
                                             u5607 1602                                               u5617 161E  
                                             u4930 1532                                               u4914 147C  
                                             u4850 17EA                                               u4931 152C  
                                             u4915 1478                                               u4851 17E6  
                                             u5627 1EB6                                               u4940 1534  
                                             u4924 14DE                                               u4860 180C  
                                             u4925 14DA                                               u4861 1808  
                                             u5637 171A                                               u4950 1C74  
                                             u4951 1C70                                               u5647 173C  
                                             u4960 1C96                                               u4961 1C92  
                                             u5657 1758                                               u4890 1432  
                                             u4874 1834                                               u4970 1C02  
                                             u4891 142E                                               u4875 1830  
                                             u5667 1EEC                                               u4971 1BFE  
                                             u4884 1896                                               u4980 1B72  
                                             u4885 1892                                               u4981 1B6E  
                                             u5597 15E0                                               u4994 1BBA  
                                             u4995 1BB6                                               _TMR2 0FCC  
                          ??_application_intialize 0064                      ??_lcd_4bit_send_enable_signal 005E  
                         _RB4_InterruptHandler_LOW 0023                                               _main 1FA8  
                                 __end_of_CCP1_ISR 20B0                                   __end_of_CCP2_ISR 20AC  
                         _RB7_InterruptHandler_LOW 0017                                               fsr2h 0FDA  
                                             indf2 0FDF                                               fsr1l 0FE1  
                                             fsr2l 0FD9                                               btemp 0072  
                                 __end_of_ADC_Init 1B5C                                               prodl 0FF3  
                                             start 000E                      __end_of_lcd_8bit_send_command 1BF0  
                   ?_adc_input_channel_port_config 0046                                       ___param_bank 0000  
                            _lcd_4bit_send_command 1BF0                               _gpio_pin_write_logic 17D4  
                            lcd_4bit_intialize@lcd 00AB                              lcd_4bit_intialize@ret 00B0  
                                 __end_of_INT0_ISR 20A8                                   __end_of_INT1_ISR 20A4  
                                 __end_of_INT2_ISR 20A0                                              ?_main 0046  
                                            _EEADR 0FA9                                              i2l544 20AA  
                                            i2l457 1F38                                              i2l539 20AE  
                                            i2l399 1A9A                                              i2l933 20A6  
                                            i2l861 2096                                              i2l943 209E  
                                            i2l938 20A2                                              i2l866 209A  
                                            i2l954 202A                                              i2l965 2010  
                                            i2l976 1FF6                                              i2l987 1FDC  
                                            _RCREG 0FAE                                relay_turn_off@F3052 003D  
                                            _TMR0H 0FD7                                              _TMR1H 0FCF  
                                            _TMR0L 0FD6                                              _TMR1L 0FCE  
                                            _TMR3H 0FB3                                              _TMR3L 0FB2  
                                            _SPBRG 0FAF                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                                              _TXREG 0FAD  
                                 __end_of_TMR0_ISR 2088                                   __end_of_TMR1_ISR 207C  
                                 __end_of_TMR2_ISR 2090                                              _adc_1 009E  
                                 __end_of_TMR3_ISR 2070                                              _lcd_1 00A5  
                                            _lcd_2 0094                                              pclath 0FFA  
                                            pclatu 0FFB                                              tablat 0FF5  
                                     _adc_result_1 0044                                              ttemp5 0073  
                                            ttemp6 0076                                              ttemp7 007A  
                                            status 0FD8                                              wtemp8 0073  
                                  __initialization 1D36                                       __end_of_main 1FC4  
                            ?_gpio_pin_write_logic 0052                                          ??_ADC_ISR 004E  
                                    _lat_registers 0064                                             ??_main 0064  
                                    __activetblptr 0003                              _TMR3_InterruptHandler 0009  
                                 led_turn_on@F3053 0042                                          ??_RB4_ISR 0046  
                                        ??_RB5_ISR 0046                                          ??_RB6_ISR 0046  
                                        ??_RB7_ISR 0046                                             _ADRESH 0FC4  
                                           _EEADRH 0FAA                                             _ADRESL 0FC3  
                                           _EEDATA 0FA8                                             _CCPR1H 0FBF  
                                           _CCPR2H 0FBC                                             _CCPR1L 0FBE  
                                           _CCPR2L 0FBB                                             _EECON2 0FA7  
                                           i2l1200 13E8                                             i2l1203 1408  
                                           i2l1160 1048                                             i2l1170 1154  
                                           i2l1162 1068                                             i2l1316 207A  
                                           i2l1180 12A8                                             i2l1172 1198  
                                           i2l1164 1088                                             i2l1413 206E  
                                           i2l1246 2086                                             i2l1190 1348  
                                           i2l1182 12C8                                             i2l1174 11DC  
                                           i2l1166 10CC                                             i2l1192 1368  
                                           i2l1184 12E8                                             i2l1176 1220  
                                           i2l1168 1110                                             i2l1194 1388  
                                           i2l1186 1308                                             i2l1178 1264  
                                           i2l1196 13A8                                             i2l1188 1328  
                                           i2l1198 13C8                                             i2l1368 208E  
                                           i2l1544 2092                                             i2l1553 20B0  
                                           i2l5100 1A46                                             i2l5102 1A60  
                                           i2l1574 2042                                             i2l6000 11D2  
                                           i2l5106 1A94                                             i2l2810 202A  
                                           i2l2802 2014                                             i2l6010 1216  
                                           i2l6002 11D6                                             i2l5108 1A98  
                                           i2l2804 2016                                             i2l2900 207C  
                                           i2l6020 125A                                             i2l6012 121A  
                                           i2l6004 11EA                                             i2l5214 202C  
                                           i2l2830 1FE0                                             i2l2902 207E  
                                           i2l2910 2070                                             i2l6030 129E  
                                           i2l6022 125E                                             i2l6014 122E  
                                           i2l6006 11F8                                             i2l5216 202C  
                                           i2l2824 2010                                             i2l2816 1FFA  
                                           i2l2832 1FE2                                             i2l2904 2082  
                                           i2l2912 2072                                             i2l2920 2088  
                                           i2l6040 12E4                                             i2l6032 12A2  
                                           i2l6024 1272                                             i2l6016 123C  
                                           i2l6008 1206                                             i2l5090 19D8  
                                           i2l5218 202E                                             i2l2754 20A8  
                                           i2l2818 1FFC                                             i2l2914 2076  
                                           i2l2930 206A                                             i2l6050 1336  
                                           i2l6042 12F6                                             i2l6034 12B6  
                                           i2l6026 1280                                             i2l6018 124A  
                                           i2l5092 19EA                                             i2l2748 20AC  
                                           i2l2772 2094                                             i2l2852 1FDC  
                                           i2l2844 1FC6                                             i2l6060 1384  
                                           i2l6052 1344                                             i2l6044 1304  
                                           i2l6036 12C4                                             i2l6028 128E  
                                           i2l5094 19FC                                             i2l2790 20A0  
                                           i2l2838 1FF6                                             i2l2846 1FC8  
                                           i2l2926 2064                                             i2l2942 20B0  
                                           i2l6070 13D6                                             i2l6062 1396  
                                           i2l6054 1356                                             i2l6046 1316  
                                           i2l6038 12D6                                             i2l5096 1A04  
                                           i2l5088 19D8                                             i2l5272 1F0C  
                                           i2l2784 20A4                                             i2l2928 2066  
                                           i2l2936 2090                                             i2l6072 13E4  
                                           i2l6064 13A4                                             i2l6056 1364  
                                           i2l6048 1324                                             i2l5098 1A1E  
                                           i2l5274 1F0E                                             i2l2778 2098  
                                           i2l6074 13F6                                             i2l6066 13B6  
                                           i2l6058 1376                                             i2l5276 1F20  
                                           i2l2796 209C                                             i2l6076 1404  
                                           i2l6068 13C4                                             i2l5940 1028  
                                           i2l5950 1076                                             i2l5942 1036  
                                           i2l5960 10C2                                             i2l5952 1084  
                                           i2l5944 1044                                             i2l5970 1106  
                                           i2l5962 10C6                                             i2l5954 1096  
                                           i2l5946 1056                                             i2l5980 114A  
                                           i2l5972 110A                                             i2l5964 10DA  
                                           i2l5956 10A4                                             i2l5948 1064  
                                           i2l5990 118E                                             i2l5982 114E  
                                           i2l5974 111E                                             i2l5966 10E8  
                                           i2l5958 10B2                                             i2l5992 1192  
                                           i2l5984 1162                                             i2l5976 112C  
                                           i2l5968 10F6                                             i2l5994 11A6  
                                           i2l5986 1170                                             i2l5978 113A  
                                           i2l5996 11B4                                             i2l5988 117E  
                                           i2l5998 11C2                                             _SPBRGH 0FB0  
                                           _SSPADD 0FC8                                             _SSPBUF 0FC9  
                           ?_lcd_4bit_send_command 0060                                             clear_0 1D8A  
                                           isa$std 0001            gpio_pin_direction_intialize@_pin_config 0052  
                                        ?_CCP1_ISR 0046                                       __pdataCOMRAM 0064  
                                        ?_CCP2_ISR 0046                                          ?_ADC_Init 0055  
                                     __mediumconst 0000                                             tblptrh 0FF7  
                                           tblptrl 0FF6                                             tblptru 0FF8  
                     __end_of_select_result_format 1E28                                         __accesstop 0080  
                          __end_of__initialization 1D90                                          ?_INT0_ISR 0046  
                                        ?_INT1_ISR 0046                                          ?_INT2_ISR 0046  
                                    ___rparam_used 0001                                   ??_lcd_send_4bits 005F  
                                RB5_ISR@RB5_Source 0046                             ??_gpio_pin_write_logic 0055  
                                   __pcstackCOMRAM 0046                                       __pidataBANK0 1F3A  
                                        ?_TMR0_ISR 0046                                          ?_TMR1_ISR 0046  
                                        ?_TMR2_ISR 0046                                          ?_TMR3_ISR 0046  
                         lcd_4bit_send_command@lcd 0060                           lcd_4bit_send_command@ret 0063  
                               _lcd_8bit_intialize 1560                            _ADC_GetConversionResult 19D8  
                                       ??_CCP1_ISR 0046                                         ??_CCP2_ISR 0046  
                                       ??_ADC_Init 0057                               ADC_SelectChannel@ret 0059  
                              ?_lcd_8bit_intialize 00AF                             ADC_StartConversion@ret 0054  
                                       __pbssBANK0 00B5                              _INT0_InterruptHandler 002B  
                                       ??_INT0_ISR 0046                                         ??_INT1_ISR 0046  
                                       ??_INT2_ISR 0046                         ADC_GetConversionResult@ret 004D  
                    __end_of_application_intialize 2056                               ??_lcd_8bit_intialize 00B1  
                  _USART_TxDefaultInterruptHandler 0007                                         ??_TMR0_ISR 0046  
                                       ??_TMR1_ISR 0046                                         ??_TMR2_ISR 0046  
                                       ??_TMR3_ISR 0046                                  led_turn_off@F3058 0041  
                                          _ADC_ISR 1F0C                                  RB7_ISR@RB7_Source 0046  
                                          _RB4_ISR 2012                                            _RB5_ISR 1FF8  
                                          _RB6_ISR 1FDE                                            _RB7_ISR 1FC4  
                        _RB6_InterruptHandler_HIGH 001D                    ??_adc_input_channel_port_config 0052  
                                    ?_MSSP_I2C_ISR 0046                               led_turn_toggle@F3063 0040  
                                          i2u50_40 1FD8                                            i2u50_41 1FD4  
                                          i2u47_40 2026                                            i2u47_41 2022  
                                          i2u48_40 200C                                            i2u48_41 2008  
                                          i2u49_40 1FF2                                            i2u49_41 1FEE  
              __end_of_lcd_8bit_send_enable_signal 1ED6                        _lcd_8bit_send_enable_signal 1EA0  
                                       _btn_values 1001                     lcd_8bit_send_enable_signal@lcd 005C  
                   lcd_8bit_send_enable_signal@ret 005E                                     _tris_registers 008A  
                         _RB6_InterruptHandler_LOW 001B                      ??_lcd_8bit_send_enable_signal 005E  
                                ??_MSSP_I2C_BC_ISR 0046                               _ADC_InterruptHandler 0039  
                                          __Hparam 0000                                       ADC_Init@_adc 0055  
                                          __Lparam 0000                                _ecu_layer_intialize 1F8A  
                            _lcd_8bit_send_command 1B5C                                       __psmallconst 1000  
                        ??_ADC_GetConversionResult 004A                         __end_of_gpio_pin_intialize 1CCE  
                                          __pcinit 1D36                               _select_result_format 1DE4  
                                          __ramtop 1000                                            __ptext0 1FA8  
                                          __ptext1 2044                                            __ptext2 1F8A  
                                          __ptext3 1560                                            __ptext4 1B5C  
                                          __ptext5 1EA0                                            __ptext6 169A  
                                          __ptext7 1BF0                                            __ptext8 1CCE  
                                          __ptext9 1ED6                                          _T0CONbits 0FD5  
                                        _T1CONbits 0FCD                                     ??_MSSP_I2C_ISR 0046  
                                        _T2CONbits 0FCA                                          _T3CONbits 0FB1  
                             ?_ecu_layer_intialize 0046              lcd_8bit_intialize@l_data_pins_counter 00B3  
            lcd_4bit_intialize@l_data_pins_counter 00AF                                     __pintcode_body 1016  
                             end_of_initialization 1D90                                  lcd_send_4bits@lcd 005C  
                                lcd_send_4bits@ret 005F                           select_result_format@_adc 0052  
                                          int_func 1016                         __end_of_lcd_4bit_intialize 17D4  
                          ??_lcd_4bit_send_command 0063                              gpio_pin_intialize@ret 005F  
                                        _RCSTAbits 0FAB                                            postdec1 0FE5  
                                          postdec2 0FDD                                            postinc0 0FEE  
                                          postinc2 0FDE                              ?_select_result_format 0052  
                 ADC_StartConversion_Interrupt@ret 005D                              _INT1_InterruptHandler 0029  
                                        _PORTBbits 0F81                                   _InterruptManager 0008  
                    gpio_pin_intialize@_pin_config 005C                              ??_ecu_layer_intialize 0064  
             __end_of_gpio_pin_direction_intialize 1560                       _gpio_pin_direction_intialize 141C  
              __end_of_ADC_DefaultInterruptHandler 2044                        _ADC_DefaultInterruptHandler 202C  
                                        _TRISCbits 0F94                                _ADC_StartConversion 1F66  
            __end_of_adc_input_channel_port_config 19D8                      _adc_input_channel_port_config 1900  
                                    ?_USART_RX_ISR 0046                                      ?_USART_TX_ISR 0046  
                    ??_ADC_DefaultInterruptHandler 004E                                        _CCP1CONbits 0FBD  
                                      _CCP2CONbits 0FBA                                          _TXSTAbits 0FAC  
                               relay_turn_on@F3047 003E                             ?_lcd_8bit_send_command 005F  
                             ?_ADC_StartConversion 0052                      convert_uint16_to_string@F3198 00B5  
                                      _BAUDCONbits 0FB8                                      __pidataCOMRAM 2056  
                ADC_StartConversion_Interrupt@_adc 005A                                     _timer0_preload 0015  
                                   _timer1_preload 0011                                     _timer2_preload 003C  
                     ?_configure_voltage_reference 0052                                start_initialization 1D36  
                                   _timer3_preload 000B                       ?_lcd_4bit_send_enable_signal 005C  
                    ?_gpio_pin_direction_intialize 0052                                     ??_USART_RX_ISR 0046  
                                   ??_USART_TX_ISR 0046           ADC_GetConversionResult@conversion_result 0048  
                        _USART_OverrunErrorHandler 0001                              ADC_SelectChannel@_adc 0055  
             ADC_StartConversion_Interrupt@channel 005C                               __end_of_MSSP_I2C_ISR 2098  
                            ??_ADC_StartConversion 0054                             ??_select_result_format 0054  
                                      __pdataBANK0 0080                                           ?_ADC_ISR 0046  
                     lcd_4bit_send_command@command 0062                           lcd_8bit_send_command@lcd 005F  
                         lcd_8bit_send_command@ret 0062                            ADC_StartConversion@_adc 0052  
                                         ?_RB4_ISR 0046                                           ?_RB5_ISR 0046  
                                         ?_RB6_ISR 0046                                           ?_RB7_ISR 0046  
                                      __pbssCOMRAM 0001   _MSSP_I2C_Report_Write_Collision_InterruptHandler 002F  
                                    __pcstackBANK0 00AB                      ??_configure_voltage_reference 0054  
                                  _MSSP_I2C_BC_ISR 2098                        ADC_GetConversionResult@_adc 0046  
                            _INT2_InterruptHandler 0027                    _USART_RxDefaultInterruptHandler 0005  
                  gpio_pin_direction_intialize@ret 005A                              _TMR0_InterruptHandler 0013  
                            _application_intialize 2044                                          __pintcode 0008  
                                _ADC_SelectChannel 1E66                    gpio_pin_write_logic@_pin_config 0052  
                               ?_ADC_SelectChannel 0055                          gpio_pin_write_logic@logic 0054  
                                      __smallconst 1000                          _RB4_InterruptHandler_HIGH 0025  
                                         _CCP1_ISR 20AC                                           _CCP2_ISR 20A8  
                              ??_ADC_SelectChannel 0058                                           _ADC_Init 1A9C  
                        _RB7_InterruptHandler_HIGH 0019                                        ADC_Init@ret 0058  
                               _gpio_pin_intialize 1C62                     ??_gpio_pin_direction_intialize 0054  
                         _RB5_InterruptHandler_LOW 001F                                           _INT0_ISR 20A4  
                                         _INT1_ISR 20A0                                           _INT2_ISR 209C  
                                         _RB4_Flag 0071                                           _RB5_Flag 0070  
                                         _RB6_Flag 006F                                           _RB7_Flag 006E  
                                RB4_ISR@RB4_Source 0046                                ?_gpio_pin_intialize 005C  
                         __end_of_InterruptManager 141C                                           _PIE1bits 0F9D  
                                         _PIE2bits 0FA0                          __end_of_ADC_SelectChannel 1EA0  
                    __end_of_lcd_4bit_send_command 1C62                                           i2u330_40 19EA  
                                         i2u330_41 19E6                                           i2u331_40 19FC  
                                         i2u331_41 19F8                                           i2u332_40 1A1E  
                                         i2u332_41 1A1A                                           i2u333_40 1A60  
                                         i2u333_41 1A5C                                           i2u430_40 1084  
                                         i2u430_41 1080                                           i2u334_45 1A78  
                                         i2u431_40 1096                                           i2u431_41 1092  
                                         i2u440_40 112C                                           i2u432_40 10A4  
                                         i2u440_41 1128                                           i2u432_41 10A0  
                                         i2u441_40 113A                                           i2u433_40 10B2  
                                         i2u425_40 1036                                           i2u441_41 1136  
                                         i2u433_41 10AE                                           i2u425_41 1032  
                                         _PIR1bits 0F9E                                           i2u450_40 11D2  
                                         i2u442_40 114A                                           i2u434_40 10C2  
                                         i2u426_40 1044                                           i2u450_41 11CE  
                                         i2u442_41 1146                                           i2u434_41 10BE  
                                         i2u426_41 1040                                           i2u347_40 1F20  
                                         i2u451_40 11EA                                           i2u443_40 1162  
                                         i2u435_40 10DA                                           i2u427_40 1056  
                                         i2u347_41 1F1C                                           i2u451_41 11E6  
                                         i2u443_41 115E                                           i2u435_41 10D6  
                                         i2u427_41 1052                                           _PIR2bits 0FA1  
                                         i2u460_40 1280                                           i2u452_40 11F8  
                                         i2u444_40 1170                                           i2u436_40 10E8  
                                         i2u428_40 1064                                           i2u460_41 127C  
                                         i2u452_41 11F4                                           i2u444_41 116C  
                                         i2u436_41 10E4                                           i2u428_41 1060  
                                         i2u348_48 1F26                                           i2u461_40 128E  
                                         i2u453_40 1206                                           i2u445_40 117E  
                                         i2u437_40 10F6                                           i2u429_40 1076  
                                         i2u348_49 1F38                                           i2u461_41 128A  
                                         i2u453_41 1202                                           i2u445_41 117A  
                                         i2u437_41 10F2                                           i2u429_41 1072  
                                         i2u470_40 1324                                           i2u462_40 129E  
                                         i2u454_40 1216                                           i2u446_40 118E  
                                         i2u438_40 1106                                           i2u470_41 1320  
                                         i2u462_41 129A                                           i2u454_41 1212  
                                         i2u446_41 118A                                           i2u438_41 1102  
                                         i2u471_40 1336                                           i2u463_40 12B6  
                                         i2u455_40 122E                                           i2u447_40 11A6  
                                         i2u439_40 111E                                           i2u471_41 1332  
                                         i2u463_41 12B2                                           i2u455_41 122A  
                                         i2u447_41 11A2                                           i2u439_41 111A  
                                         i2u480_40 13C4                                           i2u472_40 1344  
                                         i2u464_40 12C4                                           i2u456_40 123C  
                                         i2u448_40 11B4                                           i2u480_41 13C0  
                                         i2u472_41 1340                                           i2u464_41 12C0  
                                         i2u456_41 1238                                           i2u448_41 11B0  
                                         i2u481_40 13D6                                           i2u473_40 1356  
                                         i2u465_40 12D6                                           i2u457_40 124A  
                                         i2u449_40 11C2                                           i2u481_41 13D2  
                                         i2u473_41 1352                                           i2u465_41 12D2  
                                         i2u457_41 1246                                           i2u449_41 11BE  
                                         i2u482_40 13E4                                           i2u474_40 1364  
                                         i2u466_40 12E4                                           i2u458_40 125A  
                                         i2u482_41 13E0                                           i2u474_41 1360  
                                         i2u466_41 12E0                                           i2u458_41 1256  
                                         i2u483_40 13F6                                           i2u475_40 1376  
                                         i2u467_40 12F6                                           i2u459_40 1272  
                                         i2u483_41 13F2                                           i2u475_41 1372  
                                         i2u467_41 12F2                                           i2u459_41 126E  
                                         i2u484_40 1404                                           i2u476_40 1384  
                                         i2u468_40 1304                                           i2u484_41 1400  
                                         i2u476_41 1380                                           i2u468_41 1300  
                                         i2u477_40 1396                                           i2u469_40 1316  
                                         i2u477_41 1392                                           i2u469_41 1312  
                                         i2u478_40 13A4                                           i2u478_41 13A0  
                                         i2u479_40 13B6                                           i2u479_41 13B2  
                  ??_ADC_StartConversion_Interrupt 005D                     fp__ADC_DefaultInterruptHandler 0000  
                                         _TMR0_ISR 207C                                           _TMR1_ISR 2070  
                                         _TMR2_ISR 2088                                           _TMR3_ISR 2064  
                             __end_of_USART_RX_ISR 20B2                              lcd_8bit_intialize@lcd 00AF  
                             __end_of_USART_TX_ISR 2094                                 _lcd_4bit_intialize 169A  
                            lcd_8bit_intialize@ret 00B4                                         _ADCON0bits 0FC2  
                                       _ADCON1bits 0FC1                                         _ADCON2bits 0FC0  
                          __end_of_MSSP_I2C_BC_ISR 209C                               ??_gpio_pin_intialize 005E  
                         ADC_SelectChannel@channel 0057                                ?_lcd_4bit_intialize 00AB  
                 _MSSP_I2C_DefaultInterruptHandler 0031                            gpio_pin_write_logic@ret 005B  
                                      _INTCON2bits 0FF1                                        _INTCON3bits 0FF0  
                                        copy_data0 1D4A                                          copy_data1 1D6A  
                          ??_lcd_8bit_send_command 00AB                                         _EECON1bits 0FA6  
                           ?_application_intialize 0046                               ??_lcd_4bit_intialize 00AD  
                                         __Hrparam 0000                                           __Lrparam 0000  
                         ?_ADC_GetConversionResult 0046                                  RB6_ISR@RB6_Source 0046  
                            _CCP1_InterruptHandler 0037                        __end_of_ecu_layer_intialize 1FA8  
                                         _adc_flag 003B                                 __end_of_btn_values 1011  
                            _TMR1_InterruptHandler 000F                                       _MSSP_I2C_ISR 2094  
                                         __ptext10 1C62                                           __ptext11 17D4  
                                         __ptext12 141C                                           __ptext21 2090  
                                         __ptext13 1A9C                                           __ptext30 2012  
                                         __ptext22 20B0                                           __ptext14 1DE4  
                                         __ptext31 2094                                           __ptext23 2064  
                                         __ptext15 1D9A                                           __ptext40 19D8  
                                         __ptext32 2098                                           __ptext24 2088  
                                         __ptext16 1E28                                           __ptext41 0000  
                                         __ptext33 209C                                           __ptext25 2070  
                                         __ptext17 1F66                                           __ptext34 20A0  
                                         __ptext26 207C                                           __ptext18 1E66  
                                         __ptext35 20A4                                           __ptext27 1FC4  
                                         __ptext19 1900                                           __ptext36 20A8  
                                         __ptext28 1FDE                                           __ptext37 20AC  
                                         __ptext29 1FF8                                           __ptext38 1F0C  
                                         __ptext39 202C                    configure_voltage_reference@_adc 0052  
                                         isa$xinst 0000                                           int$flags 0072  
                                   _lcd_send_4bits 1CCE              __end_of_ADC_StartConversion_Interrupt 1E66  
                    _ADC_StartConversion_Interrupt 1E28                                   ?_MSSP_I2C_BC_ISR 0046  
                                       _INTCONbits 0FF2                       __end_of_gpio_pin_write_logic 1900  
                     ?_lcd_8bit_send_enable_signal 005C                                           intlevel2 0000  
                      __end_of_ADC_StartConversion 1F8A                     lcd_4bit_send_enable_signal@lcd 005C  
                   lcd_4bit_send_enable_signal@ret 005E                    __end_of_ADC_GetConversionResult 1A9C  
                           __end_of_lcd_send_4bits 1D36               adc_input_channel_port_config@channel 0054  
                                   _port_registers 0080                                        _SSPCON1bits 0FC6  
                                      _SSPCON2bits 0FC5                    CCP_Set_Compare_Mode_Value@F3106 0033  
                            _CCP2_InterruptHandler 0035                                       _USART_RX_ISR 20B0  
                                     _USART_TX_ISR 2090                       lcd_8bit_send_command@command 0061  
                            _TMR2_InterruptHandler 000D                                  ?_InterruptManager 0046  
                       __end_of_lcd_8bit_intialize 169A  
